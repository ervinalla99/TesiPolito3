{
  "version": 3,
  "sources": ["../../@thatopen/components/dist/index.mjs"],
  "sourcesContent": ["var kn = Object.defineProperty;\nvar Xn = (l, s, t) => s in l ? kn(l, s, { enumerable: !0, configurable: !0, writable: !0, value: t }) : l[s] = t;\nvar I = (l, s, t) => (Xn(l, typeof s != \"symbol\" ? s + \"\" : s, t), t);\nimport * as O from \"three\";\nimport { BufferAttribute as Pn, Vector3 as M, Vector2 as fe, Plane as Fi, Line3 as yt, Triangle as ue, Sphere as Zn, Matrix4 as Lt, Box3 as gt, BackSide as Qn, DoubleSide as yn, FrontSide as wi, Mesh as v, Ray as jn, Raycaster as qn, Quaternion as Pt, Object3D as ri, Euler as Kn, MeshBasicMaterial as Ln, LineBasicMaterial as $n, CylinderGeometry as ct, BoxGeometry as rt, BufferGeometry as Di, Float32BufferAttribute as Ui, OctahedronGeometry as Ze, Line as Dt, SphereGeometry as Jn, TorusGeometry as Re, PlaneGeometry as to } from \"three\";\nimport * as Vt from \"@thatopen/fragments\";\nimport { Serializer as eo } from \"@thatopen/fragments\";\nimport * as x from \"web-ifc\";\nconst Mn = 0, so = 1, io = 2, xi = 2, Ys = 1.25, bi = 1, Cs = 6 * 4 + 4 + 4, Us = 65535, no = Math.pow(2, -24), Vs = Symbol(\"SKIP_GENERATION\");\nfunction oo(l) {\n  return l.index ? l.index.count : l.attributes.position.count;\n}\nfunction Ce(l) {\n  return oo(l) / 3;\n}\nfunction ro(l, s = ArrayBuffer) {\n  return l > 65535 ? new Uint32Array(new s(4 * l)) : new Uint16Array(new s(2 * l));\n}\nfunction ao(l, s) {\n  if (!l.index) {\n    const t = l.attributes.position.count, e = s.useSharedArrayBuffer ? SharedArrayBuffer : ArrayBuffer, i = ro(t, e);\n    l.setIndex(new Pn(i, 1));\n    for (let o = 0; o < t; o++)\n      i[o] = o;\n  }\n}\nfunction wn(l) {\n  const s = Ce(l), t = l.drawRange, e = t.start / 3, i = (t.start + t.count) / 3, o = Math.max(0, e), n = Math.min(s, i) - o;\n  return [{\n    offset: Math.floor(o),\n    count: Math.floor(n)\n  }];\n}\nfunction Dn(l) {\n  if (!l.groups || !l.groups.length)\n    return wn(l);\n  const s = [], t = /* @__PURE__ */ new Set(), e = l.drawRange, i = e.start / 3, o = (e.start + e.count) / 3;\n  for (const r of l.groups) {\n    const a = r.start / 3, c = (r.start + r.count) / 3;\n    t.add(Math.max(i, a)), t.add(Math.min(o, c));\n  }\n  const n = Array.from(t.values()).sort((r, a) => r - a);\n  for (let r = 0; r < n.length - 1; r++) {\n    const a = n[r], c = n[r + 1];\n    s.push({\n      offset: Math.floor(a),\n      count: Math.floor(c - a)\n    });\n  }\n  return s;\n}\nfunction co(l) {\n  if (l.groups.length === 0)\n    return !1;\n  const s = Ce(l), t = Dn(l).sort((o, n) => o.offset - n.offset), e = t[t.length - 1];\n  e.count = Math.min(s - e.offset, e.count);\n  let i = 0;\n  return t.forEach(({ count: o }) => i += o), s !== i;\n}\nfunction K(l, s, t) {\n  return t.min.x = s[l], t.min.y = s[l + 1], t.min.z = s[l + 2], t.max.x = s[l + 3], t.max.y = s[l + 4], t.max.z = s[l + 5], t;\n}\nfunction lo(l) {\n  l[0] = l[1] = l[2] = 1 / 0, l[3] = l[4] = l[5] = -1 / 0;\n}\nfunction vi(l) {\n  let s = -1, t = -1 / 0;\n  for (let e = 0; e < 3; e++) {\n    const i = l[e + 3] - l[e];\n    i > t && (t = i, s = e);\n  }\n  return s;\n}\nfunction Bi(l, s) {\n  s.set(l);\n}\nfunction Yi(l, s, t) {\n  let e, i;\n  for (let o = 0; o < 3; o++) {\n    const n = o + 3;\n    e = l[o], i = s[o], t[o] = e < i ? e : i, e = l[n], i = s[n], t[n] = e > i ? e : i;\n  }\n}\nfunction Qe(l, s, t) {\n  for (let e = 0; e < 3; e++) {\n    const i = s[l + 2 * e], o = s[l + 2 * e + 1], n = i - o, r = i + o;\n    n < t[e] && (t[e] = n), r > t[e + 3] && (t[e + 3] = r);\n  }\n}\nfunction Ae(l) {\n  const s = l[3] - l[0], t = l[4] - l[1], e = l[5] - l[2];\n  return 2 * (s * t + t * e + e * s);\n}\nfunction Gs(l, s, t, e, i = null) {\n  let o = 1 / 0, n = 1 / 0, r = 1 / 0, a = -1 / 0, c = -1 / 0, h = -1 / 0, d = 1 / 0, E = 1 / 0, u = 1 / 0, f = -1 / 0, T = -1 / 0, R = -1 / 0;\n  const C = i !== null;\n  for (let A = s * 6, F = (s + t) * 6; A < F; A += 6) {\n    const p = l[A + 0], m = l[A + 1], g = p - m, S = p + m;\n    g < o && (o = g), S > a && (a = S), C && p < d && (d = p), C && p > f && (f = p);\n    const _ = l[A + 2], N = l[A + 3], y = _ - N, w = _ + N;\n    y < n && (n = y), w > c && (c = w), C && _ < E && (E = _), C && _ > T && (T = _);\n    const L = l[A + 4], U = l[A + 5], b = L - U, B = L + U;\n    b < r && (r = b), B > h && (h = B), C && L < u && (u = L), C && L > R && (R = L);\n  }\n  e[0] = o, e[1] = n, e[2] = r, e[3] = a, e[4] = c, e[5] = h, C && (i[0] = d, i[1] = E, i[2] = u, i[3] = f, i[4] = T, i[5] = R);\n}\nfunction ho(l, s, t, e) {\n  let i = 1 / 0, o = 1 / 0, n = 1 / 0, r = -1 / 0, a = -1 / 0, c = -1 / 0;\n  for (let h = s * 6, d = (s + t) * 6; h < d; h += 6) {\n    const E = l[h + 0];\n    E < i && (i = E), E > r && (r = E);\n    const u = l[h + 2];\n    u < o && (o = u), u > a && (a = u);\n    const f = l[h + 4];\n    f < n && (n = f), f > c && (c = f);\n  }\n  e[0] = i, e[1] = o, e[2] = n, e[3] = r, e[4] = a, e[5] = c;\n}\nfunction Eo(l, s) {\n  lo(s);\n  const t = l.attributes.position, e = l.index ? l.index.array : null, i = Ce(l), o = new Float32Array(i * 6), n = t.normalized, r = t.array, a = t.offset || 0;\n  let c = 3;\n  t.isInterleavedBufferAttribute && (c = t.data.stride);\n  const h = [\"getX\", \"getY\", \"getZ\"];\n  for (let d = 0; d < i; d++) {\n    const E = d * 3, u = d * 6;\n    let f = E + 0, T = E + 1, R = E + 2;\n    e && (f = e[f], T = e[T], R = e[R]), n || (f = f * c + a, T = T * c + a, R = R * c + a);\n    for (let C = 0; C < 3; C++) {\n      let A, F, p;\n      n ? (A = t[h[C]](f), F = t[h[C]](T), p = t[h[C]](R)) : (A = r[f + C], F = r[T + C], p = r[R + C]);\n      let m = A;\n      F < m && (m = F), p < m && (m = p);\n      let g = A;\n      F > g && (g = F), p > g && (g = p);\n      const S = (g - m) / 2, _ = C * 2;\n      o[u + _ + 0] = m + S, o[u + _ + 1] = S + (Math.abs(m) + S) * no, m < s[C] && (s[C] = m), g > s[C + 3] && (s[C + 3] = g);\n    }\n  }\n  return o;\n}\nconst Mt = 32, uo = (l, s) => l.candidate - s.candidate, Ut = new Array(Mt).fill().map(() => ({\n  count: 0,\n  bounds: new Float32Array(6),\n  rightCacheBounds: new Float32Array(6),\n  leftCacheBounds: new Float32Array(6),\n  candidate: 0\n})), je = new Float32Array(6);\nfunction Io(l, s, t, e, i, o) {\n  let n = -1, r = 0;\n  if (o === Mn)\n    n = vi(s), n !== -1 && (r = (s[n] + s[n + 3]) / 2);\n  else if (o === so)\n    n = vi(l), n !== -1 && (r = fo(t, e, i, n));\n  else if (o === io) {\n    const a = Ae(l);\n    let c = Ys * i;\n    const h = e * 6, d = (e + i) * 6;\n    for (let E = 0; E < 3; E++) {\n      const u = s[E], R = (s[E + 3] - u) / Mt;\n      if (i < Mt / 4) {\n        const C = [...Ut];\n        C.length = i;\n        let A = 0;\n        for (let p = h; p < d; p += 6, A++) {\n          const m = C[A];\n          m.candidate = t[p + 2 * E], m.count = 0;\n          const {\n            bounds: g,\n            leftCacheBounds: S,\n            rightCacheBounds: _\n          } = m;\n          for (let N = 0; N < 3; N++)\n            _[N] = 1 / 0, _[N + 3] = -1 / 0, S[N] = 1 / 0, S[N + 3] = -1 / 0, g[N] = 1 / 0, g[N + 3] = -1 / 0;\n          Qe(p, t, g);\n        }\n        C.sort(uo);\n        let F = i;\n        for (let p = 0; p < F; p++) {\n          const m = C[p];\n          for (; p + 1 < F && C[p + 1].candidate === m.candidate; )\n            C.splice(p + 1, 1), F--;\n        }\n        for (let p = h; p < d; p += 6) {\n          const m = t[p + 2 * E];\n          for (let g = 0; g < F; g++) {\n            const S = C[g];\n            m >= S.candidate ? Qe(p, t, S.rightCacheBounds) : (Qe(p, t, S.leftCacheBounds), S.count++);\n          }\n        }\n        for (let p = 0; p < F; p++) {\n          const m = C[p], g = m.count, S = i - m.count, _ = m.leftCacheBounds, N = m.rightCacheBounds;\n          let y = 0;\n          g !== 0 && (y = Ae(_) / a);\n          let w = 0;\n          S !== 0 && (w = Ae(N) / a);\n          const L = bi + Ys * (y * g + w * S);\n          L < c && (n = E, c = L, r = m.candidate);\n        }\n      } else {\n        for (let F = 0; F < Mt; F++) {\n          const p = Ut[F];\n          p.count = 0, p.candidate = u + R + F * R;\n          const m = p.bounds;\n          for (let g = 0; g < 3; g++)\n            m[g] = 1 / 0, m[g + 3] = -1 / 0;\n        }\n        for (let F = h; F < d; F += 6) {\n          let g = ~~((t[F + 2 * E] - u) / R);\n          g >= Mt && (g = Mt - 1);\n          const S = Ut[g];\n          S.count++, Qe(F, t, S.bounds);\n        }\n        const C = Ut[Mt - 1];\n        Bi(C.bounds, C.rightCacheBounds);\n        for (let F = Mt - 2; F >= 0; F--) {\n          const p = Ut[F], m = Ut[F + 1];\n          Yi(p.bounds, m.rightCacheBounds, p.rightCacheBounds);\n        }\n        let A = 0;\n        for (let F = 0; F < Mt - 1; F++) {\n          const p = Ut[F], m = p.count, g = p.bounds, _ = Ut[F + 1].rightCacheBounds;\n          m !== 0 && (A === 0 ? Bi(g, je) : Yi(g, je, je)), A += m;\n          let N = 0, y = 0;\n          A !== 0 && (N = Ae(je) / a);\n          const w = i - A;\n          w !== 0 && (y = Ae(_) / a);\n          const L = bi + Ys * (N * A + y * w);\n          L < c && (n = E, c = L, r = p.candidate);\n        }\n      }\n    }\n  } else\n    console.warn(`MeshBVH: Invalid build strategy value ${o} used.`);\n  return { axis: n, pos: r };\n}\nfunction fo(l, s, t, e) {\n  let i = 0;\n  for (let o = s, n = s + t; o < n; o++)\n    i += l[o * 6 + e * 2];\n  return i / t;\n}\nclass qe {\n  constructor() {\n  }\n}\nfunction po(l, s, t, e, i, o) {\n  let n = e, r = e + i - 1;\n  const a = o.pos, c = o.axis * 2;\n  for (; ; ) {\n    for (; n <= r && t[n * 6 + c] < a; )\n      n++;\n    for (; n <= r && t[r * 6 + c] >= a; )\n      r--;\n    if (n < r) {\n      for (let h = 0; h < 3; h++) {\n        let d = s[n * 3 + h];\n        s[n * 3 + h] = s[r * 3 + h], s[r * 3 + h] = d;\n      }\n      for (let h = 0; h < 6; h++) {\n        let d = t[n * 6 + h];\n        t[n * 6 + h] = t[r * 6 + h], t[r * 6 + h] = d;\n      }\n      n++, r--;\n    } else\n      return n;\n  }\n}\nfunction Co(l, s, t, e, i, o) {\n  let n = e, r = e + i - 1;\n  const a = o.pos, c = o.axis * 2;\n  for (; ; ) {\n    for (; n <= r && t[n * 6 + c] < a; )\n      n++;\n    for (; n <= r && t[r * 6 + c] >= a; )\n      r--;\n    if (n < r) {\n      let h = l[n];\n      l[n] = l[r], l[r] = h;\n      for (let d = 0; d < 6; d++) {\n        let E = t[n * 6 + d];\n        t[n * 6 + d] = t[r * 6 + d], t[r * 6 + d] = E;\n      }\n      n++, r--;\n    } else\n      return n;\n  }\n}\nfunction To(l, s) {\n  const t = (l.index ? l.index.count : l.attributes.position.count) / 3, e = t > 2 ** 16, i = e ? 4 : 2, o = s ? new SharedArrayBuffer(t * i) : new ArrayBuffer(t * i), n = e ? new Uint32Array(o) : new Uint16Array(o);\n  for (let r = 0, a = n.length; r < a; r++)\n    n[r] = r;\n  return n;\n}\nfunction mo(l, s) {\n  const t = l.geometry, e = t.index ? t.index.array : null, i = s.maxDepth, o = s.verbose, n = s.maxLeafTris, r = s.strategy, a = s.onProgress, c = Ce(t), h = l._indirectBuffer;\n  let d = !1;\n  const E = new Float32Array(6), u = new Float32Array(6), f = Eo(t, E), T = s.indirect ? Co : po, R = [], C = s.indirect ? wn(t) : Dn(t);\n  if (C.length === 1) {\n    const p = C[0], m = new qe();\n    m.boundingData = E, ho(f, p.offset, p.count, u), F(m, p.offset, p.count, u), R.push(m);\n  } else\n    for (let p of C) {\n      const m = new qe();\n      m.boundingData = new Float32Array(6), Gs(f, p.offset, p.count, m.boundingData, u), F(m, p.offset, p.count, u), R.push(m);\n    }\n  return R;\n  function A(p) {\n    a && a(p / c);\n  }\n  function F(p, m, g, S = null, _ = 0) {\n    if (!d && _ >= i && (d = !0, o && (console.warn(`MeshBVH: Max depth of ${i} reached when generating BVH. Consider increasing maxDepth.`), console.warn(t))), g <= n || _ >= i)\n      return A(m + g), p.offset = m, p.count = g, p;\n    const N = Io(p.boundingData, S, f, m, g, r);\n    if (N.axis === -1)\n      return A(m + g), p.offset = m, p.count = g, p;\n    const y = T(h, e, f, m, g, N);\n    if (y === m || y === m + g)\n      A(m + g), p.offset = m, p.count = g;\n    else {\n      p.splitAxis = N.axis;\n      const w = new qe(), L = m, U = y - m;\n      p.left = w, w.boundingData = new Float32Array(6), Gs(f, L, U, w.boundingData, u), F(w, L, U, u, _ + 1);\n      const b = new qe(), B = y, H = g - U;\n      p.right = b, b.boundingData = new Float32Array(6), Gs(f, B, H, b.boundingData, u), F(b, B, H, u, _ + 1);\n    }\n    return p;\n  }\n}\nfunction Ro(l, s) {\n  const t = l.geometry;\n  s.indirect && (l._indirectBuffer = To(t, s.useSharedArrayBuffer), co(t) && !s.verbose && console.warn(\n    'MeshBVH: Provided geometry contains groups that do not fully span the vertex contents while using the \"indirect\" option. BVH may incorrectly report intersections on unrendered portions of the geometry.'\n  )), l._indirectBuffer || ao(t, s);\n  const e = mo(l, s);\n  let i, o, n;\n  const r = [], a = s.useSharedArrayBuffer ? SharedArrayBuffer : ArrayBuffer;\n  for (let d = 0; d < e.length; d++) {\n    const E = e[d];\n    let u = c(E);\n    const f = new a(Cs * u);\n    i = new Float32Array(f), o = new Uint32Array(f), n = new Uint16Array(f), h(0, E), r.push(f);\n  }\n  l._roots = r;\n  return;\n  function c(d) {\n    return d.count ? 1 : 1 + c(d.left) + c(d.right);\n  }\n  function h(d, E) {\n    const u = d / 4, f = d / 2, T = !!E.count, R = E.boundingData;\n    for (let C = 0; C < 6; C++)\n      i[u + C] = R[C];\n    if (T) {\n      const C = E.offset, A = E.count;\n      return o[u + 6] = C, n[f + 14] = A, n[f + 15] = Us, d + Cs;\n    } else {\n      const C = E.left, A = E.right, F = E.splitAxis;\n      let p;\n      if (p = h(d + Cs, C), p / 4 > Math.pow(2, 32))\n        throw new Error(\"MeshBVH: Cannot store child pointer greater than 32 bits.\");\n      return o[u + 6] = p / 4, p = h(p, A), o[u + 7] = F, p;\n    }\n  }\n}\nclass wt {\n  constructor() {\n    this.min = 1 / 0, this.max = -1 / 0;\n  }\n  setFromPointsField(s, t) {\n    let e = 1 / 0, i = -1 / 0;\n    for (let o = 0, n = s.length; o < n; o++) {\n      const a = s[o][t];\n      e = a < e ? a : e, i = a > i ? a : i;\n    }\n    this.min = e, this.max = i;\n  }\n  setFromPoints(s, t) {\n    let e = 1 / 0, i = -1 / 0;\n    for (let o = 0, n = t.length; o < n; o++) {\n      const r = t[o], a = s.dot(r);\n      e = a < e ? a : e, i = a > i ? a : i;\n    }\n    this.min = e, this.max = i;\n  }\n  isSeparated(s) {\n    return this.min > s.max || s.min > this.max;\n  }\n}\nwt.prototype.setFromBox = function() {\n  const l = new M();\n  return function(t, e) {\n    const i = e.min, o = e.max;\n    let n = 1 / 0, r = -1 / 0;\n    for (let a = 0; a <= 1; a++)\n      for (let c = 0; c <= 1; c++)\n        for (let h = 0; h <= 1; h++) {\n          l.x = i.x * a + o.x * (1 - a), l.y = i.y * c + o.y * (1 - c), l.z = i.z * h + o.z * (1 - h);\n          const d = t.dot(l);\n          n = Math.min(d, n), r = Math.max(d, r);\n        }\n    this.min = n, this.max = r;\n  };\n}();\nconst Ao = function() {\n  const l = new M(), s = new M(), t = new M();\n  return function(i, o, n) {\n    const r = i.start, a = l, c = o.start, h = s;\n    t.subVectors(r, c), l.subVectors(i.end, i.start), s.subVectors(o.end, o.start);\n    const d = t.dot(h), E = h.dot(a), u = h.dot(h), f = t.dot(a), R = a.dot(a) * u - E * E;\n    let C, A;\n    R !== 0 ? C = (d * E - f * u) / R : C = 0, A = (d + C * E) / u, n.x = C, n.y = A;\n  };\n}(), gi = function() {\n  const l = new fe(), s = new M(), t = new M();\n  return function(i, o, n, r) {\n    Ao(i, o, l);\n    let a = l.x, c = l.y;\n    if (a >= 0 && a <= 1 && c >= 0 && c <= 1) {\n      i.at(a, n), o.at(c, r);\n      return;\n    } else if (a >= 0 && a <= 1) {\n      c < 0 ? o.at(0, r) : o.at(1, r), i.closestPointToPoint(r, !0, n);\n      return;\n    } else if (c >= 0 && c <= 1) {\n      a < 0 ? i.at(0, n) : i.at(1, n), o.closestPointToPoint(n, !0, r);\n      return;\n    } else {\n      let h;\n      a < 0 ? h = i.start : h = i.end;\n      let d;\n      c < 0 ? d = o.start : d = o.end;\n      const E = s, u = t;\n      if (i.closestPointToPoint(d, !0, s), o.closestPointToPoint(h, !0, t), E.distanceToSquared(d) <= u.distanceToSquared(h)) {\n        n.copy(E), r.copy(d);\n        return;\n      } else {\n        n.copy(h), r.copy(u);\n        return;\n      }\n    }\n  };\n}(), Fo = function() {\n  const l = new M(), s = new M(), t = new Fi(), e = new yt();\n  return function(o, n) {\n    const { radius: r, center: a } = o, { a: c, b: h, c: d } = n;\n    if (e.start = c, e.end = h, e.closestPointToPoint(a, !0, l).distanceTo(a) <= r || (e.start = c, e.end = d, e.closestPointToPoint(a, !0, l).distanceTo(a) <= r) || (e.start = h, e.end = d, e.closestPointToPoint(a, !0, l).distanceTo(a) <= r))\n      return !0;\n    const T = n.getPlane(t);\n    if (Math.abs(T.distanceToPoint(a)) <= r) {\n      const C = T.projectPoint(a, s);\n      if (n.containsPoint(C))\n        return !0;\n    }\n    return !1;\n  };\n}(), go = 1e-15;\nfunction zs(l) {\n  return Math.abs(l) < go;\n}\nclass Ft extends ue {\n  constructor(...s) {\n    super(...s), this.isExtendedTriangle = !0, this.satAxes = new Array(4).fill().map(() => new M()), this.satBounds = new Array(4).fill().map(() => new wt()), this.points = [this.a, this.b, this.c], this.sphere = new Zn(), this.plane = new Fi(), this.needsUpdate = !0;\n  }\n  intersectsSphere(s) {\n    return Fo(s, this);\n  }\n  update() {\n    const s = this.a, t = this.b, e = this.c, i = this.points, o = this.satAxes, n = this.satBounds, r = o[0], a = n[0];\n    this.getNormal(r), a.setFromPoints(r, i);\n    const c = o[1], h = n[1];\n    c.subVectors(s, t), h.setFromPoints(c, i);\n    const d = o[2], E = n[2];\n    d.subVectors(t, e), E.setFromPoints(d, i);\n    const u = o[3], f = n[3];\n    u.subVectors(e, s), f.setFromPoints(u, i), this.sphere.setFromPoints(this.points), this.plane.setFromNormalAndCoplanarPoint(r, s), this.needsUpdate = !1;\n  }\n}\nFt.prototype.closestPointToSegment = function() {\n  const l = new M(), s = new M(), t = new yt();\n  return function(i, o = null, n = null) {\n    const { start: r, end: a } = i, c = this.points;\n    let h, d = 1 / 0;\n    for (let E = 0; E < 3; E++) {\n      const u = (E + 1) % 3;\n      t.start.copy(c[E]), t.end.copy(c[u]), gi(t, i, l, s), h = l.distanceToSquared(s), h < d && (d = h, o && o.copy(l), n && n.copy(s));\n    }\n    return this.closestPointToPoint(r, l), h = r.distanceToSquared(l), h < d && (d = h, o && o.copy(l), n && n.copy(r)), this.closestPointToPoint(a, l), h = a.distanceToSquared(l), h < d && (d = h, o && o.copy(l), n && n.copy(a)), Math.sqrt(d);\n  };\n}();\nFt.prototype.intersectsTriangle = function() {\n  const l = new Ft(), s = new Array(3), t = new Array(3), e = new wt(), i = new wt(), o = new M(), n = new M(), r = new M(), a = new M(), c = new M(), h = new yt(), d = new yt(), E = new yt(), u = new M();\n  function f(T, R, C) {\n    const A = T.points;\n    let F = 0, p = -1;\n    for (let m = 0; m < 3; m++) {\n      const { start: g, end: S } = h;\n      g.copy(A[m]), S.copy(A[(m + 1) % 3]), h.delta(n);\n      const _ = zs(R.distanceToPoint(g));\n      if (zs(R.normal.dot(n)) && _) {\n        C.copy(h), F = 2;\n        break;\n      }\n      const N = R.intersectLine(h, u);\n      if (!N && _ && u.copy(g), (N || _) && !zs(u.distanceTo(S))) {\n        if (F <= 1)\n          (F === 1 ? C.start : C.end).copy(u), _ && (p = F);\n        else if (F >= 2) {\n          (p === 1 ? C.start : C.end).copy(u), F = 2;\n          break;\n        }\n        if (F++, F === 2 && p === -1)\n          break;\n      }\n    }\n    return F;\n  }\n  return function(R, C = null, A = !1) {\n    this.needsUpdate && this.update(), R.isExtendedTriangle ? R.needsUpdate && R.update() : (l.copy(R), l.update(), R = l);\n    const F = this.plane, p = R.plane;\n    if (Math.abs(F.normal.dot(p.normal)) > 1 - 1e-10) {\n      const m = this.satBounds, g = this.satAxes;\n      t[0] = R.a, t[1] = R.b, t[2] = R.c;\n      for (let N = 0; N < 4; N++) {\n        const y = m[N], w = g[N];\n        if (e.setFromPoints(w, t), y.isSeparated(e))\n          return !1;\n      }\n      const S = R.satBounds, _ = R.satAxes;\n      s[0] = this.a, s[1] = this.b, s[2] = this.c;\n      for (let N = 0; N < 4; N++) {\n        const y = S[N], w = _[N];\n        if (e.setFromPoints(w, s), y.isSeparated(e))\n          return !1;\n      }\n      for (let N = 0; N < 4; N++) {\n        const y = g[N];\n        for (let w = 0; w < 4; w++) {\n          const L = _[w];\n          if (o.crossVectors(y, L), e.setFromPoints(o, s), i.setFromPoints(o, t), e.isSeparated(i))\n            return !1;\n        }\n      }\n      return C && (A || console.warn(\"ExtendedTriangle.intersectsTriangle: Triangles are coplanar which does not support an output edge. Setting edge to 0, 0, 0.\"), C.start.set(0, 0, 0), C.end.set(0, 0, 0)), !0;\n    } else {\n      const m = f(this, p, d);\n      if (m === 1 && R.containsPoint(d.end))\n        return C && (C.start.copy(d.end), C.end.copy(d.end)), !0;\n      if (m !== 2)\n        return !1;\n      const g = f(R, F, E);\n      if (g === 1 && this.containsPoint(E.end))\n        return C && (C.start.copy(E.end), C.end.copy(E.end)), !0;\n      if (g !== 2)\n        return !1;\n      if (d.delta(r), E.delta(a), r.dot(a) < 0) {\n        let U = E.start;\n        E.start = E.end, E.end = U;\n      }\n      const S = d.start.dot(r), _ = d.end.dot(r), N = E.start.dot(r), y = E.end.dot(r), w = _ < N, L = S < y;\n      return S !== y && N !== _ && w === L ? !1 : (C && (c.subVectors(d.start, E.start), c.dot(r) > 0 ? C.start.copy(d.start) : C.start.copy(E.start), c.subVectors(d.end, E.end), c.dot(r) < 0 ? C.end.copy(d.end) : C.end.copy(E.end)), !0);\n    }\n  };\n}();\nFt.prototype.distanceToPoint = function() {\n  const l = new M();\n  return function(t) {\n    return this.closestPointToPoint(t, l), t.distanceTo(l);\n  };\n}();\nFt.prototype.distanceToTriangle = function() {\n  const l = new M(), s = new M(), t = [\"a\", \"b\", \"c\"], e = new yt(), i = new yt();\n  return function(n, r = null, a = null) {\n    const c = r || a ? e : null;\n    if (this.intersectsTriangle(n, c))\n      return (r || a) && (r && c.getCenter(r), a && c.getCenter(a)), 0;\n    let h = 1 / 0;\n    for (let d = 0; d < 3; d++) {\n      let E;\n      const u = t[d], f = n[u];\n      this.closestPointToPoint(f, l), E = f.distanceToSquared(l), E < h && (h = E, r && r.copy(l), a && a.copy(f));\n      const T = this[u];\n      n.closestPointToPoint(T, l), E = T.distanceToSquared(l), E < h && (h = E, r && r.copy(T), a && a.copy(l));\n    }\n    for (let d = 0; d < 3; d++) {\n      const E = t[d], u = t[(d + 1) % 3];\n      e.set(this[E], this[u]);\n      for (let f = 0; f < 3; f++) {\n        const T = t[f], R = t[(f + 1) % 3];\n        i.set(n[T], n[R]), gi(e, i, l, s);\n        const C = l.distanceToSquared(s);\n        C < h && (h = C, r && r.copy(l), a && a.copy(s));\n      }\n    }\n    return Math.sqrt(h);\n  };\n}();\nclass at {\n  constructor(s, t, e) {\n    this.isOrientedBox = !0, this.min = new M(), this.max = new M(), this.matrix = new Lt(), this.invMatrix = new Lt(), this.points = new Array(8).fill().map(() => new M()), this.satAxes = new Array(3).fill().map(() => new M()), this.satBounds = new Array(3).fill().map(() => new wt()), this.alignedSatBounds = new Array(3).fill().map(() => new wt()), this.needsUpdate = !1, s && this.min.copy(s), t && this.max.copy(t), e && this.matrix.copy(e);\n  }\n  set(s, t, e) {\n    this.min.copy(s), this.max.copy(t), this.matrix.copy(e), this.needsUpdate = !0;\n  }\n  copy(s) {\n    this.min.copy(s.min), this.max.copy(s.max), this.matrix.copy(s.matrix), this.needsUpdate = !0;\n  }\n}\nat.prototype.update = /* @__PURE__ */ function() {\n  return function() {\n    const s = this.matrix, t = this.min, e = this.max, i = this.points;\n    for (let c = 0; c <= 1; c++)\n      for (let h = 0; h <= 1; h++)\n        for (let d = 0; d <= 1; d++) {\n          const E = 1 * c | 2 * h | 4 * d, u = i[E];\n          u.x = c ? e.x : t.x, u.y = h ? e.y : t.y, u.z = d ? e.z : t.z, u.applyMatrix4(s);\n        }\n    const o = this.satBounds, n = this.satAxes, r = i[0];\n    for (let c = 0; c < 3; c++) {\n      const h = n[c], d = o[c], E = 1 << c, u = i[E];\n      h.subVectors(r, u), d.setFromPoints(h, i);\n    }\n    const a = this.alignedSatBounds;\n    a[0].setFromPointsField(i, \"x\"), a[1].setFromPointsField(i, \"y\"), a[2].setFromPointsField(i, \"z\"), this.invMatrix.copy(this.matrix).invert(), this.needsUpdate = !1;\n  };\n}();\nat.prototype.intersectsBox = function() {\n  const l = new wt();\n  return function(t) {\n    this.needsUpdate && this.update();\n    const e = t.min, i = t.max, o = this.satBounds, n = this.satAxes, r = this.alignedSatBounds;\n    if (l.min = e.x, l.max = i.x, r[0].isSeparated(l) || (l.min = e.y, l.max = i.y, r[1].isSeparated(l)) || (l.min = e.z, l.max = i.z, r[2].isSeparated(l)))\n      return !1;\n    for (let a = 0; a < 3; a++) {\n      const c = n[a], h = o[a];\n      if (l.setFromBox(c, t), h.isSeparated(l))\n        return !1;\n    }\n    return !0;\n  };\n}();\nat.prototype.intersectsTriangle = function() {\n  const l = new Ft(), s = new Array(3), t = new wt(), e = new wt(), i = new M();\n  return function(n) {\n    this.needsUpdate && this.update(), n.isExtendedTriangle ? n.needsUpdate && n.update() : (l.copy(n), l.update(), n = l);\n    const r = this.satBounds, a = this.satAxes;\n    s[0] = n.a, s[1] = n.b, s[2] = n.c;\n    for (let E = 0; E < 3; E++) {\n      const u = r[E], f = a[E];\n      if (t.setFromPoints(f, s), u.isSeparated(t))\n        return !1;\n    }\n    const c = n.satBounds, h = n.satAxes, d = this.points;\n    for (let E = 0; E < 3; E++) {\n      const u = c[E], f = h[E];\n      if (t.setFromPoints(f, d), u.isSeparated(t))\n        return !1;\n    }\n    for (let E = 0; E < 3; E++) {\n      const u = a[E];\n      for (let f = 0; f < 4; f++) {\n        const T = h[f];\n        if (i.crossVectors(u, T), t.setFromPoints(i, s), e.setFromPoints(i, d), t.isSeparated(e))\n          return !1;\n      }\n    }\n    return !0;\n  };\n}();\nat.prototype.closestPointToPoint = /* @__PURE__ */ function() {\n  return function(s, t) {\n    return this.needsUpdate && this.update(), t.copy(s).applyMatrix4(this.invMatrix).clamp(this.min, this.max).applyMatrix4(this.matrix), t;\n  };\n}();\nat.prototype.distanceToPoint = function() {\n  const l = new M();\n  return function(t) {\n    return this.closestPointToPoint(t, l), t.distanceTo(l);\n  };\n}();\nat.prototype.distanceToBox = function() {\n  const l = [\"x\", \"y\", \"z\"], s = new Array(12).fill().map(() => new yt()), t = new Array(12).fill().map(() => new yt()), e = new M(), i = new M();\n  return function(n, r = 0, a = null, c = null) {\n    if (this.needsUpdate && this.update(), this.intersectsBox(n))\n      return (a || c) && (n.getCenter(i), this.closestPointToPoint(i, e), n.closestPointToPoint(e, i), a && a.copy(e), c && c.copy(i)), 0;\n    const h = r * r, d = n.min, E = n.max, u = this.points;\n    let f = 1 / 0;\n    for (let R = 0; R < 8; R++) {\n      const C = u[R];\n      i.copy(C).clamp(d, E);\n      const A = C.distanceToSquared(i);\n      if (A < f && (f = A, a && a.copy(C), c && c.copy(i), A < h))\n        return Math.sqrt(A);\n    }\n    let T = 0;\n    for (let R = 0; R < 3; R++)\n      for (let C = 0; C <= 1; C++)\n        for (let A = 0; A <= 1; A++) {\n          const F = (R + 1) % 3, p = (R + 2) % 3, m = C << F | A << p, g = 1 << R | C << F | A << p, S = u[m], _ = u[g];\n          s[T].set(S, _);\n          const y = l[R], w = l[F], L = l[p], U = t[T], b = U.start, B = U.end;\n          b[y] = d[y], b[w] = C ? d[w] : E[w], b[L] = A ? d[L] : E[w], B[y] = E[y], B[w] = C ? d[w] : E[w], B[L] = A ? d[L] : E[w], T++;\n        }\n    for (let R = 0; R <= 1; R++)\n      for (let C = 0; C <= 1; C++)\n        for (let A = 0; A <= 1; A++) {\n          i.x = R ? E.x : d.x, i.y = C ? E.y : d.y, i.z = A ? E.z : d.z, this.closestPointToPoint(i, e);\n          const F = i.distanceToSquared(e);\n          if (F < f && (f = F, a && a.copy(e), c && c.copy(i), F < h))\n            return Math.sqrt(F);\n        }\n    for (let R = 0; R < 12; R++) {\n      const C = s[R];\n      for (let A = 0; A < 12; A++) {\n        const F = t[A];\n        gi(C, F, e, i);\n        const p = e.distanceToSquared(i);\n        if (p < f && (f = p, a && a.copy(e), c && c.copy(i), p < h))\n          return Math.sqrt(p);\n      }\n    }\n    return Math.sqrt(f);\n  };\n}();\nclass Oi {\n  constructor(s) {\n    this._getNewPrimitive = s, this._primitives = [];\n  }\n  getPrimitive() {\n    const s = this._primitives;\n    return s.length === 0 ? this._getNewPrimitive() : s.pop();\n  }\n  releasePrimitive(s) {\n    this._primitives.push(s);\n  }\n}\nclass Oo extends Oi {\n  constructor() {\n    super(() => new Ft());\n  }\n}\nconst It = /* @__PURE__ */ new Oo();\nfunction Et(l, s) {\n  return s[l + 15] === 65535;\n}\nfunction dt(l, s) {\n  return s[l + 6];\n}\nfunction ft(l, s) {\n  return s[l + 14];\n}\nfunction pt(l) {\n  return l + 8;\n}\nfunction Ct(l, s) {\n  return s[l + 6];\n}\nfunction Un(l, s) {\n  return s[l + 7];\n}\nclass So {\n  constructor() {\n    this.float32Array = null, this.uint16Array = null, this.uint32Array = null;\n    const s = [];\n    let t = null;\n    this.setBuffer = (e) => {\n      t && s.push(t), t = e, this.float32Array = new Float32Array(e), this.uint16Array = new Uint16Array(e), this.uint32Array = new Uint32Array(e);\n    }, this.clearBuffer = () => {\n      t = null, this.float32Array = null, this.uint16Array = null, this.uint32Array = null, s.length !== 0 && this.setBuffer(s.pop());\n    };\n  }\n}\nconst Z = new So();\nlet Yt, Ie;\nconst Jt = [], Ke = /* @__PURE__ */ new Oi(() => new gt());\nfunction _o(l, s, t, e, i, o) {\n  Yt = Ke.getPrimitive(), Ie = Ke.getPrimitive(), Jt.push(Yt, Ie), Z.setBuffer(l._roots[s]);\n  const n = ai(0, l.geometry, t, e, i, o);\n  Z.clearBuffer(), Ke.releasePrimitive(Yt), Ke.releasePrimitive(Ie), Jt.pop(), Jt.pop();\n  const r = Jt.length;\n  return r > 0 && (Ie = Jt[r - 1], Yt = Jt[r - 2]), n;\n}\nfunction ai(l, s, t, e, i = null, o = 0, n = 0) {\n  const { float32Array: r, uint16Array: a, uint32Array: c } = Z;\n  let h = l * 2;\n  if (Et(h, a)) {\n    const E = dt(l, c), u = ft(h, a);\n    return K(l, r, Yt), e(E, u, !1, n, o + l, Yt);\n  } else {\n    let y = function(L) {\n      const { uint16Array: U, uint32Array: b } = Z;\n      let B = L * 2;\n      for (; !Et(B, U); )\n        L = pt(L), B = L * 2;\n      return dt(L, b);\n    }, w = function(L) {\n      const { uint16Array: U, uint32Array: b } = Z;\n      let B = L * 2;\n      for (; !Et(B, U); )\n        L = Ct(L, b), B = L * 2;\n      return dt(L, b) + ft(B, U);\n    };\n    const E = pt(l), u = Ct(l, c);\n    let f = E, T = u, R, C, A, F;\n    if (i && (A = Yt, F = Ie, K(f, r, A), K(T, r, F), R = i(A), C = i(F), C < R)) {\n      f = u, T = E;\n      const L = R;\n      R = C, C = L, A = F;\n    }\n    A || (A = Yt, K(f, r, A));\n    const p = Et(f * 2, a), m = t(A, p, R, n + 1, o + f);\n    let g;\n    if (m === xi) {\n      const L = y(f), b = w(f) - L;\n      g = e(L, b, !0, n + 1, o + f, A);\n    } else\n      g = m && ai(\n        f,\n        s,\n        t,\n        e,\n        i,\n        o,\n        n + 1\n      );\n    if (g)\n      return !0;\n    F = Ie, K(T, r, F);\n    const S = Et(T * 2, a), _ = t(F, S, C, n + 1, o + T);\n    let N;\n    if (_ === xi) {\n      const L = y(T), b = w(T) - L;\n      N = e(L, b, !0, n + 1, o + T, F);\n    } else\n      N = _ && ai(\n        T,\n        s,\n        t,\n        e,\n        i,\n        o,\n        n + 1\n      );\n    return !!N;\n  }\n}\nconst Fe = /* @__PURE__ */ new M(), Hs = /* @__PURE__ */ new M();\nfunction No(l, s, t = {}, e = 0, i = 1 / 0) {\n  const o = e * e, n = i * i;\n  let r = 1 / 0, a = null;\n  if (l.shapecast(\n    {\n      boundsTraverseOrder: (h) => (Fe.copy(s).clamp(h.min, h.max), Fe.distanceToSquared(s)),\n      intersectsBounds: (h, d, E) => E < r && E < n,\n      intersectsTriangle: (h, d) => {\n        h.closestPointToPoint(s, Fe);\n        const E = s.distanceToSquared(Fe);\n        return E < r && (Hs.copy(Fe), r = E, a = d), E < o;\n      }\n    }\n  ), r === 1 / 0)\n    return null;\n  const c = Math.sqrt(r);\n  return t.point ? t.point.copy(Hs) : t.point = Hs.clone(), t.distance = c, t.faceIndex = a, t;\n}\nconst te = /* @__PURE__ */ new M(), ee = /* @__PURE__ */ new M(), se = /* @__PURE__ */ new M(), $e = /* @__PURE__ */ new fe(), Je = /* @__PURE__ */ new fe(), ts = /* @__PURE__ */ new fe(), Vi = /* @__PURE__ */ new M(), Gi = /* @__PURE__ */ new M(), zi = /* @__PURE__ */ new M(), es = /* @__PURE__ */ new M();\nfunction Po(l, s, t, e, i, o) {\n  let n;\n  return o === Qn ? n = l.intersectTriangle(e, t, s, !0, i) : n = l.intersectTriangle(s, t, e, o !== yn, i), n === null ? null : {\n    distance: l.origin.distanceTo(i),\n    point: i.clone()\n  };\n}\nfunction yo(l, s, t, e, i, o, n, r, a) {\n  te.fromBufferAttribute(s, o), ee.fromBufferAttribute(s, n), se.fromBufferAttribute(s, r);\n  const c = Po(l, te, ee, se, es, a);\n  if (c) {\n    e && ($e.fromBufferAttribute(e, o), Je.fromBufferAttribute(e, n), ts.fromBufferAttribute(e, r), c.uv = ue.getInterpolation(es, te, ee, se, $e, Je, ts, new fe())), i && ($e.fromBufferAttribute(i, o), Je.fromBufferAttribute(i, n), ts.fromBufferAttribute(i, r), c.uv1 = ue.getInterpolation(es, te, ee, se, $e, Je, ts, new fe())), t && (Vi.fromBufferAttribute(t, o), Gi.fromBufferAttribute(t, n), zi.fromBufferAttribute(t, r), c.normal = ue.getInterpolation(es, te, ee, se, Vi, Gi, zi, new M()), c.normal.dot(l.direction) > 0 && c.normal.multiplyScalar(-1));\n    const h = {\n      a: o,\n      b: n,\n      c: r,\n      normal: new M(),\n      materialIndex: 0\n    };\n    ue.getNormal(te, ee, se, h.normal), c.face = h, c.faceIndex = o;\n  }\n  return c;\n}\nfunction xs(l, s, t, e, i) {\n  const o = e * 3;\n  let n = o + 0, r = o + 1, a = o + 2;\n  const c = l.index;\n  l.index && (n = c.getX(n), r = c.getX(r), a = c.getX(a));\n  const { position: h, normal: d, uv: E, uv1: u } = l.attributes, f = yo(t, h, d, E, u, n, r, a, s);\n  return f ? (f.faceIndex = e, i && i.push(f), f) : null;\n}\nfunction tt(l, s, t, e) {\n  const i = l.a, o = l.b, n = l.c;\n  let r = s, a = s + 1, c = s + 2;\n  t && (r = t.getX(r), a = t.getX(a), c = t.getX(c)), i.x = e.getX(r), i.y = e.getY(r), i.z = e.getZ(r), o.x = e.getX(a), o.y = e.getY(a), o.z = e.getZ(a), n.x = e.getX(c), n.y = e.getY(c), n.z = e.getZ(c);\n}\nfunction Lo(l, s, t, e, i, o) {\n  const { geometry: n, _indirectBuffer: r } = l;\n  for (let a = e, c = e + i; a < c; a++)\n    xs(n, s, t, a, o);\n}\nfunction Mo(l, s, t, e, i) {\n  const { geometry: o, _indirectBuffer: n } = l;\n  let r = 1 / 0, a = null;\n  for (let c = e, h = e + i; c < h; c++) {\n    let d;\n    d = xs(o, s, t, c), d && d.distance < r && (a = d, r = d.distance);\n  }\n  return a;\n}\nfunction wo(l, s, t, e, i, o, n) {\n  const { geometry: r } = t, { index: a } = r, c = r.attributes.position;\n  for (let h = l, d = s + l; h < d; h++) {\n    let E;\n    if (E = h, tt(n, E * 3, a, c), n.needsUpdate = !0, e(n, E, i, o))\n      return !0;\n  }\n  return !1;\n}\nfunction Do(l, s = null) {\n  s && Array.isArray(s) && (s = new Set(s));\n  const t = l.geometry, e = t.index ? t.index.array : null, i = t.attributes.position;\n  let o, n, r, a, c = 0;\n  const h = l._roots;\n  for (let E = 0, u = h.length; E < u; E++)\n    o = h[E], n = new Uint32Array(o), r = new Uint16Array(o), a = new Float32Array(o), d(0, c), c += o.byteLength;\n  function d(E, u, f = !1) {\n    const T = E * 2;\n    if (r[T + 15] === Us) {\n      const C = n[E + 6], A = r[T + 14];\n      let F = 1 / 0, p = 1 / 0, m = 1 / 0, g = -1 / 0, S = -1 / 0, _ = -1 / 0;\n      for (let N = 3 * C, y = 3 * (C + A); N < y; N++) {\n        let w = e[N];\n        const L = i.getX(w), U = i.getY(w), b = i.getZ(w);\n        L < F && (F = L), L > g && (g = L), U < p && (p = U), U > S && (S = U), b < m && (m = b), b > _ && (_ = b);\n      }\n      return a[E + 0] !== F || a[E + 1] !== p || a[E + 2] !== m || a[E + 3] !== g || a[E + 4] !== S || a[E + 5] !== _ ? (a[E + 0] = F, a[E + 1] = p, a[E + 2] = m, a[E + 3] = g, a[E + 4] = S, a[E + 5] = _, !0) : !1;\n    } else {\n      const C = E + 8, A = n[E + 6], F = C + u, p = A + u;\n      let m = f, g = !1, S = !1;\n      s ? m || (g = s.has(F), S = s.has(p), m = !g && !S) : (g = !0, S = !0);\n      const _ = m || g, N = m || S;\n      let y = !1;\n      _ && (y = d(C, u, m));\n      let w = !1;\n      N && (w = d(A, u, m));\n      const L = y || w;\n      if (L)\n        for (let U = 0; U < 3; U++) {\n          const b = C + U, B = A + U, H = a[b], q = a[b + 3], st = a[B], Q = a[B + 3];\n          a[E + U] = H < st ? H : st, a[E + U + 3] = q > Q ? q : Q;\n        }\n      return L;\n    }\n  }\n}\nconst Hi = /* @__PURE__ */ new gt();\nfunction Gt(l, s, t, e) {\n  return K(l, s, Hi), t.intersectBox(Hi, e);\n}\nfunction Uo(l, s, t, e, i, o) {\n  const { geometry: n, _indirectBuffer: r } = l;\n  for (let a = e, c = e + i; a < c; a++) {\n    let h = r ? r[a] : a;\n    xs(n, s, t, h, o);\n  }\n}\nfunction xo(l, s, t, e, i) {\n  const { geometry: o, _indirectBuffer: n } = l;\n  let r = 1 / 0, a = null;\n  for (let c = e, h = e + i; c < h; c++) {\n    let d;\n    d = xs(o, s, t, n ? n[c] : c), d && d.distance < r && (a = d, r = d.distance);\n  }\n  return a;\n}\nfunction bo(l, s, t, e, i, o, n) {\n  const { geometry: r } = t, { index: a } = r, c = r.attributes.position;\n  for (let h = l, d = s + l; h < d; h++) {\n    let E;\n    if (E = t.resolveTriangleIndex(h), tt(n, E * 3, a, c), n.needsUpdate = !0, e(n, E, i, o))\n      return !0;\n  }\n  return !1;\n}\nconst Wi = /* @__PURE__ */ new M();\nfunction vo(l, s, t, e, i) {\n  Z.setBuffer(l._roots[s]), ci(0, l, t, e, i), Z.clearBuffer();\n}\nfunction ci(l, s, t, e, i) {\n  const { float32Array: o, uint16Array: n, uint32Array: r } = Z, a = l * 2;\n  if (Et(a, n)) {\n    const h = dt(l, r), d = ft(a, n);\n    Lo(s, t, e, h, d, i);\n  } else {\n    const h = pt(l);\n    Gt(h, o, e, Wi) && ci(h, s, t, e, i);\n    const d = Ct(l, r);\n    Gt(d, o, e, Wi) && ci(d, s, t, e, i);\n  }\n}\nconst ki = /* @__PURE__ */ new M(), Bo = [\"x\", \"y\", \"z\"];\nfunction Yo(l, s, t, e) {\n  Z.setBuffer(l._roots[s]);\n  const i = li(0, l, t, e);\n  return Z.clearBuffer(), i;\n}\nfunction li(l, s, t, e) {\n  const { float32Array: i, uint16Array: o, uint32Array: n } = Z;\n  let r = l * 2;\n  if (Et(r, o)) {\n    const c = dt(l, n), h = ft(r, o);\n    return Mo(s, t, e, c, h);\n  } else {\n    const c = Un(l, n), h = Bo[c], E = e.direction[h] >= 0;\n    let u, f;\n    E ? (u = pt(l), f = Ct(l, n)) : (u = Ct(l, n), f = pt(l));\n    const R = Gt(u, i, e, ki) ? li(u, s, t, e) : null;\n    if (R) {\n      const F = R.point[h];\n      if (E ? F <= i[f + c] : (\n        // min bounding data\n        F >= i[f + c + 3]\n      ))\n        return R;\n    }\n    const A = Gt(f, i, e, ki) ? li(f, s, t, e) : null;\n    return R && A ? R.distance <= A.distance ? R : A : R || A || null;\n  }\n}\nconst ss = /* @__PURE__ */ new gt(), ie = /* @__PURE__ */ new Ft(), ne = /* @__PURE__ */ new Ft(), ge = /* @__PURE__ */ new Lt(), Xi = /* @__PURE__ */ new at(), is = /* @__PURE__ */ new at();\nfunction Vo(l, s, t, e) {\n  Z.setBuffer(l._roots[s]);\n  const i = hi(0, l, t, e);\n  return Z.clearBuffer(), i;\n}\nfunction hi(l, s, t, e, i = null) {\n  const { float32Array: o, uint16Array: n, uint32Array: r } = Z;\n  let a = l * 2;\n  if (i === null && (t.boundingBox || t.computeBoundingBox(), Xi.set(t.boundingBox.min, t.boundingBox.max, e), i = Xi), Et(a, n)) {\n    const h = s.geometry, d = h.index, E = h.attributes.position, u = t.index, f = t.attributes.position, T = dt(l, r), R = ft(a, n);\n    if (ge.copy(e).invert(), t.boundsTree)\n      return K(l, o, is), is.matrix.copy(ge), is.needsUpdate = !0, t.boundsTree.shapecast({\n        intersectsBounds: (A) => is.intersectsBox(A),\n        intersectsTriangle: (A) => {\n          A.a.applyMatrix4(e), A.b.applyMatrix4(e), A.c.applyMatrix4(e), A.needsUpdate = !0;\n          for (let F = T * 3, p = (R + T) * 3; F < p; F += 3)\n            if (tt(ne, F, d, E), ne.needsUpdate = !0, A.intersectsTriangle(ne))\n              return !0;\n          return !1;\n        }\n      });\n    for (let C = T * 3, A = (R + T) * 3; C < A; C += 3) {\n      tt(ie, C, d, E), ie.a.applyMatrix4(ge), ie.b.applyMatrix4(ge), ie.c.applyMatrix4(ge), ie.needsUpdate = !0;\n      for (let F = 0, p = u.count; F < p; F += 3)\n        if (tt(ne, F, u, f), ne.needsUpdate = !0, ie.intersectsTriangle(ne))\n          return !0;\n    }\n  } else {\n    const h = l + 8, d = r[l + 6];\n    return K(h, o, ss), !!(i.intersectsBox(ss) && hi(h, s, t, e, i) || (K(d, o, ss), i.intersectsBox(ss) && hi(d, s, t, e, i)));\n  }\n}\nconst ns = /* @__PURE__ */ new Lt(), Ws = /* @__PURE__ */ new at(), Oe = /* @__PURE__ */ new at(), Go = /* @__PURE__ */ new M(), zo = /* @__PURE__ */ new M(), Ho = /* @__PURE__ */ new M(), Wo = /* @__PURE__ */ new M();\nfunction ko(l, s, t, e = {}, i = {}, o = 0, n = 1 / 0) {\n  s.boundingBox || s.computeBoundingBox(), Ws.set(s.boundingBox.min, s.boundingBox.max, t), Ws.needsUpdate = !0;\n  const r = l.geometry, a = r.attributes.position, c = r.index, h = s.attributes.position, d = s.index, E = It.getPrimitive(), u = It.getPrimitive();\n  let f = Go, T = zo, R = null, C = null;\n  i && (R = Ho, C = Wo);\n  let A = 1 / 0, F = null, p = null;\n  return ns.copy(t).invert(), Oe.matrix.copy(ns), l.shapecast(\n    {\n      boundsTraverseOrder: (m) => Ws.distanceToBox(m),\n      intersectsBounds: (m, g, S) => S < A && S < n ? (g && (Oe.min.copy(m.min), Oe.max.copy(m.max), Oe.needsUpdate = !0), !0) : !1,\n      intersectsRange: (m, g) => {\n        if (s.boundsTree)\n          return s.boundsTree.shapecast({\n            boundsTraverseOrder: (_) => Oe.distanceToBox(_),\n            intersectsBounds: (_, N, y) => y < A && y < n,\n            intersectsRange: (_, N) => {\n              for (let y = _, w = _ + N; y < w; y++) {\n                tt(u, 3 * y, d, h), u.a.applyMatrix4(t), u.b.applyMatrix4(t), u.c.applyMatrix4(t), u.needsUpdate = !0;\n                for (let L = m, U = m + g; L < U; L++) {\n                  tt(E, 3 * L, c, a), E.needsUpdate = !0;\n                  const b = E.distanceToTriangle(u, f, R);\n                  if (b < A && (T.copy(f), C && C.copy(R), A = b, F = L, p = y), b < o)\n                    return !0;\n                }\n              }\n            }\n          });\n        {\n          const S = Ce(s);\n          for (let _ = 0, N = S; _ < N; _++) {\n            tt(u, 3 * _, d, h), u.a.applyMatrix4(t), u.b.applyMatrix4(t), u.c.applyMatrix4(t), u.needsUpdate = !0;\n            for (let y = m, w = m + g; y < w; y++) {\n              tt(E, 3 * y, c, a), E.needsUpdate = !0;\n              const L = E.distanceToTriangle(u, f, R);\n              if (L < A && (T.copy(f), C && C.copy(R), A = L, F = y, p = _), L < o)\n                return !0;\n            }\n          }\n        }\n      }\n    }\n  ), It.releasePrimitive(E), It.releasePrimitive(u), A === 1 / 0 ? null : (e.point ? e.point.copy(T) : e.point = T.clone(), e.distance = A, e.faceIndex = F, i && (i.point ? i.point.copy(C) : i.point = C.clone(), i.point.applyMatrix4(ns), T.applyMatrix4(ns), i.distance = T.sub(i.point).length(), i.faceIndex = p), e);\n}\nfunction Xo(l, s = null) {\n  s && Array.isArray(s) && (s = new Set(s));\n  const t = l.geometry, e = t.index ? t.index.array : null, i = t.attributes.position;\n  let o, n, r, a, c = 0;\n  const h = l._roots;\n  for (let E = 0, u = h.length; E < u; E++)\n    o = h[E], n = new Uint32Array(o), r = new Uint16Array(o), a = new Float32Array(o), d(0, c), c += o.byteLength;\n  function d(E, u, f = !1) {\n    const T = E * 2;\n    if (r[T + 15] === Us) {\n      const C = n[E + 6], A = r[T + 14];\n      let F = 1 / 0, p = 1 / 0, m = 1 / 0, g = -1 / 0, S = -1 / 0, _ = -1 / 0;\n      for (let N = C, y = C + A; N < y; N++) {\n        const w = 3 * l.resolveTriangleIndex(N);\n        for (let L = 0; L < 3; L++) {\n          let U = w + L;\n          U = e ? e[U] : U;\n          const b = i.getX(U), B = i.getY(U), H = i.getZ(U);\n          b < F && (F = b), b > g && (g = b), B < p && (p = B), B > S && (S = B), H < m && (m = H), H > _ && (_ = H);\n        }\n      }\n      return a[E + 0] !== F || a[E + 1] !== p || a[E + 2] !== m || a[E + 3] !== g || a[E + 4] !== S || a[E + 5] !== _ ? (a[E + 0] = F, a[E + 1] = p, a[E + 2] = m, a[E + 3] = g, a[E + 4] = S, a[E + 5] = _, !0) : !1;\n    } else {\n      const C = E + 8, A = n[E + 6], F = C + u, p = A + u;\n      let m = f, g = !1, S = !1;\n      s ? m || (g = s.has(F), S = s.has(p), m = !g && !S) : (g = !0, S = !0);\n      const _ = m || g, N = m || S;\n      let y = !1;\n      _ && (y = d(C, u, m));\n      let w = !1;\n      N && (w = d(A, u, m));\n      const L = y || w;\n      if (L)\n        for (let U = 0; U < 3; U++) {\n          const b = C + U, B = A + U, H = a[b], q = a[b + 3], st = a[B], Q = a[B + 3];\n          a[E + U] = H < st ? H : st, a[E + U + 3] = q > Q ? q : Q;\n        }\n      return L;\n    }\n  }\n}\nconst Zi = /* @__PURE__ */ new M();\nfunction Zo(l, s, t, e, i) {\n  Z.setBuffer(l._roots[s]), Ei(0, l, t, e, i), Z.clearBuffer();\n}\nfunction Ei(l, s, t, e, i) {\n  const { float32Array: o, uint16Array: n, uint32Array: r } = Z, a = l * 2;\n  if (Et(a, n)) {\n    const h = dt(l, r), d = ft(a, n);\n    Uo(s, t, e, h, d, i);\n  } else {\n    const h = pt(l);\n    Gt(h, o, e, Zi) && Ei(h, s, t, e, i);\n    const d = Ct(l, r);\n    Gt(d, o, e, Zi) && Ei(d, s, t, e, i);\n  }\n}\nconst Qi = /* @__PURE__ */ new M(), Qo = [\"x\", \"y\", \"z\"];\nfunction jo(l, s, t, e) {\n  Z.setBuffer(l._roots[s]);\n  const i = di(0, l, t, e);\n  return Z.clearBuffer(), i;\n}\nfunction di(l, s, t, e) {\n  const { float32Array: i, uint16Array: o, uint32Array: n } = Z;\n  let r = l * 2;\n  if (Et(r, o)) {\n    const c = dt(l, n), h = ft(r, o);\n    return xo(s, t, e, c, h);\n  } else {\n    const c = Un(l, n), h = Qo[c], E = e.direction[h] >= 0;\n    let u, f;\n    E ? (u = pt(l), f = Ct(l, n)) : (u = Ct(l, n), f = pt(l));\n    const R = Gt(u, i, e, Qi) ? di(u, s, t, e) : null;\n    if (R) {\n      const F = R.point[h];\n      if (E ? F <= i[f + c] : (\n        // min bounding data\n        F >= i[f + c + 3]\n      ))\n        return R;\n    }\n    const A = Gt(f, i, e, Qi) ? di(f, s, t, e) : null;\n    return R && A ? R.distance <= A.distance ? R : A : R || A || null;\n  }\n}\nconst os = /* @__PURE__ */ new gt(), oe = /* @__PURE__ */ new Ft(), re = /* @__PURE__ */ new Ft(), Se = /* @__PURE__ */ new Lt(), ji = /* @__PURE__ */ new at(), rs = /* @__PURE__ */ new at();\nfunction qo(l, s, t, e) {\n  Z.setBuffer(l._roots[s]);\n  const i = ui(0, l, t, e);\n  return Z.clearBuffer(), i;\n}\nfunction ui(l, s, t, e, i = null) {\n  const { float32Array: o, uint16Array: n, uint32Array: r } = Z;\n  let a = l * 2;\n  if (i === null && (t.boundingBox || t.computeBoundingBox(), ji.set(t.boundingBox.min, t.boundingBox.max, e), i = ji), Et(a, n)) {\n    const h = s.geometry, d = h.index, E = h.attributes.position, u = t.index, f = t.attributes.position, T = dt(l, r), R = ft(a, n);\n    if (Se.copy(e).invert(), t.boundsTree)\n      return K(l, o, rs), rs.matrix.copy(Se), rs.needsUpdate = !0, t.boundsTree.shapecast({\n        intersectsBounds: (A) => rs.intersectsBox(A),\n        intersectsTriangle: (A) => {\n          A.a.applyMatrix4(e), A.b.applyMatrix4(e), A.c.applyMatrix4(e), A.needsUpdate = !0;\n          for (let F = T, p = R + T; F < p; F++)\n            if (tt(re, 3 * s.resolveTriangleIndex(F), d, E), re.needsUpdate = !0, A.intersectsTriangle(re))\n              return !0;\n          return !1;\n        }\n      });\n    for (let C = T, A = R + T; C < A; C++) {\n      const F = s.resolveTriangleIndex(C);\n      tt(oe, 3 * F, d, E), oe.a.applyMatrix4(Se), oe.b.applyMatrix4(Se), oe.c.applyMatrix4(Se), oe.needsUpdate = !0;\n      for (let p = 0, m = u.count; p < m; p += 3)\n        if (tt(re, p, u, f), re.needsUpdate = !0, oe.intersectsTriangle(re))\n          return !0;\n    }\n  } else {\n    const h = l + 8, d = r[l + 6];\n    return K(h, o, os), !!(i.intersectsBox(os) && ui(h, s, t, e, i) || (K(d, o, os), i.intersectsBox(os) && ui(d, s, t, e, i)));\n  }\n}\nconst as = /* @__PURE__ */ new Lt(), ks = /* @__PURE__ */ new at(), _e = /* @__PURE__ */ new at(), Ko = /* @__PURE__ */ new M(), $o = /* @__PURE__ */ new M(), Jo = /* @__PURE__ */ new M(), tr = /* @__PURE__ */ new M();\nfunction er(l, s, t, e = {}, i = {}, o = 0, n = 1 / 0) {\n  s.boundingBox || s.computeBoundingBox(), ks.set(s.boundingBox.min, s.boundingBox.max, t), ks.needsUpdate = !0;\n  const r = l.geometry, a = r.attributes.position, c = r.index, h = s.attributes.position, d = s.index, E = It.getPrimitive(), u = It.getPrimitive();\n  let f = Ko, T = $o, R = null, C = null;\n  i && (R = Jo, C = tr);\n  let A = 1 / 0, F = null, p = null;\n  return as.copy(t).invert(), _e.matrix.copy(as), l.shapecast(\n    {\n      boundsTraverseOrder: (m) => ks.distanceToBox(m),\n      intersectsBounds: (m, g, S) => S < A && S < n ? (g && (_e.min.copy(m.min), _e.max.copy(m.max), _e.needsUpdate = !0), !0) : !1,\n      intersectsRange: (m, g) => {\n        if (s.boundsTree) {\n          const S = s.boundsTree;\n          return S.shapecast({\n            boundsTraverseOrder: (_) => _e.distanceToBox(_),\n            intersectsBounds: (_, N, y) => y < A && y < n,\n            intersectsRange: (_, N) => {\n              for (let y = _, w = _ + N; y < w; y++) {\n                const L = S.resolveTriangleIndex(y);\n                tt(u, 3 * L, d, h), u.a.applyMatrix4(t), u.b.applyMatrix4(t), u.c.applyMatrix4(t), u.needsUpdate = !0;\n                for (let U = m, b = m + g; U < b; U++) {\n                  const B = l.resolveTriangleIndex(U);\n                  tt(E, 3 * B, c, a), E.needsUpdate = !0;\n                  const H = E.distanceToTriangle(u, f, R);\n                  if (H < A && (T.copy(f), C && C.copy(R), A = H, F = U, p = y), H < o)\n                    return !0;\n                }\n              }\n            }\n          });\n        } else {\n          const S = Ce(s);\n          for (let _ = 0, N = S; _ < N; _++) {\n            tt(u, 3 * _, d, h), u.a.applyMatrix4(t), u.b.applyMatrix4(t), u.c.applyMatrix4(t), u.needsUpdate = !0;\n            for (let y = m, w = m + g; y < w; y++) {\n              const L = l.resolveTriangleIndex(y);\n              tt(E, 3 * L, c, a), E.needsUpdate = !0;\n              const U = E.distanceToTriangle(u, f, R);\n              if (U < A && (T.copy(f), C && C.copy(R), A = U, F = y, p = _), U < o)\n                return !0;\n            }\n          }\n        }\n      }\n    }\n  ), It.releasePrimitive(E), It.releasePrimitive(u), A === 1 / 0 ? null : (e.point ? e.point.copy(T) : e.point = T.clone(), e.distance = A, e.faceIndex = F, i && (i.point ? i.point.copy(C) : i.point = C.clone(), i.point.applyMatrix4(as), T.applyMatrix4(as), i.distance = T.sub(i.point).length(), i.faceIndex = p), e);\n}\nfunction sr() {\n  return typeof SharedArrayBuffer < \"u\";\n}\nconst be = new Z.constructor(), As = new Z.constructor(), vt = new Oi(() => new gt()), ae = new gt(), ce = new gt(), Xs = new gt(), Zs = new gt();\nlet Qs = !1;\nfunction ir(l, s, t, e) {\n  if (Qs)\n    throw new Error(\"MeshBVH: Recursive calls to bvhcast not supported.\");\n  Qs = !0;\n  const i = l._roots, o = s._roots;\n  let n, r = 0, a = 0;\n  const c = new Lt().copy(t).invert();\n  for (let h = 0, d = i.length; h < d; h++) {\n    be.setBuffer(i[h]), a = 0;\n    const E = vt.getPrimitive();\n    K(0, be.float32Array, E), E.applyMatrix4(c);\n    for (let u = 0, f = o.length; u < f && (As.setBuffer(o[h]), n = Tt(\n      0,\n      0,\n      t,\n      c,\n      e,\n      r,\n      a,\n      0,\n      0,\n      E\n    ), As.clearBuffer(), a += o[u].length, !n); u++)\n      ;\n    if (vt.releasePrimitive(E), be.clearBuffer(), r += i[h].length, n)\n      break;\n  }\n  return Qs = !1, n;\n}\nfunction Tt(l, s, t, e, i, o = 0, n = 0, r = 0, a = 0, c = null, h = !1) {\n  let d, E;\n  h ? (d = As, E = be) : (d = be, E = As);\n  const u = d.float32Array, f = d.uint32Array, T = d.uint16Array, R = E.float32Array, C = E.uint32Array, A = E.uint16Array, F = l * 2, p = s * 2, m = Et(F, T), g = Et(p, A);\n  let S = !1;\n  if (g && m)\n    h ? S = i(\n      dt(s, C),\n      ft(s * 2, A),\n      dt(l, f),\n      ft(l * 2, T),\n      a,\n      n + s,\n      r,\n      o + l\n    ) : S = i(\n      dt(l, f),\n      ft(l * 2, T),\n      dt(s, C),\n      ft(s * 2, A),\n      r,\n      o + l,\n      a,\n      n + s\n    );\n  else if (g) {\n    const _ = vt.getPrimitive();\n    K(s, R, _), _.applyMatrix4(t);\n    const N = pt(l), y = Ct(l, f);\n    K(N, u, ae), K(y, u, ce);\n    const w = _.intersectsBox(ae), L = _.intersectsBox(ce);\n    S = w && Tt(\n      s,\n      N,\n      e,\n      t,\n      i,\n      n,\n      o,\n      a,\n      r + 1,\n      _,\n      !h\n    ) || L && Tt(\n      s,\n      y,\n      e,\n      t,\n      i,\n      n,\n      o,\n      a,\n      r + 1,\n      _,\n      !h\n    ), vt.releasePrimitive(_);\n  } else {\n    const _ = pt(s), N = Ct(s, C);\n    K(_, R, Xs), K(N, R, Zs);\n    const y = c.intersectsBox(Xs), w = c.intersectsBox(Zs);\n    if (y && w)\n      S = Tt(\n        l,\n        _,\n        t,\n        e,\n        i,\n        o,\n        n,\n        r,\n        a + 1,\n        c,\n        h\n      ) || Tt(\n        l,\n        N,\n        t,\n        e,\n        i,\n        o,\n        n,\n        r,\n        a + 1,\n        c,\n        h\n      );\n    else if (y)\n      if (m)\n        S = Tt(\n          l,\n          _,\n          t,\n          e,\n          i,\n          o,\n          n,\n          r,\n          a + 1,\n          c,\n          h\n        );\n      else {\n        const L = vt.getPrimitive();\n        L.copy(Xs).applyMatrix4(t);\n        const U = pt(l), b = Ct(l, f);\n        K(U, u, ae), K(b, u, ce);\n        const B = L.intersectsBox(ae), H = L.intersectsBox(ce);\n        S = B && Tt(\n          _,\n          U,\n          e,\n          t,\n          i,\n          n,\n          o,\n          a,\n          r + 1,\n          L,\n          !h\n        ) || H && Tt(\n          _,\n          b,\n          e,\n          t,\n          i,\n          n,\n          o,\n          a,\n          r + 1,\n          L,\n          !h\n        ), vt.releasePrimitive(L);\n      }\n    else if (w)\n      if (m)\n        S = Tt(\n          l,\n          N,\n          t,\n          e,\n          i,\n          o,\n          n,\n          r,\n          a + 1,\n          c,\n          h\n        );\n      else {\n        const L = vt.getPrimitive();\n        L.copy(Zs).applyMatrix4(t);\n        const U = pt(l), b = Ct(l, f);\n        K(U, u, ae), K(b, u, ce);\n        const B = L.intersectsBox(ae), H = L.intersectsBox(ce);\n        S = B && Tt(\n          N,\n          U,\n          e,\n          t,\n          i,\n          n,\n          o,\n          a,\n          r + 1,\n          L,\n          !h\n        ) || H && Tt(\n          N,\n          b,\n          e,\n          t,\n          i,\n          n,\n          o,\n          a,\n          r + 1,\n          L,\n          !h\n        ), vt.releasePrimitive(L);\n      }\n  }\n  return S;\n}\nconst cs = /* @__PURE__ */ new at(), qi = /* @__PURE__ */ new gt();\nclass Si {\n  static serialize(s, t = {}) {\n    t = {\n      cloneBuffers: !0,\n      ...t\n    };\n    const e = s.geometry, i = s._roots, o = s._indirectBuffer, n = e.getIndex();\n    let r;\n    return t.cloneBuffers ? r = {\n      roots: i.map((a) => a.slice()),\n      index: n.array.slice(),\n      indirectBuffer: o ? o.slice() : null\n    } : r = {\n      roots: i,\n      index: n.array,\n      indirectBuffer: o\n    }, r;\n  }\n  static deserialize(s, t, e = {}) {\n    e = {\n      setIndex: !0,\n      indirect: !!s.indirectBuffer,\n      ...e\n    };\n    const { index: i, roots: o, indirectBuffer: n } = s, r = new Si(t, { ...e, [Vs]: !0 });\n    if (r._roots = o, r._indirectBuffer = n || null, e.setIndex) {\n      const a = t.getIndex();\n      if (a === null) {\n        const c = new Pn(s.index, 1, !1);\n        t.setIndex(c);\n      } else\n        a.array !== i && (a.array.set(i), a.needsUpdate = !0);\n    }\n    return r;\n  }\n  get indirect() {\n    return !!this._indirectBuffer;\n  }\n  constructor(s, t = {}) {\n    if (s.isBufferGeometry) {\n      if (s.index && s.index.isInterleavedBufferAttribute)\n        throw new Error(\"MeshBVH: InterleavedBufferAttribute is not supported for the index attribute.\");\n    } else\n      throw new Error(\"MeshBVH: Only BufferGeometries are supported.\");\n    if (t = Object.assign({\n      strategy: Mn,\n      maxDepth: 40,\n      maxLeafTris: 10,\n      verbose: !0,\n      useSharedArrayBuffer: !1,\n      setBoundingBox: !0,\n      onProgress: null,\n      indirect: !1,\n      // undocumented options\n      // Whether to skip generating the tree. Used for deserialization.\n      [Vs]: !1\n    }, t), t.useSharedArrayBuffer && !sr())\n      throw new Error(\"MeshBVH: SharedArrayBuffer is not available.\");\n    this.geometry = s, this._roots = null, this._indirectBuffer = null, t[Vs] || (Ro(this, t), !s.boundingBox && t.setBoundingBox && (s.boundingBox = this.getBoundingBox(new gt())));\n    const { _indirectBuffer: e } = this;\n    this.resolveTriangleIndex = t.indirect ? (i) => e[i] : (i) => i;\n  }\n  refit(s = null) {\n    return (this.indirect ? Xo : Do)(this, s);\n  }\n  traverse(s, t = 0) {\n    const e = this._roots[t], i = new Uint32Array(e), o = new Uint16Array(e);\n    n(0);\n    function n(r, a = 0) {\n      const c = r * 2, h = o[c + 15] === Us;\n      if (h) {\n        const d = i[r + 6], E = o[c + 14];\n        s(a, h, new Float32Array(e, r * 4, 6), d, E);\n      } else {\n        const d = r + Cs / 4, E = i[r + 6], u = i[r + 7];\n        s(a, h, new Float32Array(e, r * 4, 6), u) || (n(d, a + 1), n(E, a + 1));\n      }\n    }\n  }\n  /* Core Cast Functions */\n  raycast(s, t = wi) {\n    const e = this._roots, i = this.geometry, o = [], n = t.isMaterial, r = Array.isArray(t), a = i.groups, c = n ? t.side : t, h = this.indirect ? Zo : vo;\n    for (let d = 0, E = e.length; d < E; d++) {\n      const u = r ? t[a[d].materialIndex].side : c, f = o.length;\n      if (h(this, d, u, s, o), r) {\n        const T = a[d].materialIndex;\n        for (let R = f, C = o.length; R < C; R++)\n          o[R].face.materialIndex = T;\n      }\n    }\n    return o;\n  }\n  raycastFirst(s, t = wi) {\n    const e = this._roots, i = this.geometry, o = t.isMaterial, n = Array.isArray(t);\n    let r = null;\n    const a = i.groups, c = o ? t.side : t, h = this.indirect ? jo : Yo;\n    for (let d = 0, E = e.length; d < E; d++) {\n      const u = n ? t[a[d].materialIndex].side : c, f = h(this, d, u, s);\n      f != null && (r == null || f.distance < r.distance) && (r = f, n && (f.face.materialIndex = a[d].materialIndex));\n    }\n    return r;\n  }\n  intersectsGeometry(s, t) {\n    let e = !1;\n    const i = this._roots, o = this.indirect ? qo : Vo;\n    for (let n = 0, r = i.length; n < r && (e = o(this, n, s, t), !e); n++)\n      ;\n    return e;\n  }\n  shapecast(s) {\n    const t = It.getPrimitive(), e = this.indirect ? bo : wo;\n    let {\n      boundsTraverseOrder: i,\n      intersectsBounds: o,\n      intersectsRange: n,\n      intersectsTriangle: r\n    } = s;\n    if (n && r) {\n      const d = n;\n      n = (E, u, f, T, R) => d(E, u, f, T, R) ? !0 : e(E, u, this, r, f, T, t);\n    } else\n      n || (r ? n = (d, E, u, f) => e(d, E, this, r, u, f, t) : n = (d, E, u) => u);\n    let a = !1, c = 0;\n    const h = this._roots;\n    for (let d = 0, E = h.length; d < E; d++) {\n      const u = h[d];\n      if (a = _o(this, d, o, n, i, c), a)\n        break;\n      c += u.byteLength;\n    }\n    return It.releasePrimitive(t), a;\n  }\n  bvhcast(s, t, e) {\n    let {\n      intersectsRanges: i,\n      intersectsTriangles: o\n    } = e;\n    const n = It.getPrimitive(), r = this.geometry.index, a = this.geometry.attributes.position, c = this.indirect ? (f) => {\n      const T = this.resolveTriangleIndex(f);\n      tt(n, T * 3, r, a);\n    } : (f) => {\n      tt(n, f * 3, r, a);\n    }, h = It.getPrimitive(), d = s.geometry.index, E = s.geometry.attributes.position, u = s.indirect ? (f) => {\n      const T = s.resolveTriangleIndex(f);\n      tt(h, T * 3, d, E);\n    } : (f) => {\n      tt(h, f * 3, d, E);\n    };\n    if (o) {\n      const f = (T, R, C, A, F, p, m, g) => {\n        for (let S = C, _ = C + A; S < _; S++) {\n          u(S), h.a.applyMatrix4(t), h.b.applyMatrix4(t), h.c.applyMatrix4(t), h.needsUpdate = !0;\n          for (let N = T, y = T + R; N < y; N++)\n            if (c(N), n.needsUpdate = !0, o(n, h, N, S, F, p, m, g))\n              return !0;\n        }\n        return !1;\n      };\n      if (i) {\n        const T = i;\n        i = function(R, C, A, F, p, m, g, S) {\n          return T(R, C, A, F, p, m, g, S) ? !0 : f(R, C, A, F, p, m, g, S);\n        };\n      } else\n        i = f;\n    }\n    return ir(this, s, t, i);\n  }\n  /* Derived Cast Functions */\n  intersectsBox(s, t) {\n    return cs.set(s.min, s.max, t), cs.needsUpdate = !0, this.shapecast(\n      {\n        intersectsBounds: (e) => cs.intersectsBox(e),\n        intersectsTriangle: (e) => cs.intersectsTriangle(e)\n      }\n    );\n  }\n  intersectsSphere(s) {\n    return this.shapecast(\n      {\n        intersectsBounds: (t) => s.intersectsBox(t),\n        intersectsTriangle: (t) => t.intersectsSphere(s)\n      }\n    );\n  }\n  closestPointToGeometry(s, t, e = {}, i = {}, o = 0, n = 1 / 0) {\n    return (this.indirect ? er : ko)(\n      this,\n      s,\n      t,\n      e,\n      i,\n      o,\n      n\n    );\n  }\n  closestPointToPoint(s, t = {}, e = 0, i = 1 / 0) {\n    return No(\n      this,\n      s,\n      t,\n      e,\n      i\n    );\n  }\n  getBoundingBox(s) {\n    return s.makeEmpty(), this._roots.forEach((e) => {\n      K(0, new Float32Array(e), qi), s.union(qi);\n    }), s;\n  }\n}\nfunction Ki(l, s, t) {\n  return l === null || (l.point.applyMatrix4(s.matrixWorld), l.distance = l.point.distanceTo(t.ray.origin), l.object = s, l.distance < t.near || l.distance > t.far) ? null : l;\n}\nconst js = /* @__PURE__ */ new jn(), $i = /* @__PURE__ */ new Lt(), nr = v.prototype.raycast;\nfunction or(l, s) {\n  if (this.geometry.boundsTree) {\n    if (this.material === void 0)\n      return;\n    $i.copy(this.matrixWorld).invert(), js.copy(l.ray).applyMatrix4($i);\n    const t = this.geometry.boundsTree;\n    if (l.firstHitOnly === !0) {\n      const e = Ki(t.raycastFirst(js, this.material), this, l);\n      e && s.push(e);\n    } else {\n      const e = t.raycast(js, this.material);\n      for (let i = 0, o = e.length; i < o; i++) {\n        const n = Ki(e[i], this, l);\n        n && s.push(n);\n      }\n    }\n  } else\n    nr.call(this, l, s);\n}\nfunction rr(l) {\n  return this.boundsTree = new Si(this, l), this.boundsTree;\n}\nfunction ar() {\n  this.boundsTree = null;\n}\nclass D {\n  constructor() {\n    /** Triggers all the callbacks assigned to this event. */\n    I(this, \"trigger\", (s) => {\n      const t = this.handlers.slice(0);\n      for (const e of t)\n        e(s);\n    });\n    I(this, \"handlers\", []);\n  }\n  /**\n   * Add a callback to this event instance.\n   * @param handler - the callback to be added to this event.\n   */\n  add(s) {\n    this.handlers.push(s);\n  }\n  /**\n   * Removes a callback from this event instance.\n   * @param handler - the callback to be removed from this event.\n   */\n  remove(s) {\n    this.handlers = this.handlers.filter((t) => t !== s);\n  }\n  /** Gets rid of all the suscribed events. */\n  reset() {\n    this.handlers.length = 0;\n  }\n}\nclass Ts {\n  constructor() {\n    /** Triggers all the callbacks assigned to this event. */\n    I(this, \"trigger\", async (s) => {\n      const t = this.handlers.slice(0);\n      for (const e of t)\n        await e(s);\n    });\n    I(this, \"handlers\", []);\n  }\n  /**\n   * Add a callback to this event instance.\n   * @param handler - the callback to be added to this event.\n   */\n  add(s) {\n    this.handlers.push(s);\n  }\n  /**\n   * Removes a callback from this event instance.\n   * @param handler - the callback to be removed from this event.\n   */\n  remove(s) {\n    this.handlers = this.handlers.filter((t) => t !== s);\n  }\n  /** Gets rid of all the suscribed events. */\n  reset() {\n    this.handlers.length = 0;\n  }\n}\nclass _i {\n  constructor(s) {\n    /** Whether is component is {@link Disposable}. */\n    I(this, \"isDisposeable\", () => \"dispose\" in this && \"onDisposed\" in this);\n    /** Whether is component is {@link Resizeable}. */\n    I(this, \"isResizeable\", () => \"resize\" in this && \"getSize\" in this);\n    /** Whether is component is {@link Updateable}. */\n    I(this, \"isUpdateable\", () => \"onAfterUpdate\" in this && \"onBeforeUpdate\" in this && \"update\" in this);\n    /** Whether is component is {@link Hideable}. */\n    I(this, \"isHideable\", () => \"visible\" in this);\n    /** Whether is component is {@link Configurable}. */\n    I(this, \"isConfigurable\", () => \"setup\" in this && \"config\" in this && \"onSetup\" in this);\n    this.components = s;\n  }\n}\nclass et extends _i {\n}\nclass Ni extends _i {\n  constructor(t) {\n    super(t);\n    I(this, \"worlds\", /* @__PURE__ */ new Map());\n    /**\n     * Event that is triggered when a world is added or removed from the `worlds` map.\n     * The event payload contains the world instance and the action (\"added\" or \"removed\").\n     */\n    I(this, \"onWorldChanged\", new D());\n    /**\n     * The current world this item is associated with. It can be null if no world is currently active.\n     */\n    I(this, \"currentWorld\", null);\n    this.onWorldChanged.add(({ world: e, action: i }) => {\n      i === \"removed\" && this.worlds.delete(e.uuid);\n    });\n  }\n}\nclass cr extends Ni {\n  constructor() {\n    super(...arguments);\n    /**\n     * Checks whether the instance is {@link CameraControllable}.\n     *\n     * @returns True if the instance is controllable, false otherwise.\n     */\n    I(this, \"hasCameraControls\", () => \"controls\" in this);\n  }\n}\nclass lr extends Ni {\n  constructor() {\n    super(...arguments);\n    /** {@link Updateable.onBeforeUpdate} */\n    I(this, \"onAfterUpdate\", new D());\n    /** {@link Updateable.onAfterUpdate} */\n    I(this, \"onBeforeUpdate\", new D());\n    /** {@link Disposable.onDisposed} */\n    I(this, \"onDisposed\", new D());\n    /** {@link Resizeable.onResize} */\n    I(this, \"onResize\", new D());\n    /**\n     * Event that fires when there has been a change to the list of clipping\n     * planes used by the active renderer.\n     */\n    I(this, \"onClippingPlanesUpdated\", new D());\n    /**\n     * The list of [clipping planes](https://threejs.org/docs/#api/en/renderers/WebGLRenderer.clippingPlanes) used by this instance of the renderer.\n     */\n    I(this, \"clippingPlanes\", []);\n  }\n  /**\n   * Updates the clipping planes and triggers the `onClippingPlanesUpdated` event.\n   *\n   * @remarks\n   * This method is typically called when there is a change to the list of clipping planes\n   * used by the active renderer.\n   */\n  updateClippingPlanes() {\n    this.onClippingPlanesUpdated.trigger();\n  }\n  /**\n   * Sets or removes a clipping plane from the renderer.\n   *\n   * @param active - A boolean indicating whether the clipping plane should be active or not.\n   * @param plane - The clipping plane to be added or removed.\n   * @param isLocal - An optional boolean indicating whether the clipping plane is local to the object. If not provided, it defaults to `false`.\n   *\n   * @remarks\n   * This method adds or removes a clipping plane from the `clippingPlanes` array.\n   * If `active` is `true` and the plane is not already in the array, it is added.\n   * If `active` is `false` and the plane is in the array, it is removed.\n   * The `three.clippingPlanes` property is then updated to reflect the current state of the `clippingPlanes` array,\n   * excluding any planes marked as local.\n   */\n  setPlane(t, e, i) {\n    e.isLocal = i;\n    const o = this.clippingPlanes.indexOf(e);\n    t && o === -1 ? this.clippingPlanes.push(e) : !t && o > -1 && this.clippingPlanes.splice(o, 1), this.three.clippingPlanes = this.clippingPlanes.filter(\n      (n) => !n.isLocal\n    );\n  }\n}\nconst ve = class ve extends et {\n  constructor(t) {\n    super(t);\n    I(this, \"_disposedComponents\", /* @__PURE__ */ new Set());\n    /** {@link Component.enabled} */\n    I(this, \"enabled\", !0);\n    t.add(ve.uuid, this);\n  }\n  // TODO: Remove this?\n  /**\n   * Return the UUIDs of all disposed components.\n   */\n  get() {\n    return this._disposedComponents;\n  }\n  /**\n   * Removes a mesh, its geometry and its materials from memory. If you are\n   * using any of these in other parts of the application, make sure that you\n   * remove them from the mesh before disposing it.\n   *\n   * @param object - the [object](https://threejs.org/docs/#api/en/core/Object3D)\n   * to remove.\n   *\n   * @param materials - whether to dispose the materials of the mesh.\n   *\n   * @param recursive - whether to recursively dispose the children of the mesh.\n   */\n  destroy(t, e = !0, i = !0) {\n    t.removeFromParent();\n    const o = t;\n    o.dispose && o.dispose(), this.disposeGeometryAndMaterials(t, e), i && o.children && o.children.length && this.disposeChildren(o), t.children.length = 0;\n  }\n  /**\n   * Disposes a geometry from memory.\n   *\n   * @param geometry - the\n   * [geometry](https://threejs.org/docs/#api/en/core/BufferGeometry)\n   * to remove.\n   */\n  disposeGeometry(t) {\n    t.boundsTree && t.disposeBoundsTree && t.disposeBoundsTree(), t.dispose();\n  }\n  disposeGeometryAndMaterials(t, e) {\n    const i = t;\n    i.geometry && this.disposeGeometry(i.geometry), e && i.material && ve.disposeMaterial(i), i.material = [], i.geometry = null;\n  }\n  disposeChildren(t) {\n    for (const e of t.children)\n      this.destroy(e);\n  }\n  static disposeMaterial(t) {\n    if (t.material)\n      if (Array.isArray(t.material))\n        for (const e of t.material)\n          e.dispose();\n      else\n        t.material.dispose();\n  }\n};\n/**\n * A unique identifier for the component.\n * This UUID is used to register the component within the Components system.\n */\nI(ve, \"uuid\", \"76e9cd8e-ad8f-4753-9ef6-cbc60f7247fe\");\nlet zt = ve;\nclass hr extends Ni {\n  constructor(t) {\n    super(t);\n    /** {@link Disposable.onDisposed} */\n    I(this, \"onDisposed\", new D());\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    const t = this.components.get(zt);\n    for (const e of this.three.children) {\n      const i = e;\n      i.geometry && t.destroy(i);\n    }\n    this.three.children = [], this.onDisposed.trigger(), this.onDisposed.reset();\n  }\n}\nconst ms = 0, Er = 1, dr = new M(), Ji = new yt(), qs = new Fi(), tn = new M(), ls = new ue();\nclass ur {\n  constructor() {\n    this.tolerance = -1, this.faces = [], this.newFaces = [], this.assigned = new en(), this.unassigned = new en(), this.vertices = [];\n  }\n  setFromPoints(s) {\n    if (s.length >= 4) {\n      this.makeEmpty();\n      for (let t = 0, e = s.length; t < e; t++)\n        this.vertices.push(new Ir(s[t]));\n      this.compute();\n    }\n    return this;\n  }\n  setFromObject(s) {\n    const t = [];\n    return s.updateMatrixWorld(!0), s.traverse(function(e) {\n      const i = e.geometry;\n      if (i !== void 0) {\n        const o = i.attributes.position;\n        if (o !== void 0)\n          for (let n = 0, r = o.count; n < r; n++) {\n            const a = new M();\n            a.fromBufferAttribute(o, n).applyMatrix4(e.matrixWorld), t.push(a);\n          }\n      }\n    }), this.setFromPoints(t);\n  }\n  containsPoint(s) {\n    const t = this.faces;\n    for (let e = 0, i = t.length; e < i; e++)\n      if (t[e].distanceToPoint(s) > this.tolerance)\n        return !1;\n    return !0;\n  }\n  intersectRay(s, t) {\n    const e = this.faces;\n    let i = -1 / 0, o = 1 / 0;\n    for (let n = 0, r = e.length; n < r; n++) {\n      const a = e[n], c = a.distanceToPoint(s.origin), h = a.normal.dot(s.direction);\n      if (c > 0 && h >= 0)\n        return null;\n      const d = h !== 0 ? -c / h : 0;\n      if (!(d <= 0) && (h > 0 ? o = Math.min(d, o) : i = Math.max(d, i), i > o))\n        return null;\n    }\n    return i !== -1 / 0 ? s.at(i, t) : s.at(o, t), t;\n  }\n  intersectsRay(s) {\n    return this.intersectRay(s, dr) !== null;\n  }\n  makeEmpty() {\n    return this.faces = [], this.vertices = [], this;\n  }\n  // Adds a vertex to the 'assigned' list of vertices and assigns it to the given face\n  addVertexToFace(s, t) {\n    return s.face = t, t.outside === null ? this.assigned.append(s) : this.assigned.insertBefore(t.outside, s), t.outside = s, this;\n  }\n  // Removes a vertex from the 'assigned' list of vertices and from the given face\n  removeVertexFromFace(s, t) {\n    return s === t.outside && (s.next !== null && s.next.face === t ? t.outside = s.next : t.outside = null), this.assigned.remove(s), this;\n  }\n  // Removes all the visible vertices that a given face is able to see which are stored in the 'assigned' vertex list\n  removeAllVerticesFromFace(s) {\n    if (s.outside !== null) {\n      const t = s.outside;\n      let e = s.outside;\n      for (; e.next !== null && e.next.face === s; )\n        e = e.next;\n      return this.assigned.removeSubList(t, e), t.prev = e.next = null, s.outside = null, t;\n    }\n  }\n  // Removes all the visible vertices that 'face' is able to see\n  deleteFaceVertices(s, t) {\n    const e = this.removeAllVerticesFromFace(s);\n    if (e !== void 0)\n      if (t === void 0)\n        this.unassigned.appendChain(e);\n      else {\n        let i = e;\n        do {\n          const o = i.next;\n          t.distanceToPoint(i.point) > this.tolerance ? this.addVertexToFace(i, t) : this.unassigned.append(i), i = o;\n        } while (i !== null);\n      }\n    return this;\n  }\n  // Reassigns as many vertices as possible from the unassigned list to the new faces\n  resolveUnassignedPoints(s) {\n    if (this.unassigned.isEmpty() === !1) {\n      let t = this.unassigned.first();\n      do {\n        const e = t.next;\n        let i = this.tolerance, o = null;\n        for (let n = 0; n < s.length; n++) {\n          const r = s[n];\n          if (r.mark === ms) {\n            const a = r.distanceToPoint(t.point);\n            if (a > i && (i = a, o = r), i > 1e3 * this.tolerance)\n              break;\n          }\n        }\n        o !== null && this.addVertexToFace(t, o), t = e;\n      } while (t !== null);\n    }\n    return this;\n  }\n  // Computes the extremes of a simplex which will be the initial hull\n  computeExtremes() {\n    const s = new M(), t = new M(), e = [], i = [];\n    for (let o = 0; o < 3; o++)\n      e[o] = i[o] = this.vertices[0];\n    s.copy(this.vertices[0].point), t.copy(this.vertices[0].point);\n    for (let o = 0, n = this.vertices.length; o < n; o++) {\n      const r = this.vertices[o], a = r.point;\n      for (let c = 0; c < 3; c++)\n        a.getComponent(c) < s.getComponent(c) && (s.setComponent(c, a.getComponent(c)), e[c] = r);\n      for (let c = 0; c < 3; c++)\n        a.getComponent(c) > t.getComponent(c) && (t.setComponent(c, a.getComponent(c)), i[c] = r);\n    }\n    return this.tolerance = 3 * Number.EPSILON * (Math.max(Math.abs(s.x), Math.abs(t.x)) + Math.max(Math.abs(s.y), Math.abs(t.y)) + Math.max(Math.abs(s.z), Math.abs(t.z))), { min: e, max: i };\n  }\n  // Computes the initial simplex assigning to its faces all the points\n  // that are candidates to form part of the hull\n  computeInitialHull() {\n    const s = this.vertices, t = this.computeExtremes(), e = t.min, i = t.max;\n    let o = 0, n = 0;\n    for (let E = 0; E < 3; E++) {\n      const u = i[E].point.getComponent(E) - e[E].point.getComponent(E);\n      u > o && (o = u, n = E);\n    }\n    const r = e[n], a = i[n];\n    let c, h;\n    o = 0, Ji.set(r.point, a.point);\n    for (let E = 0, u = this.vertices.length; E < u; E++) {\n      const f = s[E];\n      if (f !== r && f !== a) {\n        Ji.closestPointToPoint(f.point, !0, tn);\n        const T = tn.distanceToSquared(f.point);\n        T > o && (o = T, c = f);\n      }\n    }\n    o = -1, qs.setFromCoplanarPoints(r.point, a.point, c.point);\n    for (let E = 0, u = this.vertices.length; E < u; E++) {\n      const f = s[E];\n      if (f !== r && f !== a && f !== c) {\n        const T = Math.abs(qs.distanceToPoint(f.point));\n        T > o && (o = T, h = f);\n      }\n    }\n    const d = [];\n    if (qs.distanceToPoint(h.point) < 0) {\n      d.push(\n        Rt.create(r, a, c),\n        Rt.create(h, a, r),\n        Rt.create(h, c, a),\n        Rt.create(h, r, c)\n      );\n      for (let E = 0; E < 3; E++) {\n        const u = (E + 1) % 3;\n        d[E + 1].getEdge(2).setTwin(d[0].getEdge(u)), d[E + 1].getEdge(1).setTwin(d[u + 1].getEdge(0));\n      }\n    } else {\n      d.push(\n        Rt.create(r, c, a),\n        Rt.create(h, r, a),\n        Rt.create(h, a, c),\n        Rt.create(h, c, r)\n      );\n      for (let E = 0; E < 3; E++) {\n        const u = (E + 1) % 3;\n        d[E + 1].getEdge(2).setTwin(d[0].getEdge((3 - E) % 3)), d[E + 1].getEdge(0).setTwin(d[u + 1].getEdge(1));\n      }\n    }\n    for (let E = 0; E < 4; E++)\n      this.faces.push(d[E]);\n    for (let E = 0, u = s.length; E < u; E++) {\n      const f = s[E];\n      if (f !== r && f !== a && f !== c && f !== h) {\n        o = this.tolerance;\n        let T = null;\n        for (let R = 0; R < 4; R++) {\n          const C = this.faces[R].distanceToPoint(f.point);\n          C > o && (o = C, T = this.faces[R]);\n        }\n        T !== null && this.addVertexToFace(f, T);\n      }\n    }\n    return this;\n  }\n  // Removes inactive faces\n  reindexFaces() {\n    const s = [];\n    for (let t = 0; t < this.faces.length; t++) {\n      const e = this.faces[t];\n      e.mark === ms && s.push(e);\n    }\n    return this.faces = s, this;\n  }\n  // Finds the next vertex to create faces with the current hull\n  nextVertexToAdd() {\n    if (this.assigned.isEmpty() === !1) {\n      let s, t = 0;\n      const e = this.assigned.first().face;\n      let i = e.outside;\n      do {\n        const o = e.distanceToPoint(i.point);\n        o > t && (t = o, s = i), i = i.next;\n      } while (i !== null && i.face === e);\n      return s;\n    }\n  }\n  // Computes a chain of half edges in CCW order called the 'horizon'.\n  // For an edge to be part of the horizon it must join a face that can see\n  // 'eyePoint' and a face that cannot see 'eyePoint'.\n  computeHorizon(s, t, e, i) {\n    this.deleteFaceVertices(e), e.mark = Er;\n    let o;\n    t === null ? o = t = e.getEdge(0) : o = t.next;\n    do {\n      const n = o.twin, r = n.face;\n      r.mark === ms && (r.distanceToPoint(s) > this.tolerance ? this.computeHorizon(s, n, r, i) : i.push(o)), o = o.next;\n    } while (o !== t);\n    return this;\n  }\n  // Creates a face with the vertices 'eyeVertex.point', 'horizonEdge.tail' and 'horizonEdge.head' in CCW order\n  addAdjoiningFace(s, t) {\n    const e = Rt.create(s, t.tail(), t.head());\n    return this.faces.push(e), e.getEdge(-1).setTwin(t.twin), e.getEdge(0);\n  }\n  //  Adds 'horizon.length' faces to the hull, each face will be linked with the\n  //  horizon opposite face and the face on the left/right\n  addNewFaces(s, t) {\n    this.newFaces = [];\n    let e = null, i = null;\n    for (let o = 0; o < t.length; o++) {\n      const n = t[o], r = this.addAdjoiningFace(s, n);\n      e === null ? e = r : r.next.setTwin(i), this.newFaces.push(r.face), i = r;\n    }\n    return e.next.setTwin(i), this;\n  }\n  // Adds a vertex to the hull\n  addVertexToHull(s) {\n    const t = [];\n    return this.unassigned.clear(), this.removeVertexFromFace(s, s.face), this.computeHorizon(s.point, null, s.face, t), this.addNewFaces(s, t), this.resolveUnassignedPoints(this.newFaces), this;\n  }\n  cleanup() {\n    return this.assigned.clear(), this.unassigned.clear(), this.newFaces = [], this;\n  }\n  compute() {\n    let s;\n    for (this.computeInitialHull(); (s = this.nextVertexToAdd()) !== void 0; )\n      this.addVertexToHull(s);\n    return this.reindexFaces(), this.cleanup(), this;\n  }\n}\nclass Rt {\n  constructor() {\n    this.normal = new M(), this.midpoint = new M(), this.area = 0, this.constant = 0, this.outside = null, this.mark = ms, this.edge = null;\n  }\n  static create(s, t, e) {\n    const i = new Rt(), o = new Ks(s, i), n = new Ks(t, i), r = new Ks(e, i);\n    return o.next = r.prev = n, n.next = o.prev = r, r.next = n.prev = o, i.edge = o, i.compute();\n  }\n  getEdge(s) {\n    let t = this.edge;\n    for (; s > 0; )\n      t = t.next, s--;\n    for (; s < 0; )\n      t = t.prev, s++;\n    return t;\n  }\n  compute() {\n    const s = this.edge.tail(), t = this.edge.head(), e = this.edge.next.head();\n    return ls.set(s.point, t.point, e.point), ls.getNormal(this.normal), ls.getMidpoint(this.midpoint), this.area = ls.getArea(), this.constant = this.normal.dot(this.midpoint), this;\n  }\n  distanceToPoint(s) {\n    return this.normal.dot(s) - this.constant;\n  }\n}\nclass Ks {\n  constructor(s, t) {\n    this.vertex = s, this.prev = null, this.next = null, this.twin = null, this.face = t;\n  }\n  head() {\n    return this.vertex;\n  }\n  tail() {\n    return this.prev ? this.prev.vertex : null;\n  }\n  length() {\n    const s = this.head(), t = this.tail();\n    return t !== null ? t.point.distanceTo(s.point) : -1;\n  }\n  lengthSquared() {\n    const s = this.head(), t = this.tail();\n    return t !== null ? t.point.distanceToSquared(s.point) : -1;\n  }\n  setTwin(s) {\n    return this.twin = s, s.twin = this, this;\n  }\n}\nclass Ir {\n  constructor(s) {\n    this.point = s, this.prev = null, this.next = null, this.face = null;\n  }\n}\nclass en {\n  constructor() {\n    this.head = null, this.tail = null;\n  }\n  first() {\n    return this.head;\n  }\n  last() {\n    return this.tail;\n  }\n  clear() {\n    return this.head = this.tail = null, this;\n  }\n  // Inserts a vertex before the target vertex\n  insertBefore(s, t) {\n    return t.prev = s.prev, t.next = s, t.prev === null ? this.head = t : t.prev.next = t, s.prev = t, this;\n  }\n  // Inserts a vertex after the target vertex\n  insertAfter(s, t) {\n    return t.prev = s, t.next = s.next, t.next === null ? this.tail = t : t.next.prev = t, s.next = t, this;\n  }\n  // Appends a vertex to the end of the linked list\n  append(s) {\n    return this.head === null ? this.head = s : this.tail.next = s, s.prev = this.tail, s.next = null, this.tail = s, this;\n  }\n  // Appends a chain of vertices where 'vertex' is the head.\n  appendChain(s) {\n    for (this.head === null ? this.head = s : this.tail.next = s, s.prev = this.tail; s.next !== null; )\n      s = s.next;\n    return this.tail = s, this;\n  }\n  // Removes a vertex from the linked list\n  remove(s) {\n    return s.prev === null ? this.head = s.next : s.prev.next = s.next, s.next === null ? this.tail = s.prev : s.next.prev = s.prev, this;\n  }\n  // Removes a list of vertices whose 'head' is 'a' and whose 'tail' is b\n  removeSubList(s, t) {\n    return s.prev === null ? this.head = t.next : s.prev.next = t.next, t.next === null ? this.tail = s.prev : t.next.prev = s.prev, this;\n  }\n  isEmpty() {\n    return this.head === null;\n  }\n}\nconst Ii = [2, 2, 1], fi = [1, 0, 0];\nfunction Nt(l, s) {\n  return l * 3 + s;\n}\nfunction fr(l) {\n  const s = l.elements;\n  let t = 0;\n  for (let e = 0; e < 9; e++)\n    t += s[e] * s[e];\n  return Math.sqrt(t);\n}\nfunction pr(l) {\n  const s = l.elements;\n  let t = 0;\n  for (let e = 0; e < 3; e++) {\n    const i = s[Nt(Ii[e], fi[e])];\n    t += 2 * i * i;\n  }\n  return Math.sqrt(t);\n}\nfunction Cr(l, s) {\n  let t = 0, e = 1;\n  const i = l.elements;\n  for (let c = 0; c < 3; c++) {\n    const h = Math.abs(i[Nt(Ii[c], fi[c])]);\n    h > t && (t = h, e = c);\n  }\n  let o = 1, n = 0;\n  const r = fi[e], a = Ii[e];\n  if (Math.abs(i[Nt(a, r)]) > Number.EPSILON) {\n    const c = i[Nt(a, a)], h = i[Nt(r, r)], d = i[Nt(a, r)], E = (c - h) / 2 / d;\n    let u;\n    E < 0 ? u = -1 / (-E + Math.sqrt(1 + E * E)) : u = 1 / (E + Math.sqrt(1 + E * E)), o = 1 / Math.sqrt(1 + u * u), n = u * o;\n  }\n  return s.identity(), s.elements[Nt(r, r)] = o, s.elements[Nt(a, a)] = o, s.elements[Nt(a, r)] = n, s.elements[Nt(r, a)] = -n, s;\n}\nfunction Tr(l, s) {\n  let t = 0, e = 0;\n  const i = 10;\n  s.unitary.identity(), s.diagonal.copy(l);\n  const o = s.unitary, n = s.diagonal, r = new O.Matrix3(), a = new O.Matrix3(), c = Number.EPSILON * fr(n);\n  for (; e < i && pr(n) > c; )\n    Cr(n, r), a.copy(r).transpose(), n.multiply(r), n.premultiply(a), o.multiply(r), ++t > 2 && (e++, t = 0);\n  return s;\n}\nfunction mr(l) {\n  const s = [];\n  for (let it = 0; it < l.length - 2; it += 3) {\n    const Xt = l[it], J = l[it + 1], $t = l[it + 2];\n    s.push(new O.Vector3(Xt, J, $t));\n  }\n  const t = new ur();\n  t.setFromPoints(s);\n  const e = {\n    unitary: new O.Matrix3(),\n    diagonal: new O.Matrix3()\n  }, i = t.faces, o = [], n = [];\n  for (let it = 0, Xt = i.length; it < Xt; it++) {\n    const J = i[it];\n    let $t = J.edge;\n    o.length = 0;\n    do\n      o.push($t), $t = $t.next;\n    while ($t !== J.edge);\n    const Hn = o.length - 2;\n    for (let Xe = 1, Wn = Hn; Xe <= Wn; Xe++) {\n      const bs = o[0].vertex, vs = o[Xe + 0].vertex, Bs = o[Xe + 1].vertex;\n      n.push(bs.point.x, bs.point.y, bs.point.z), n.push(vs.point.x, vs.point.y, vs.point.z), n.push(Bs.point.x, Bs.point.y, Bs.point.z);\n    }\n  }\n  const r = new O.Vector3(), a = new O.Vector3(), c = new O.Vector3(), h = new O.Vector3(), d = new O.Vector3(), E = new O.Vector3(), u = new O.Vector3(), f = new O.Vector3();\n  let T = 0, R = 0, C = 0, A = 0, F = 0, p = 0, m = 0;\n  for (let it = 0, Xt = n.length; it < Xt; it += 9) {\n    r.fromArray(n, it), a.fromArray(n, it + 3), c.fromArray(n, it + 6), u.set(0, 0, 0), u.add(r).add(a).add(c).divideScalar(3), h.subVectors(a, r), d.subVectors(c, r);\n    const J = E.crossVectors(h, d).length() / 2;\n    f.add(E.copy(u).multiplyScalar(J)), T += J, R += (9 * u.x * u.x + r.x * r.x + a.x * a.x + c.x * c.x) * (J / 12), C += (9 * u.x * u.y + r.x * r.y + a.x * a.y + c.x * c.y) * (J / 12), A += (9 * u.x * u.z + r.x * r.z + a.x * a.z + c.x * c.z) * (J / 12), F += (9 * u.y * u.y + r.y * r.y + a.y * a.y + c.y * c.y) * (J / 12), p += (9 * u.y * u.z + r.y * r.z + a.y * a.z + c.y * c.z) * (J / 12), m += (9 * u.z * u.z + r.z * r.z + a.z * a.z + c.z * c.z) * (J / 12);\n  }\n  f.divideScalar(T), R /= T, C /= T, A /= T, F /= T, p /= T, m /= T, R -= f.x * f.x, C -= f.x * f.y, A -= f.x * f.z, F -= f.y * f.y, p -= f.y * f.z, m -= f.z * f.z;\n  const g = new O.Matrix3();\n  g.elements[0] = R, g.elements[1] = C, g.elements[2] = A, g.elements[3] = C, g.elements[4] = F, g.elements[5] = p, g.elements[6] = A, g.elements[7] = p, g.elements[8] = m, Tr(g, e);\n  const S = e.unitary, _ = new O.Vector3(), N = new O.Vector3(), y = new O.Vector3();\n  S.extractBasis(_, N, y);\n  let w = -1 / 0, L = -1 / 0, U = -1 / 0, b = 1 / 0, B = 1 / 0, H = 1 / 0;\n  for (let it = 0, Xt = s.length; it < Xt; it++) {\n    const J = s[it];\n    w = Math.max(_.dot(J), w), L = Math.max(N.dot(J), L), U = Math.max(y.dot(J), U), b = Math.min(_.dot(J), b), B = Math.min(N.dot(J), B), H = Math.min(y.dot(J), H);\n  }\n  _.multiplyScalar(0.5 * (b + w)), N.multiplyScalar(0.5 * (B + L)), y.multiplyScalar(0.5 * (H + U));\n  const q = new O.Vector3(), st = new O.Vector3(), Q = new O.Matrix3();\n  q.add(_).add(N).add(y), st.x = w - b, st.y = L - B, st.z = U - H, st.multiplyScalar(0.5), Q.copy(S);\n  const { x: Ht, y: Wt, z: kt } = st, ke = new O.Matrix4();\n  ke.makeScale(Ht * 2, Wt * 2, kt * 2);\n  const Te = new O.Matrix4();\n  Te.makeTranslation(-Ht, -Wt, -kt);\n  const Li = new O.Matrix4();\n  Li.makeTranslation(q.x, q.y, q.z);\n  const Mi = new O.Matrix4();\n  Mi.setFromMatrix3(Q);\n  const me = new O.Matrix4();\n  return me.multiply(Li), me.multiply(Mi), me.multiply(Te), me.multiply(ke), { center: q, halfSizes: st, rotation: Q, transformation: me };\n}\nfunction Rr(l, s, t) {\n  const e = [\n    l[0] - s[0],\n    l[1] - s[1],\n    l[2] - s[2]\n  ];\n  return t[0] * e[0] + t[1] * e[1] + t[2] * e[2] > 0;\n}\nclass sn {\n  static isTransparent(s) {\n    return s.transparent && s.opacity < 1;\n  }\n}\nconst $ = class $ {\n  // Copied from three.js source\n  // Original source: http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n  static create() {\n    const s = Math.random() * 4294967295 | 0, t = Math.random() * 4294967295 | 0, e = Math.random() * 4294967295 | 0, i = Math.random() * 4294967295 | 0;\n    return `${$._lut[s & 255] + $._lut[s >> 8 & 255] + $._lut[s >> 16 & 255] + $._lut[s >> 24 & 255]}-${$._lut[t & 255]}${$._lut[t >> 8 & 255]}-${$._lut[t >> 16 & 15 | 64]}${$._lut[t >> 24 & 255]}-${$._lut[e & 63 | 128]}${$._lut[e >> 8 & 255]}-${$._lut[e >> 16 & 255]}${$._lut[e >> 24 & 255]}${$._lut[i & 255]}${$._lut[i >> 8 & 255]}${$._lut[i >> 16 & 255]}${$._lut[i >> 24 & 255]}`.toLowerCase();\n  }\n  static validate(s) {\n    if (!$._pattern.test(s))\n      throw new Error(\n        `${s} is not a valid UUID v4.\n\n- If you're the tool creator, you can take one from https://www.uuidgenerator.net/.\n\n- If you're using a platform tool, verify the uuid isn't misspelled or contact the tool creator.`\n      );\n  }\n};\nI($, \"_pattern\", /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$/), // prettier-ignore\nI($, \"_lut\", [\n  \"00\",\n  \"01\",\n  \"02\",\n  \"03\",\n  \"04\",\n  \"05\",\n  \"06\",\n  \"07\",\n  \"08\",\n  \"09\",\n  \"0a\",\n  \"0b\",\n  \"0c\",\n  \"0d\",\n  \"0e\",\n  \"0f\",\n  \"10\",\n  \"11\",\n  \"12\",\n  \"13\",\n  \"14\",\n  \"15\",\n  \"16\",\n  \"17\",\n  \"18\",\n  \"19\",\n  \"1a\",\n  \"1b\",\n  \"1c\",\n  \"1d\",\n  \"1e\",\n  \"1f\",\n  \"20\",\n  \"21\",\n  \"22\",\n  \"23\",\n  \"24\",\n  \"25\",\n  \"26\",\n  \"27\",\n  \"28\",\n  \"29\",\n  \"2a\",\n  \"2b\",\n  \"2c\",\n  \"2d\",\n  \"2e\",\n  \"2f\",\n  \"30\",\n  \"31\",\n  \"32\",\n  \"33\",\n  \"34\",\n  \"35\",\n  \"36\",\n  \"37\",\n  \"38\",\n  \"39\",\n  \"3a\",\n  \"3b\",\n  \"3c\",\n  \"3d\",\n  \"3e\",\n  \"3f\",\n  \"40\",\n  \"41\",\n  \"42\",\n  \"43\",\n  \"44\",\n  \"45\",\n  \"46\",\n  \"47\",\n  \"48\",\n  \"49\",\n  \"4a\",\n  \"4b\",\n  \"4c\",\n  \"4d\",\n  \"4e\",\n  \"4f\",\n  \"50\",\n  \"51\",\n  \"52\",\n  \"53\",\n  \"54\",\n  \"55\",\n  \"56\",\n  \"57\",\n  \"58\",\n  \"59\",\n  \"5a\",\n  \"5b\",\n  \"5c\",\n  \"5d\",\n  \"5e\",\n  \"5f\",\n  \"60\",\n  \"61\",\n  \"62\",\n  \"63\",\n  \"64\",\n  \"65\",\n  \"66\",\n  \"67\",\n  \"68\",\n  \"69\",\n  \"6a\",\n  \"6b\",\n  \"6c\",\n  \"6d\",\n  \"6e\",\n  \"6f\",\n  \"70\",\n  \"71\",\n  \"72\",\n  \"73\",\n  \"74\",\n  \"75\",\n  \"76\",\n  \"77\",\n  \"78\",\n  \"79\",\n  \"7a\",\n  \"7b\",\n  \"7c\",\n  \"7d\",\n  \"7e\",\n  \"7f\",\n  \"80\",\n  \"81\",\n  \"82\",\n  \"83\",\n  \"84\",\n  \"85\",\n  \"86\",\n  \"87\",\n  \"88\",\n  \"89\",\n  \"8a\",\n  \"8b\",\n  \"8c\",\n  \"8d\",\n  \"8e\",\n  \"8f\",\n  \"90\",\n  \"91\",\n  \"92\",\n  \"93\",\n  \"94\",\n  \"95\",\n  \"96\",\n  \"97\",\n  \"98\",\n  \"99\",\n  \"9a\",\n  \"9b\",\n  \"9c\",\n  \"9d\",\n  \"9e\",\n  \"9f\",\n  \"a0\",\n  \"a1\",\n  \"a2\",\n  \"a3\",\n  \"a4\",\n  \"a5\",\n  \"a6\",\n  \"a7\",\n  \"a8\",\n  \"a9\",\n  \"aa\",\n  \"ab\",\n  \"ac\",\n  \"ad\",\n  \"ae\",\n  \"af\",\n  \"b0\",\n  \"b1\",\n  \"b2\",\n  \"b3\",\n  \"b4\",\n  \"b5\",\n  \"b6\",\n  \"b7\",\n  \"b8\",\n  \"b9\",\n  \"ba\",\n  \"bb\",\n  \"bc\",\n  \"bd\",\n  \"be\",\n  \"bf\",\n  \"c0\",\n  \"c1\",\n  \"c2\",\n  \"c3\",\n  \"c4\",\n  \"c5\",\n  \"c6\",\n  \"c7\",\n  \"c8\",\n  \"c9\",\n  \"ca\",\n  \"cb\",\n  \"cc\",\n  \"cd\",\n  \"ce\",\n  \"cf\",\n  \"d0\",\n  \"d1\",\n  \"d2\",\n  \"d3\",\n  \"d4\",\n  \"d5\",\n  \"d6\",\n  \"d7\",\n  \"d8\",\n  \"d9\",\n  \"da\",\n  \"db\",\n  \"dc\",\n  \"dd\",\n  \"de\",\n  \"df\",\n  \"e0\",\n  \"e1\",\n  \"e2\",\n  \"e3\",\n  \"e4\",\n  \"e5\",\n  \"e6\",\n  \"e7\",\n  \"e8\",\n  \"e9\",\n  \"ea\",\n  \"eb\",\n  \"ec\",\n  \"ed\",\n  \"ee\",\n  \"ef\",\n  \"f0\",\n  \"f1\",\n  \"f2\",\n  \"f3\",\n  \"f4\",\n  \"f5\",\n  \"f6\",\n  \"f7\",\n  \"f8\",\n  \"f9\",\n  \"fa\",\n  \"fb\",\n  \"fc\",\n  \"fd\",\n  \"fe\",\n  \"ff\"\n]);\nlet ze = $;\nclass sa extends et {\n  constructor(t, e) {\n    super(t);\n    /** {@link Disposable.onDisposed} */\n    I(this, \"onDisposed\", new D());\n    /**\n     * An event that is triggered when a vertex is found.\n     * The event passes a THREE.Vector3 representing the position of the found vertex.\n     */\n    I(this, \"onVertexFound\", new D());\n    /**\n     * An event that is triggered when a vertex is lost.\n     * The event passes a THREE.Vector3 representing the position of the lost vertex.\n     */\n    I(this, \"onVertexLost\", new D());\n    /**\n     * An event that is triggered when the picker is enabled or disabled\n     */\n    I(this, \"onEnabled\", new D());\n    /**\n     * A reference to the Components instance associated with this VertexPicker.\n     */\n    I(this, \"components\");\n    /**\n     * A reference to the working plane used for vertex picking.\n     * This plane is used to determine which vertices are considered valid for picking.\n     * If this value is null, all vertices are considered valid.\n     */\n    I(this, \"workingPlane\", null);\n    I(this, \"_pickedPoint\", null);\n    I(this, \"_config\");\n    I(this, \"_enabled\", !1);\n    this.components = t, this.config = {\n      snapDistance: 0.25,\n      showOnlyVertex: !1,\n      ...e\n    }, this.enabled = !1;\n  }\n  /**\n   * Sets the enabled state of the VertexPicker.\n   * When enabled, the VertexPicker will actively search for vertices in the 3D scene.\n   * When disabled, the VertexPicker will stop searching for vertices and reset the picked point.\n   *\n   * @param value - The new enabled state.\n   */\n  set enabled(t) {\n    this._enabled = t, t || (this._pickedPoint = null), this.onEnabled.trigger(t);\n  }\n  /**\n   * Gets the current enabled state of the VertexPicker.\n   *\n   * @returns The current enabled state.\n   */\n  get enabled() {\n    return this._enabled;\n  }\n  /**\n   * Sets the configuration for the VertexPicker component.\n   *\n   * @param value - A Partial object containing the configuration properties to update.\n   * The properties not provided in the value object will retain their current values.\n   *\n   * @example\n   * ```typescript\n   * vertexPicker.config = {\n   *   snapDistance: 0.5,\n   *   showOnlyVertex: true,\n   * };\n   * ```\n   */\n  set config(t) {\n    this._config = { ...this._config, ...t };\n  }\n  /**\n   * Gets the current configuration for the VertexPicker component.\n   *\n   * @returns A copy of the current VertexPickerConfig object.\n   *\n   * @example\n   * ```typescript\n   * const currentConfig = vertexPicker.config;\n   * console.log(currentConfig.snapDistance); // Output: 0.25\n   * ```\n   */\n  get config() {\n    return this._config;\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    this.onVertexFound.reset(), this.onVertexLost.reset(), this.components = null, this.onDisposed.trigger(), this.onDisposed.reset();\n  }\n  /**\n   * Performs the vertex picking operation based on the current state of the VertexPicker.\n   *\n   * @param world - The World instance to use for raycasting.\n   *\n   * @returns The current picked point, or null if no point is picked.\n   *\n   * @remarks\n   * This method checks if the VertexPicker is enabled. If not, it returns the current picked point.\n   * If enabled, it performs raycasting to find the closest intersecting object.\n   * It then determines the closest vertex or point on the face, based on the configuration settings.\n   * If the picked point is on the working plane (if defined), it triggers the `onVertexFound` event and updates the `pickedPoint`.\n   * If the picked point is not on the working plane, it resets the `pickedPoint`.\n   * If no intersecting object is found, it triggers the `onVertexLost` event and resets the `pickedPoint`.\n   */\n  get(t) {\n    if (!this.enabled)\n      return this._pickedPoint;\n    const o = this.components.get(He).get(t).castRay();\n    if (!o)\n      return this._pickedPoint !== null && (this.onVertexLost.trigger(), this._pickedPoint = null), this._pickedPoint;\n    const n = this.getClosestVertex(o);\n    return n ? (this.workingPlane ? Math.abs(this.workingPlane.distanceToPoint(n)) < 1e-3 : !0) ? ((this._pickedPoint === null || !this._pickedPoint.equals(n)) && (this._pickedPoint = n.clone(), this.onVertexFound.trigger(this._pickedPoint)), this._pickedPoint) : (this._pickedPoint = null, this._pickedPoint) : (this._pickedPoint !== null && (this.onVertexLost.trigger(), this._pickedPoint = null), this._pickedPoint);\n  }\n  getClosestVertex(t) {\n    let e = new O.Vector3(), i = !1, o = Number.MAX_SAFE_INTEGER;\n    const n = this.getVertices(t);\n    if (n === null)\n      return null;\n    for (const r of n) {\n      if (!r)\n        continue;\n      const a = t.point.distanceTo(r);\n      a > o || a > this._config.snapDistance || (i = !0, e = r, o = t.point.distanceTo(r));\n    }\n    return i ? e : this.config.showOnlyVertex ? null : t.point;\n  }\n  getVertices(t) {\n    const e = t.object;\n    if (!t.face || !e)\n      return null;\n    const i = e.geometry, o = new O.Matrix4(), { instanceId: n } = t, r = n !== void 0, a = e instanceof O.InstancedMesh;\n    return a && r && e.getMatrixAt(n, o), [\n      this.getVertex(t.face.a, i),\n      this.getVertex(t.face.b, i),\n      this.getVertex(t.face.c, i)\n    ].map((c) => (c && (a && r && c.applyMatrix4(o), c.applyMatrix4(e.matrixWorld)), c));\n  }\n  getVertex(t, e) {\n    if (t === void 0)\n      return null;\n    const i = e.attributes.position;\n    return new O.Vector3(\n      i.getX(t),\n      i.getY(t),\n      i.getZ(t)\n    );\n  }\n}\nconst Fs = class Fs {\n  constructor() {\n    /** {@link Disposable.onDisposed} */\n    I(this, \"onDisposed\", new D());\n    /**\n     * The list of components created in this app.\n     * The keys are UUIDs and the values are instances of the components.\n     */\n    I(this, \"list\", /* @__PURE__ */ new Map());\n    /**\n     * If disabled, the animation loop will be stopped.\n     * Default value is false.\n     */\n    I(this, \"enabled\", !1);\n    I(this, \"_clock\");\n    I(this, \"update\", () => {\n      if (!this.enabled)\n        return;\n      const s = this._clock.getDelta();\n      for (const [t, e] of this.list)\n        e.enabled && e.isUpdateable() && e.update(s);\n      requestAnimationFrame(this.update);\n    });\n    this._clock = new O.Clock(), Fs.setupBVH();\n  }\n  /**\n   * Adds a component to the list of components.\n   * Throws an error if a component with the same UUID already exists.\n   *\n   * @param uuid - The unique identifier of the component.\n   * @param instance - The instance of the component to be added.\n   *\n   * @throws Will throw an error if a component with the same UUID already exists.\n   *\n   * @internal\n   */\n  add(s, t) {\n    if (this.list.has(s))\n      throw new Error(\n        \"You're trying to add a component that already exists in the components instance. Use Components.get() instead.\"\n      );\n    ze.validate(s), this.list.set(s, t);\n  }\n  /**\n   * Retrieves a component instance by its constructor function.\n   * If the component does not exist in the list, it will be created and added.\n   *\n   * @template U - The type of the component to retrieve.\n   * @param Component - The constructor function of the component to retrieve.\n   *\n   * @returns The instance of the requested component.\n   *\n   * @throws Will throw an error if a component with the same UUID already exists.\n   *\n   * @internal\n   */\n  get(s) {\n    const t = s.uuid;\n    if (!this.list.has(t)) {\n      const e = new s(this);\n      return this.list.has(t) || this.add(t, e), e;\n    }\n    return this.list.get(t);\n  }\n  /**\n   * Initializes the Components instance.\n   * This method starts the animation loop, sets the enabled flag to true,\n   * and calls the update method.\n   *\n   * @returns {void}\n   */\n  init() {\n    this.enabled = !0, this._clock.start(), this.update();\n  }\n  /**\n   * Disposes the memory of all the components and tools of this instance of\n   * the library. A memory leak will be created if:\n   *\n   * - An instance of the library ends up out of scope and this function isn't\n   * called. This is especially relevant in Single Page Applications (React,\n   * Angular, Vue, etc).\n   *\n   * - Any of the objects of this instance (meshes, geometries,materials, etc) is\n   * referenced by a reference type (object or array).\n   *\n   * You can learn more about how Three.js handles memory leaks\n   * [here](https://threejs.org/docs/#manual/en/introduction/How-to-dispose-of-objects).\n   *\n   */\n  dispose() {\n    this.enabled = !1;\n    for (const [s, t] of this.list)\n      t.enabled = !1, t.isDisposeable() && t.dispose();\n    this._clock.stop(), this.onDisposed.trigger(), this.onDisposed.reset();\n  }\n  static setupBVH() {\n    O.BufferGeometry.prototype.computeBoundsTree = rr, O.BufferGeometry.prototype.disposeBoundsTree = ar, O.Mesh.prototype.raycast = or;\n  }\n};\n/**\n * The version of the @thatopen/components library.\n */\nI(Fs, \"release\", \"2.1.13\");\nlet pi = Fs;\nclass Ar {\n  constructor(s) {\n    I(this, \"_event\");\n    I(this, \"_position\", new O.Vector2());\n    /** {@link Disposable.onDisposed} */\n    I(this, \"onDisposed\", new D());\n    I(this, \"updateMouseInfo\", (s) => {\n      this._event = s;\n    });\n    this.dom = s, this.setupEvents(!0);\n  }\n  /**\n   * The real position of the mouse of the Three.js canvas.\n   */\n  get position() {\n    if (this._event) {\n      const s = this.dom.getBoundingClientRect();\n      this._position.x = this.getPositionX(s, this._event), this._position.y = this.getPositionY(s, this._event);\n    }\n    return this._position;\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    this.setupEvents(!1), this.onDisposed.trigger(), this.onDisposed.reset();\n  }\n  getPositionY(s, t) {\n    return -((t.clientY - s.top) / (s.bottom - s.top)) * 2 + 1;\n  }\n  getPositionX(s, t) {\n    return (t.clientX - s.left) / (s.right - s.left) * 2 - 1;\n  }\n  setupEvents(s) {\n    s ? this.dom.addEventListener(\"pointermove\", this.updateMouseInfo) : this.dom.removeEventListener(\"pointermove\", this.updateMouseInfo);\n  }\n}\nclass Fr {\n  constructor(s, t) {\n    /** {@link Component.enabled} */\n    I(this, \"enabled\", !0);\n    /** The components instance to which this Raycaster belongs. */\n    I(this, \"components\");\n    /** {@link Disposable.onDisposed} */\n    I(this, \"onDisposed\", new D());\n    /** The position of the mouse in the screen. */\n    I(this, \"mouse\");\n    /**\n     * A reference to the Three.js Raycaster instance.\n     * This is used for raycasting operations.\n     */\n    I(this, \"three\", new O.Raycaster());\n    /**\n     * A reference to the world instance to which this Raycaster belongs.\n     * This is used to access the camera and meshes.\n     */\n    I(this, \"world\");\n    const e = t.renderer;\n    if (!e)\n      throw new Error(\"A renderer is needed for the raycaster to work!\");\n    this.world = t, this.mouse = new Ar(e.three.domElement), this.components = s;\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    this.mouse.dispose(), this.onDisposed.trigger(), this.onDisposed.reset();\n  }\n  /**\n   * Throws a ray from the camera to the mouse or touch event point and returns\n   * the first item found. This also takes into account the clipping planes\n   * used by the renderer.\n   *\n   * @param items - the [meshes](https://threejs.org/docs/#api/en/objects/Mesh)\n   * to query. If not provided, it will query all the meshes stored in\n   * {@link Components.meshes}.\n   */\n  castRay(s = Array.from(this.world.meshes)) {\n    if (!this.world)\n      throw new Error(\"A world is needed to cast rays!\");\n    const t = this.world.camera.three;\n    return this.three.setFromCamera(this.mouse.position, t), this.intersect(s);\n  }\n  /**\n   * Casts a ray from a given origin in a given direction and returns the first item found.\n   * This method also takes into account the clipping planes used by the renderer.\n   *\n   * @param origin - The origin of the ray.\n   * @param direction - The direction of the ray.\n   * @param items - The meshes to query. If not provided, it will query all the meshes stored in {@link World.meshes}.\n   * @returns The first intersection found or `null` if no intersection was found.\n   */\n  castRayFromVector(s, t, e = Array.from(this.world.meshes)) {\n    return this.three.set(s, t), this.intersect(e);\n  }\n  intersect(s = Array.from(this.world.meshes)) {\n    const t = this.three.intersectObjects(s), e = this.filterClippingPlanes(t);\n    return e.length > 0 ? e[0] : null;\n  }\n  filterClippingPlanes(s) {\n    if (!this.world.renderer)\n      throw new Error(\"Renderer not found!\");\n    const t = this.world.renderer.three;\n    if (!t.clippingPlanes)\n      return s;\n    const e = t.clippingPlanes;\n    return s.length <= 0 || !e || (e == null ? void 0 : e.length) <= 0 ? s : s.filter(\n      (i) => e.every((o) => o.distanceToPoint(i.point) > 0)\n    );\n  }\n}\nconst gs = class gs extends et {\n  constructor(t) {\n    super(t);\n    /** {@link Component.enabled} */\n    I(this, \"enabled\", !0);\n    /**\n     * A Map that stores raycasters for each world.\n     * The key is the world's UUID, and the value is the corresponding SimpleRaycaster instance.\n     */\n    I(this, \"list\", /* @__PURE__ */ new Map());\n    /** {@link Disposable.onDisposed} */\n    I(this, \"onDisposed\", new D());\n    t.add(gs.uuid, this);\n  }\n  /**\n   * Retrieves a SimpleRaycaster instance for the given world.\n   * If a SimpleRaycaster instance already exists for the world, it will be returned.\n   * Otherwise, a new SimpleRaycaster instance will be created and added to the list.\n   *\n   * @param world - The world for which to retrieve or create a SimpleRaycaster instance.\n   * @returns The SimpleRaycaster instance for the given world.\n   */\n  get(t) {\n    if (this.list.has(t.uuid))\n      return this.list.get(t.uuid);\n    const e = new Fr(this.components, t);\n    return this.list.set(t.uuid, e), t.onDisposed.add(() => {\n      this.delete(t);\n    }), e;\n  }\n  /**\n   * Deletes the SimpleRaycaster instance associated with the given world.\n   * If a SimpleRaycaster instance exists for the given world, it will be disposed and removed from the list.\n   *\n   * @param world - The world for which to delete the SimpleRaycaster instance.\n   * @returns {void}\n   */\n  delete(t) {\n    const e = this.list.get(t.uuid);\n    e && e.dispose(), this.list.delete(t.uuid);\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    for (const [t, e] of this.list)\n      e.dispose();\n    this.list.clear(), this.onDisposed.trigger();\n  }\n};\n/**\n * A unique identifier for the component.\n * This UUID is used to register the component within the Components system.\n */\nI(gs, \"uuid\", \"d5d8bdf0-db25-4952-b951-b643af207ace\");\nlet He = gs;\nclass gr extends _i {\n  constructor() {\n    super(...arguments);\n    /**\n     * All the loaded [meshes](https://threejs.org/docs/#api/en/objects/Mesh). These meshes will be taken into account in operations like raycasting.\n     */\n    I(this, \"meshes\", /* @__PURE__ */ new Set());\n    /** {@link Updateable.onAfterUpdate} */\n    I(this, \"onAfterUpdate\", new D());\n    /** {@link Updateable.onBeforeUpdate} */\n    I(this, \"onBeforeUpdate\", new D());\n    /** {@link Disposable.onDisposed} */\n    I(this, \"onDisposed\", new D());\n    /**\n     * Indicates whether the world is currently being disposed. This is useful to prevent trying to access world's elements when it's being disposed, which could cause errors when you dispose a world.\n     */\n    I(this, \"isDisposing\", !1);\n    /**\n     * Indicates whether the world is currently enabled.\n     * When disabled, the world will not be updated.\n     */\n    I(this, \"enabled\", !0);\n    /**\n     * A unique identifier for the world.\n     */\n    I(this, \"uuid\", ze.create());\n    /**\n     * An optional name for the world.\n     */\n    I(this, \"name\");\n    I(this, \"_scene\");\n    I(this, \"_camera\");\n    I(this, \"_renderer\", null);\n  }\n  /**\n   * Getter for the scene. If no scene is initialized, it throws an error.\n   * @returns The current scene.\n   */\n  get scene() {\n    if (!this._scene)\n      throw new Error(\"No scene initialized!\");\n    return this._scene;\n  }\n  /**\n   * Setter for the scene. It sets the current scene, adds the world to the scene's worlds set,\n   * sets the current world in the scene, and triggers the scene's onWorldChanged event with the added action.\n   * @param scene - The new scene to be set.\n   */\n  set scene(t) {\n    this._scene = t, t.worlds.set(this.uuid, this), t.currentWorld = this, t.onWorldChanged.trigger({ world: this, action: \"added\" });\n  }\n  /**\n   * Getter for the camera. If no camera is initialized, it throws an error.\n   * @returns The current camera.\n   */\n  get camera() {\n    if (!this._camera)\n      throw new Error(\"No camera initialized!\");\n    return this._camera;\n  }\n  /**\n   * Setter for the camera. It sets the current camera, adds the world to the camera's worlds set,\n   * sets the current world in the camera, and triggers the camera's onWorldChanged event with the added action.\n   * @param camera - The new camera to be set.\n   */\n  set camera(t) {\n    this._camera = t, t.worlds.set(this.uuid, this), t.currentWorld = this, t.onWorldChanged.trigger({ world: this, action: \"added\" });\n  }\n  /**\n   * Getter for the renderer.\n   * @returns The current renderer or null if no renderer is set. Some worlds don't need a renderer to work (when your mail goal is not to display a 3D viewport to the user).\n   */\n  get renderer() {\n    return this._renderer;\n  }\n  /**\n   * Setter for the renderer. It sets the current renderer, adds the world to the renderer's worlds set,\n   * sets the current world in the renderer, and triggers the renderer's onWorldChanged event with the added action.\n   * If a new renderer is set, it also triggers the onWorldChanged event with the removed action for the old renderer.\n   * @param renderer - The new renderer to be set or null to remove the current renderer.\n   */\n  set renderer(t) {\n    this._renderer = t, t && (t.worlds.set(this.uuid, this), t.currentWorld = this, t.onWorldChanged.trigger({ world: this, action: \"added\" }));\n  }\n  /** {@link Updateable.update} */\n  update(t) {\n    this.enabled && (!this._scene || !this._camera || (this.scene.currentWorld = this, this.camera.currentWorld = this, this.renderer && (this.renderer.currentWorld = this), this.onBeforeUpdate.trigger(), this.scene.isUpdateable() && this.scene.update(t), this.camera.isUpdateable() && this.camera.update(t), this.renderer && this.renderer.update(t), this.onAfterUpdate.trigger()));\n  }\n  /** {@link Disposable.dispose} */\n  dispose(t = !0) {\n    if (this.enabled = !1, this.isDisposing = !0, this.scene.onWorldChanged.trigger({ world: this, action: \"removed\" }), this.camera.onWorldChanged.trigger({ world: this, action: \"removed\" }), this.renderer && this.renderer.onWorldChanged.trigger({ world: this, action: \"removed\" }), t) {\n      const e = this.components.get(zt);\n      this.scene.dispose(), this.camera.isDisposeable() && this.camera.dispose(), this.renderer && this.renderer.dispose();\n      for (const i of this.meshes)\n        e.destroy(i);\n      this.meshes.clear();\n    }\n    this._scene = null, this._camera = null, this._renderer = null, this.onDisposed.trigger();\n  }\n}\nclass ia extends hr {\n  constructor(t) {\n    super(t);\n    /** {@link Configurable.isSetup} */\n    I(this, \"isSetup\", !1);\n    /**\n     * The underlying Three.js scene object.\n     * It is used to define the 3D space containing objects, lights, and cameras.\n     */\n    I(this, \"three\");\n    /** {@link Configurable.onSetup} */\n    I(this, \"onSetup\", new D());\n    /**\n     * Configuration interface for the {@link SimpleScene}.\n     * Defines properties for directional and ambient lights.\n     */\n    I(this, \"config\", {\n      directionalLight: {\n        color: new O.Color(\"white\"),\n        intensity: 1.5,\n        position: new O.Vector3(5, 10, 3)\n      },\n      ambientLight: {\n        color: new O.Color(\"white\"),\n        intensity: 1\n      }\n    });\n    this.three = new O.Scene(), this.three.background = new O.Color(2107698);\n  }\n  /** {@link Configurable.setup} */\n  setup(t) {\n    this.config = { ...this.config, ...t };\n    const e = new O.DirectionalLight(\n      this.config.directionalLight.color,\n      this.config.directionalLight.intensity\n    );\n    e.position.copy(this.config.directionalLight.position);\n    const i = new O.AmbientLight(\n      this.config.ambientLight.color,\n      this.config.ambientLight.intensity\n    );\n    this.three.add(e, i), this.isSetup = !0, this.onSetup.trigger(this);\n  }\n}\nclass na extends lr {\n  /**\n   * Constructor for the SimpleRenderer class.\n   *\n   * @param components - The components instance.\n   * @param container - The HTML container where the THREE.js canvas will be rendered.\n   * @param parameters - Optional parameters for the THREE.js WebGLRenderer.\n   */\n  constructor(t, e, i) {\n    super(t);\n    /**\n     * Indicates whether the renderer is enabled. If it's not, it won't be updated.\n     * Default is `true`.\n     */\n    I(this, \"enabled\", !0);\n    /**\n     * The HTML container of the THREE.js canvas where the scene is rendered.\n     */\n    I(this, \"container\");\n    /**\n     * The THREE.js WebGLRenderer instance.\n     */\n    I(this, \"three\");\n    I(this, \"_canvas\");\n    I(this, \"_parameters\");\n    I(this, \"_resizeObserver\", null);\n    I(this, \"onContainerUpdated\", new D());\n    I(this, \"_resizing\", !1);\n    /** {@link Resizeable.resize} */\n    I(this, \"resize\", (t) => {\n      if (this._resizing)\n        return;\n      this._resizing = !0, this.onContainerUpdated.trigger();\n      const e = t ? t.x : this.container.clientWidth, i = t ? t.y : this.container.clientHeight;\n      this.three.setSize(e, i), this.onResize.trigger(new O.Vector2(e, i)), this._resizing = !1;\n    });\n    I(this, \"resizeEvent\", () => {\n      this.resize();\n    });\n    I(this, \"onContextLost\", (t) => {\n      t.preventDefault(), this.enabled = !1;\n    });\n    I(this, \"onContextBack\", () => {\n      this.three.setRenderTarget(null), this.three.dispose(), this.three = new O.WebGLRenderer({\n        canvas: this._canvas,\n        antialias: !0,\n        alpha: !0,\n        ...this._parameters\n      }), this.enabled = !0;\n    });\n    this.container = e, this._parameters = i, this.three = new O.WebGLRenderer({\n      antialias: !0,\n      alpha: !0,\n      ...i\n    }), this.three.setPixelRatio(Math.min(window.devicePixelRatio, 2)), this.setupRenderer(), this.setupEvents(!0), this.resize(), this._canvas = this.three.domElement;\n    const o = this.three.getContext(), { canvas: n } = o;\n    n.addEventListener(\"webglcontextlost\", this.onContextLost, !1), n.addEventListener(\"webglcontextrestored\", this.onContextBack, !1);\n  }\n  /** {@link Updateable.update} */\n  update() {\n    if (!this.enabled || !this.currentWorld)\n      return;\n    this.onBeforeUpdate.trigger(this);\n    const t = this.currentWorld.scene.three, e = this.currentWorld.camera.three;\n    this.three.render(t, e), this.onAfterUpdate.trigger(this);\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    this.enabled = !1, this.setupEvents(!1), this.three.domElement.remove(), this.three.dispose(), this.onResize.reset(), this.onAfterUpdate.reset(), this.onBeforeUpdate.reset(), this.onDisposed.trigger(), this.onDisposed.reset();\n  }\n  /** {@link Resizeable.getSize}. */\n  getSize() {\n    return new O.Vector2(\n      this.three.domElement.clientWidth,\n      this.three.domElement.clientHeight\n    );\n  }\n  /**\n   * Sets up and manages the event listeners for the renderer.\n   *\n   * @param active - A boolean indicating whether to activate or deactivate the event listeners.\n   *\n   * @throws Will throw an error if the renderer does not have an HTML container.\n   */\n  setupEvents(t) {\n    const e = this.three.domElement.parentElement;\n    if (!e)\n      throw new Error(\"This renderer needs to have an HTML container!\");\n    this._resizeObserver && (this._resizeObserver.disconnect(), this._resizeObserver = null), window.removeEventListener(\"resize\", this.resizeEvent), t && (this._resizeObserver = new ResizeObserver(this.resizeEvent), this._resizeObserver.observe(e), window.addEventListener(\"resize\", this.resizeEvent));\n  }\n  setupRenderer() {\n    this.three.localClippingEnabled = !0, this.container && this.container.appendChild(this.three.domElement), this.onContainerUpdated.trigger();\n  }\n}\n/*!\n * camera-controls\n * https://github.com/yomotsu/camera-controls\n * (c) 2017 @yomotsu\n * Released under the MIT License.\n */\nconst V = {\n  LEFT: 1,\n  RIGHT: 2,\n  MIDDLE: 4\n}, P = Object.freeze({\n  NONE: 0,\n  ROTATE: 1,\n  TRUCK: 2,\n  OFFSET: 4,\n  DOLLY: 8,\n  ZOOM: 16,\n  TOUCH_ROTATE: 32,\n  TOUCH_TRUCK: 64,\n  TOUCH_OFFSET: 128,\n  TOUCH_DOLLY: 256,\n  TOUCH_ZOOM: 512,\n  TOUCH_DOLLY_TRUCK: 1024,\n  TOUCH_DOLLY_OFFSET: 2048,\n  TOUCH_DOLLY_ROTATE: 4096,\n  TOUCH_ZOOM_TRUCK: 8192,\n  TOUCH_ZOOM_OFFSET: 16384,\n  TOUCH_ZOOM_ROTATE: 32768\n}), le = {\n  NONE: 0,\n  IN: 1,\n  OUT: -1\n};\nfunction Zt(l) {\n  return l.isPerspectiveCamera;\n}\nfunction bt(l) {\n  return l.isOrthographicCamera;\n}\nconst he = Math.PI * 2, nn = Math.PI / 2, xn = 1e-5, Ne = Math.PI / 180;\nfunction mt(l, s, t) {\n  return Math.max(s, Math.min(t, l));\n}\nfunction X(l, s = xn) {\n  return Math.abs(l) < s;\n}\nfunction W(l, s, t = xn) {\n  return X(l - s, t);\n}\nfunction on(l, s) {\n  return Math.round(l / s) * s;\n}\nfunction Pe(l) {\n  return isFinite(l) ? l : l < 0 ? -Number.MAX_VALUE : Number.MAX_VALUE;\n}\nfunction ye(l) {\n  return Math.abs(l) < Number.MAX_VALUE ? l : l * (1 / 0);\n}\nfunction hs(l, s, t, e, i = 1 / 0, o) {\n  e = Math.max(1e-4, e);\n  const n = 2 / e, r = n * o, a = 1 / (1 + r + 0.48 * r * r + 0.235 * r * r * r);\n  let c = l - s;\n  const h = s, d = i * e;\n  c = mt(c, -d, d), s = l - c;\n  const E = (t.value + n * c) * o;\n  t.value = (t.value - n * E) * a;\n  let u = s + (c + E) * a;\n  return h - l > 0 == u > h && (u = h, t.value = (u - h) / o), u;\n}\nfunction rn(l, s, t, e, i = 1 / 0, o, n) {\n  e = Math.max(1e-4, e);\n  const r = 2 / e, a = r * o, c = 1 / (1 + a + 0.48 * a * a + 0.235 * a * a * a);\n  let h = s.x, d = s.y, E = s.z, u = l.x - h, f = l.y - d, T = l.z - E;\n  const R = h, C = d, A = E, F = i * e, p = F * F, m = u * u + f * f + T * T;\n  if (m > p) {\n    const B = Math.sqrt(m);\n    u = u / B * F, f = f / B * F, T = T / B * F;\n  }\n  h = l.x - u, d = l.y - f, E = l.z - T;\n  const g = (t.x + r * u) * o, S = (t.y + r * f) * o, _ = (t.z + r * T) * o;\n  t.x = (t.x - r * g) * c, t.y = (t.y - r * S) * c, t.z = (t.z - r * _) * c, n.x = h + (u + g) * c, n.y = d + (f + S) * c, n.z = E + (T + _) * c;\n  const N = R - l.x, y = C - l.y, w = A - l.z, L = n.x - R, U = n.y - C, b = n.z - A;\n  return N * L + y * U + w * b > 0 && (n.x = R, n.y = C, n.z = A, t.x = (n.x - R) / o, t.y = (n.y - C) / o, t.z = (n.z - A) / o), n;\n}\nfunction $s(l, s) {\n  s.set(0, 0), l.forEach((t) => {\n    s.x += t.clientX, s.y += t.clientY;\n  }), s.x /= l.length, s.y /= l.length;\n}\nfunction Js(l, s) {\n  return bt(l) ? (console.warn(`${s} is not supported in OrthographicCamera`), !0) : !1;\n}\nclass Or {\n  constructor() {\n    this._listeners = {};\n  }\n  /**\n   * Adds the specified event listener.\n   * @param type event name\n   * @param listener handler function\n   * @category Methods\n   */\n  addEventListener(s, t) {\n    const e = this._listeners;\n    e[s] === void 0 && (e[s] = []), e[s].indexOf(t) === -1 && e[s].push(t);\n  }\n  /**\n   * Presence of the specified event listener.\n   * @param type event name\n   * @param listener handler function\n   * @category Methods\n   */\n  hasEventListener(s, t) {\n    const e = this._listeners;\n    return e[s] !== void 0 && e[s].indexOf(t) !== -1;\n  }\n  /**\n   * Removes the specified event listener\n   * @param type event name\n   * @param listener handler function\n   * @category Methods\n   */\n  removeEventListener(s, t) {\n    const i = this._listeners[s];\n    if (i !== void 0) {\n      const o = i.indexOf(t);\n      o !== -1 && i.splice(o, 1);\n    }\n  }\n  /**\n   * Removes all event listeners\n   * @param type event name\n   * @category Methods\n   */\n  removeAllEventListeners(s) {\n    if (!s) {\n      this._listeners = {};\n      return;\n    }\n    Array.isArray(this._listeners[s]) && (this._listeners[s].length = 0);\n  }\n  /**\n   * Fire an event type.\n   * @param event DispatcherEvent\n   * @category Methods\n   */\n  dispatchEvent(s) {\n    const e = this._listeners[s.type];\n    if (e !== void 0) {\n      s.target = this;\n      const i = e.slice(0);\n      for (let o = 0, n = i.length; o < n; o++)\n        i[o].call(this, s);\n    }\n  }\n}\nconst Sr = \"2.7.3\", Es = 1 / 8, bn = typeof window < \"u\", _r = bn && /Mac/.test(navigator.platform), Nr = !(bn && \"PointerEvent\" in window);\nlet Y, an, ds, ti, lt, G, z, Ee, Le, Ot, St, Qt, cn, ln, ut, Me, de, hn, ei, En, si, ii, us;\nclass ot extends Or {\n  /**\n       * Injects THREE as the dependency. You can then proceed to use CameraControls.\n       *\n       * e.g\n       * ```javascript\n       * CameraControls.install( { THREE: THREE } );\n       * ```\n       *\n       * Note: If you do not wish to use enter three.js to reduce file size(tree-shaking for example), make a subset to install.\n       *\n       * ```js\n       * import {\n       * \tVector2,\n       * \tVector3,\n       * \tVector4,\n       * \tQuaternion,\n       * \tMatrix4,\n       * \tSpherical,\n       * \tBox3,\n       * \tSphere,\n       * \tRaycaster,\n       * \tMathUtils,\n       * } from 'three';\n       *\n       * const subsetOfTHREE = {\n       * \tVector2   : Vector2,\n       * \tVector3   : Vector3,\n       * \tVector4   : Vector4,\n       * \tQuaternion: Quaternion,\n       * \tMatrix4   : Matrix4,\n       * \tSpherical : Spherical,\n       * \tBox3      : Box3,\n       * \tSphere    : Sphere,\n       * \tRaycaster : Raycaster,\n       * };\n  \n       * CameraControls.install( { THREE: subsetOfTHREE } );\n       * ```\n       * @category Statics\n       */\n  static install(s) {\n    Y = s.THREE, an = Object.freeze(new Y.Vector3(0, 0, 0)), ds = Object.freeze(new Y.Vector3(0, 1, 0)), ti = Object.freeze(new Y.Vector3(0, 0, 1)), lt = new Y.Vector2(), G = new Y.Vector3(), z = new Y.Vector3(), Ee = new Y.Vector3(), Le = new Y.Vector3(), Ot = new Y.Vector3(), St = new Y.Vector3(), Qt = new Y.Vector3(), cn = new Y.Vector3(), ln = new Y.Vector3(), ut = new Y.Spherical(), Me = new Y.Spherical(), de = new Y.Box3(), hn = new Y.Box3(), ei = new Y.Sphere(), En = new Y.Quaternion(), si = new Y.Quaternion(), ii = new Y.Matrix4(), us = new Y.Raycaster();\n  }\n  /**\n   * list all ACTIONs\n   * @category Statics\n   */\n  static get ACTION() {\n    return P;\n  }\n  /**\n   * Creates a `CameraControls` instance.\n   *\n   * Note:\n   * You **must install** three.js before using camera-controls. see [#install](#install)\n   * Not doing so will lead to runtime errors (`undefined` references to THREE).\n   *\n   * e.g.\n   * ```\n   * CameraControls.install( { THREE } );\n   * const cameraControls = new CameraControls( camera, domElement );\n   * ```\n   *\n   * @param camera A `THREE.PerspectiveCamera` or `THREE.OrthographicCamera` to be controlled.\n   * @param domElement A `HTMLElement` for the draggable area, usually `renderer.domElement`.\n   * @category Constructor\n   */\n  constructor(s, t) {\n    super(), this.minPolarAngle = 0, this.maxPolarAngle = Math.PI, this.minAzimuthAngle = -1 / 0, this.maxAzimuthAngle = 1 / 0, this.minDistance = Number.EPSILON, this.maxDistance = 1 / 0, this.infinityDolly = !1, this.minZoom = 0.01, this.maxZoom = 1 / 0, this.smoothTime = 0.25, this.draggingSmoothTime = 0.125, this.maxSpeed = 1 / 0, this.azimuthRotateSpeed = 1, this.polarRotateSpeed = 1, this.dollySpeed = 1, this.dollyDragInverted = !1, this.truckSpeed = 2, this.dollyToCursor = !1, this.dragToOffset = !1, this.verticalDragToForward = !1, this.boundaryFriction = 0, this.restThreshold = 0.01, this.colliderMeshes = [], this.cancel = () => {\n    }, this._enabled = !0, this._state = P.NONE, this._viewport = null, this._changedDolly = 0, this._changedZoom = 0, this._hasRested = !0, this._boundaryEnclosesCamera = !1, this._needsUpdate = !0, this._updatedLastTime = !1, this._elementRect = new DOMRect(), this._isDragging = !1, this._dragNeedsUpdate = !0, this._activePointers = [], this._lockedPointer = null, this._interactiveArea = new DOMRect(0, 0, 1, 1), this._isUserControllingRotate = !1, this._isUserControllingDolly = !1, this._isUserControllingTruck = !1, this._isUserControllingOffset = !1, this._isUserControllingZoom = !1, this._lastDollyDirection = le.NONE, this._thetaVelocity = { value: 0 }, this._phiVelocity = { value: 0 }, this._radiusVelocity = { value: 0 }, this._targetVelocity = new Y.Vector3(), this._focalOffsetVelocity = new Y.Vector3(), this._zoomVelocity = { value: 0 }, this._truckInternal = (p, m, g) => {\n      let S, _;\n      if (Zt(this._camera)) {\n        const N = G.copy(this._camera.position).sub(this._target), y = this._camera.getEffectiveFOV() * Ne, w = N.length() * Math.tan(y * 0.5);\n        S = this.truckSpeed * p * w / this._elementRect.height, _ = this.truckSpeed * m * w / this._elementRect.height;\n      } else if (bt(this._camera)) {\n        const N = this._camera;\n        S = p * (N.right - N.left) / N.zoom / this._elementRect.width, _ = m * (N.top - N.bottom) / N.zoom / this._elementRect.height;\n      } else\n        return;\n      this.verticalDragToForward ? (g ? this.setFocalOffset(this._focalOffsetEnd.x + S, this._focalOffsetEnd.y, this._focalOffsetEnd.z, !0) : this.truck(S, 0, !0), this.forward(-_, !0)) : g ? this.setFocalOffset(this._focalOffsetEnd.x + S, this._focalOffsetEnd.y + _, this._focalOffsetEnd.z, !0) : this.truck(S, _, !0);\n    }, this._rotateInternal = (p, m) => {\n      const g = he * this.azimuthRotateSpeed * p / this._elementRect.height, S = he * this.polarRotateSpeed * m / this._elementRect.height;\n      this.rotate(g, S, !0);\n    }, this._dollyInternal = (p, m, g) => {\n      const S = Math.pow(0.95, -p * this.dollySpeed), _ = this._sphericalEnd.radius, N = this._sphericalEnd.radius * S, y = mt(N, this.minDistance, this.maxDistance), w = y - N;\n      this.infinityDolly && this.dollyToCursor ? this._dollyToNoClamp(N, !0) : this.infinityDolly && !this.dollyToCursor ? (this.dollyInFixed(w, !0), this._dollyToNoClamp(y, !0)) : this._dollyToNoClamp(y, !0), this.dollyToCursor && (this._changedDolly += (this.infinityDolly ? N : y) - _, this._dollyControlCoord.set(m, g)), this._lastDollyDirection = Math.sign(-p);\n    }, this._zoomInternal = (p, m, g) => {\n      const S = Math.pow(0.95, p * this.dollySpeed), _ = this._zoom, N = this._zoom * S;\n      this.zoomTo(N, !0), this.dollyToCursor && (this._changedZoom += N - _, this._dollyControlCoord.set(m, g));\n    }, typeof Y > \"u\" && console.error(\"camera-controls: `THREE` is undefined. You must first run `CameraControls.install( { THREE: THREE } )`. Check the docs for further information.\"), this._camera = s, this._yAxisUpSpace = new Y.Quaternion().setFromUnitVectors(this._camera.up, ds), this._yAxisUpSpaceInverse = this._yAxisUpSpace.clone().invert(), this._state = P.NONE, this._target = new Y.Vector3(), this._targetEnd = this._target.clone(), this._focalOffset = new Y.Vector3(), this._focalOffsetEnd = this._focalOffset.clone(), this._spherical = new Y.Spherical().setFromVector3(G.copy(this._camera.position).applyQuaternion(this._yAxisUpSpace)), this._sphericalEnd = this._spherical.clone(), this._lastDistance = this._spherical.radius, this._zoom = this._camera.zoom, this._zoomEnd = this._zoom, this._lastZoom = this._zoom, this._nearPlaneCorners = [\n      new Y.Vector3(),\n      new Y.Vector3(),\n      new Y.Vector3(),\n      new Y.Vector3()\n    ], this._updateNearPlaneCorners(), this._boundary = new Y.Box3(new Y.Vector3(-1 / 0, -1 / 0, -1 / 0), new Y.Vector3(1 / 0, 1 / 0, 1 / 0)), this._cameraUp0 = this._camera.up.clone(), this._target0 = this._target.clone(), this._position0 = this._camera.position.clone(), this._zoom0 = this._zoom, this._focalOffset0 = this._focalOffset.clone(), this._dollyControlCoord = new Y.Vector2(), this.mouseButtons = {\n      left: P.ROTATE,\n      middle: P.DOLLY,\n      right: P.TRUCK,\n      wheel: Zt(this._camera) ? P.DOLLY : bt(this._camera) ? P.ZOOM : P.NONE\n    }, this.touches = {\n      one: P.TOUCH_ROTATE,\n      two: Zt(this._camera) ? P.TOUCH_DOLLY_TRUCK : bt(this._camera) ? P.TOUCH_ZOOM_TRUCK : P.NONE,\n      three: P.TOUCH_TRUCK\n    };\n    const e = new Y.Vector2(), i = new Y.Vector2(), o = new Y.Vector2(), n = (p) => {\n      if (!this._enabled || !this._domElement)\n        return;\n      if (this._interactiveArea.left !== 0 || this._interactiveArea.top !== 0 || this._interactiveArea.width !== 1 || this._interactiveArea.height !== 1) {\n        const S = this._domElement.getBoundingClientRect(), _ = p.clientX / S.width, N = p.clientY / S.height;\n        if (_ < this._interactiveArea.left || _ > this._interactiveArea.right || N < this._interactiveArea.top || N > this._interactiveArea.bottom)\n          return;\n      }\n      const m = p.pointerType !== \"mouse\" ? null : (p.buttons & V.LEFT) === V.LEFT ? V.LEFT : (p.buttons & V.MIDDLE) === V.MIDDLE ? V.MIDDLE : (p.buttons & V.RIGHT) === V.RIGHT ? V.RIGHT : null;\n      if (m !== null) {\n        const S = this._findPointerByMouseButton(m);\n        S && this._disposePointer(S);\n      }\n      if ((p.buttons & V.LEFT) === V.LEFT && this._lockedPointer)\n        return;\n      const g = {\n        pointerId: p.pointerId,\n        clientX: p.clientX,\n        clientY: p.clientY,\n        deltaX: 0,\n        deltaY: 0,\n        mouseButton: m\n      };\n      this._activePointers.push(g), this._domElement.ownerDocument.removeEventListener(\"pointermove\", a, { passive: !1 }), this._domElement.ownerDocument.removeEventListener(\"pointerup\", h), this._domElement.ownerDocument.addEventListener(\"pointermove\", a, { passive: !1 }), this._domElement.ownerDocument.addEventListener(\"pointerup\", h), this._isDragging = !0, T(p);\n    }, r = (p) => {\n      if (!this._enabled || !this._domElement || this._lockedPointer)\n        return;\n      if (this._interactiveArea.left !== 0 || this._interactiveArea.top !== 0 || this._interactiveArea.width !== 1 || this._interactiveArea.height !== 1) {\n        const S = this._domElement.getBoundingClientRect(), _ = p.clientX / S.width, N = p.clientY / S.height;\n        if (_ < this._interactiveArea.left || _ > this._interactiveArea.right || N < this._interactiveArea.top || N > this._interactiveArea.bottom)\n          return;\n      }\n      const m = (p.buttons & V.LEFT) === V.LEFT ? V.LEFT : (p.buttons & V.MIDDLE) === V.MIDDLE ? V.MIDDLE : (p.buttons & V.RIGHT) === V.RIGHT ? V.RIGHT : null;\n      if (m !== null) {\n        const S = this._findPointerByMouseButton(m);\n        S && this._disposePointer(S);\n      }\n      const g = {\n        pointerId: 1,\n        clientX: p.clientX,\n        clientY: p.clientY,\n        deltaX: 0,\n        deltaY: 0,\n        mouseButton: (p.buttons & V.LEFT) === V.LEFT ? V.LEFT : (p.buttons & V.MIDDLE) === V.LEFT ? V.MIDDLE : (p.buttons & V.RIGHT) === V.LEFT ? V.RIGHT : null\n      };\n      this._activePointers.push(g), this._domElement.ownerDocument.removeEventListener(\"mousemove\", c), this._domElement.ownerDocument.removeEventListener(\"mouseup\", d), this._domElement.ownerDocument.addEventListener(\"mousemove\", c), this._domElement.ownerDocument.addEventListener(\"mouseup\", d), this._isDragging = !0, T(p);\n    }, a = (p) => {\n      p.cancelable && p.preventDefault();\n      const m = p.pointerId, g = this._lockedPointer || this._findPointerById(m);\n      if (g) {\n        if (g.clientX = p.clientX, g.clientY = p.clientY, g.deltaX = p.movementX, g.deltaY = p.movementY, this._state = 0, p.pointerType === \"touch\")\n          switch (this._activePointers.length) {\n            case 1:\n              this._state = this.touches.one;\n              break;\n            case 2:\n              this._state = this.touches.two;\n              break;\n            case 3:\n              this._state = this.touches.three;\n              break;\n          }\n        else\n          (!this._isDragging && this._lockedPointer || this._isDragging && (p.buttons & V.LEFT) === V.LEFT) && (this._state = this._state | this.mouseButtons.left), this._isDragging && (p.buttons & V.MIDDLE) === V.MIDDLE && (this._state = this._state | this.mouseButtons.middle), this._isDragging && (p.buttons & V.RIGHT) === V.RIGHT && (this._state = this._state | this.mouseButtons.right);\n        R();\n      }\n    }, c = (p) => {\n      const m = this._lockedPointer || this._findPointerById(1);\n      m && (m.clientX = p.clientX, m.clientY = p.clientY, m.deltaX = p.movementX, m.deltaY = p.movementY, this._state = 0, (this._lockedPointer || (p.buttons & V.LEFT) === V.LEFT) && (this._state = this._state | this.mouseButtons.left), (p.buttons & V.MIDDLE) === V.MIDDLE && (this._state = this._state | this.mouseButtons.middle), (p.buttons & V.RIGHT) === V.RIGHT && (this._state = this._state | this.mouseButtons.right), R());\n    }, h = (p) => {\n      const m = this._findPointerById(p.pointerId);\n      if (!(m && m === this._lockedPointer)) {\n        if (m && this._disposePointer(m), p.pointerType === \"touch\")\n          switch (this._activePointers.length) {\n            case 0:\n              this._state = P.NONE;\n              break;\n            case 1:\n              this._state = this.touches.one;\n              break;\n            case 2:\n              this._state = this.touches.two;\n              break;\n            case 3:\n              this._state = this.touches.three;\n              break;\n          }\n        else\n          this._state = P.NONE;\n        C();\n      }\n    }, d = () => {\n      const p = this._findPointerById(1);\n      p && p === this._lockedPointer || (p && this._disposePointer(p), this._state = P.NONE, C());\n    };\n    let E = -1;\n    const u = (p) => {\n      if (!this._domElement || !this._enabled || this.mouseButtons.wheel === P.NONE)\n        return;\n      if (this._interactiveArea.left !== 0 || this._interactiveArea.top !== 0 || this._interactiveArea.width !== 1 || this._interactiveArea.height !== 1) {\n        const N = this._domElement.getBoundingClientRect(), y = p.clientX / N.width, w = p.clientY / N.height;\n        if (y < this._interactiveArea.left || y > this._interactiveArea.right || w < this._interactiveArea.top || w > this._interactiveArea.bottom)\n          return;\n      }\n      if (p.preventDefault(), this.dollyToCursor || this.mouseButtons.wheel === P.ROTATE || this.mouseButtons.wheel === P.TRUCK) {\n        const N = performance.now();\n        E - N < 1e3 && this._getClientRect(this._elementRect), E = N;\n      }\n      const m = _r ? -1 : -3, g = p.deltaMode === 1 ? p.deltaY / m : p.deltaY / (m * 10), S = this.dollyToCursor ? (p.clientX - this._elementRect.x) / this._elementRect.width * 2 - 1 : 0, _ = this.dollyToCursor ? (p.clientY - this._elementRect.y) / this._elementRect.height * -2 + 1 : 0;\n      switch (this.mouseButtons.wheel) {\n        case P.ROTATE: {\n          this._rotateInternal(p.deltaX, p.deltaY), this._isUserControllingRotate = !0;\n          break;\n        }\n        case P.TRUCK: {\n          this._truckInternal(p.deltaX, p.deltaY, !1), this._isUserControllingTruck = !0;\n          break;\n        }\n        case P.OFFSET: {\n          this._truckInternal(p.deltaX, p.deltaY, !0), this._isUserControllingOffset = !0;\n          break;\n        }\n        case P.DOLLY: {\n          this._dollyInternal(-g, S, _), this._isUserControllingDolly = !0;\n          break;\n        }\n        case P.ZOOM: {\n          this._zoomInternal(-g, S, _), this._isUserControllingZoom = !0;\n          break;\n        }\n      }\n      this.dispatchEvent({ type: \"control\" });\n    }, f = (p) => {\n      if (!(!this._domElement || !this._enabled)) {\n        if (this.mouseButtons.right === ot.ACTION.NONE) {\n          const m = p instanceof PointerEvent ? p.pointerId : (p instanceof MouseEvent, 0), g = this._findPointerById(m);\n          g && this._disposePointer(g), this._domElement.ownerDocument.removeEventListener(\"pointermove\", a, { passive: !1 }), this._domElement.ownerDocument.removeEventListener(\"pointerup\", h), this._domElement.ownerDocument.removeEventListener(\"mousemove\", c), this._domElement.ownerDocument.removeEventListener(\"mouseup\", d);\n          return;\n        }\n        p.preventDefault();\n      }\n    }, T = (p) => {\n      if (!this._enabled)\n        return;\n      if ($s(this._activePointers, lt), this._getClientRect(this._elementRect), e.copy(lt), i.copy(lt), this._activePointers.length >= 2) {\n        const g = lt.x - this._activePointers[1].clientX, S = lt.y - this._activePointers[1].clientY, _ = Math.sqrt(g * g + S * S);\n        o.set(0, _);\n        const N = (this._activePointers[0].clientX + this._activePointers[1].clientX) * 0.5, y = (this._activePointers[0].clientY + this._activePointers[1].clientY) * 0.5;\n        i.set(N, y);\n      }\n      if (this._state = 0, !p)\n        this._lockedPointer && (this._state = this._state | this.mouseButtons.left);\n      else if (\"pointerType\" in p && p.pointerType === \"touch\")\n        switch (this._activePointers.length) {\n          case 1:\n            this._state = this.touches.one;\n            break;\n          case 2:\n            this._state = this.touches.two;\n            break;\n          case 3:\n            this._state = this.touches.three;\n            break;\n        }\n      else\n        !this._lockedPointer && (p.buttons & V.LEFT) === V.LEFT && (this._state = this._state | this.mouseButtons.left), (p.buttons & V.MIDDLE) === V.MIDDLE && (this._state = this._state | this.mouseButtons.middle), (p.buttons & V.RIGHT) === V.RIGHT && (this._state = this._state | this.mouseButtons.right);\n      ((this._state & P.ROTATE) === P.ROTATE || (this._state & P.TOUCH_ROTATE) === P.TOUCH_ROTATE || (this._state & P.TOUCH_DOLLY_ROTATE) === P.TOUCH_DOLLY_ROTATE || (this._state & P.TOUCH_ZOOM_ROTATE) === P.TOUCH_ZOOM_ROTATE) && (this._sphericalEnd.theta = this._spherical.theta, this._sphericalEnd.phi = this._spherical.phi, this._thetaVelocity.value = 0, this._phiVelocity.value = 0), ((this._state & P.TRUCK) === P.TRUCK || (this._state & P.TOUCH_TRUCK) === P.TOUCH_TRUCK || (this._state & P.TOUCH_DOLLY_TRUCK) === P.TOUCH_DOLLY_TRUCK || (this._state & P.TOUCH_ZOOM_TRUCK) === P.TOUCH_ZOOM_TRUCK) && (this._targetEnd.copy(this._target), this._targetVelocity.set(0, 0, 0)), ((this._state & P.DOLLY) === P.DOLLY || (this._state & P.TOUCH_DOLLY) === P.TOUCH_DOLLY || (this._state & P.TOUCH_DOLLY_TRUCK) === P.TOUCH_DOLLY_TRUCK || (this._state & P.TOUCH_DOLLY_OFFSET) === P.TOUCH_DOLLY_OFFSET || (this._state & P.TOUCH_DOLLY_ROTATE) === P.TOUCH_DOLLY_ROTATE) && (this._sphericalEnd.radius = this._spherical.radius, this._radiusVelocity.value = 0), ((this._state & P.ZOOM) === P.ZOOM || (this._state & P.TOUCH_ZOOM) === P.TOUCH_ZOOM || (this._state & P.TOUCH_ZOOM_TRUCK) === P.TOUCH_ZOOM_TRUCK || (this._state & P.TOUCH_ZOOM_OFFSET) === P.TOUCH_ZOOM_OFFSET || (this._state & P.TOUCH_ZOOM_ROTATE) === P.TOUCH_ZOOM_ROTATE) && (this._zoomEnd = this._zoom, this._zoomVelocity.value = 0), ((this._state & P.OFFSET) === P.OFFSET || (this._state & P.TOUCH_OFFSET) === P.TOUCH_OFFSET || (this._state & P.TOUCH_DOLLY_OFFSET) === P.TOUCH_DOLLY_OFFSET || (this._state & P.TOUCH_ZOOM_OFFSET) === P.TOUCH_ZOOM_OFFSET) && (this._focalOffsetEnd.copy(this._focalOffset), this._focalOffsetVelocity.set(0, 0, 0)), this.dispatchEvent({ type: \"controlstart\" });\n    }, R = () => {\n      if (!this._enabled || !this._dragNeedsUpdate)\n        return;\n      this._dragNeedsUpdate = !1, $s(this._activePointers, lt);\n      const m = this._domElement && document.pointerLockElement === this._domElement ? this._lockedPointer || this._activePointers[0] : null, g = m ? -m.deltaX : i.x - lt.x, S = m ? -m.deltaY : i.y - lt.y;\n      if (i.copy(lt), ((this._state & P.ROTATE) === P.ROTATE || (this._state & P.TOUCH_ROTATE) === P.TOUCH_ROTATE || (this._state & P.TOUCH_DOLLY_ROTATE) === P.TOUCH_DOLLY_ROTATE || (this._state & P.TOUCH_ZOOM_ROTATE) === P.TOUCH_ZOOM_ROTATE) && (this._rotateInternal(g, S), this._isUserControllingRotate = !0), (this._state & P.DOLLY) === P.DOLLY || (this._state & P.ZOOM) === P.ZOOM) {\n        const _ = this.dollyToCursor ? (e.x - this._elementRect.x) / this._elementRect.width * 2 - 1 : 0, N = this.dollyToCursor ? (e.y - this._elementRect.y) / this._elementRect.height * -2 + 1 : 0, y = this.dollyDragInverted ? -1 : 1;\n        (this._state & P.DOLLY) === P.DOLLY ? (this._dollyInternal(y * S * Es, _, N), this._isUserControllingDolly = !0) : (this._zoomInternal(y * S * Es, _, N), this._isUserControllingZoom = !0);\n      }\n      if ((this._state & P.TOUCH_DOLLY) === P.TOUCH_DOLLY || (this._state & P.TOUCH_ZOOM) === P.TOUCH_ZOOM || (this._state & P.TOUCH_DOLLY_TRUCK) === P.TOUCH_DOLLY_TRUCK || (this._state & P.TOUCH_ZOOM_TRUCK) === P.TOUCH_ZOOM_TRUCK || (this._state & P.TOUCH_DOLLY_OFFSET) === P.TOUCH_DOLLY_OFFSET || (this._state & P.TOUCH_ZOOM_OFFSET) === P.TOUCH_ZOOM_OFFSET || (this._state & P.TOUCH_DOLLY_ROTATE) === P.TOUCH_DOLLY_ROTATE || (this._state & P.TOUCH_ZOOM_ROTATE) === P.TOUCH_ZOOM_ROTATE) {\n        const _ = lt.x - this._activePointers[1].clientX, N = lt.y - this._activePointers[1].clientY, y = Math.sqrt(_ * _ + N * N), w = o.y - y;\n        o.set(0, y);\n        const L = this.dollyToCursor ? (i.x - this._elementRect.x) / this._elementRect.width * 2 - 1 : 0, U = this.dollyToCursor ? (i.y - this._elementRect.y) / this._elementRect.height * -2 + 1 : 0;\n        (this._state & P.TOUCH_DOLLY) === P.TOUCH_DOLLY || (this._state & P.TOUCH_DOLLY_ROTATE) === P.TOUCH_DOLLY_ROTATE || (this._state & P.TOUCH_DOLLY_TRUCK) === P.TOUCH_DOLLY_TRUCK || (this._state & P.TOUCH_DOLLY_OFFSET) === P.TOUCH_DOLLY_OFFSET ? (this._dollyInternal(w * Es, L, U), this._isUserControllingDolly = !0) : (this._zoomInternal(w * Es, L, U), this._isUserControllingZoom = !0);\n      }\n      ((this._state & P.TRUCK) === P.TRUCK || (this._state & P.TOUCH_TRUCK) === P.TOUCH_TRUCK || (this._state & P.TOUCH_DOLLY_TRUCK) === P.TOUCH_DOLLY_TRUCK || (this._state & P.TOUCH_ZOOM_TRUCK) === P.TOUCH_ZOOM_TRUCK) && (this._truckInternal(g, S, !1), this._isUserControllingTruck = !0), ((this._state & P.OFFSET) === P.OFFSET || (this._state & P.TOUCH_OFFSET) === P.TOUCH_OFFSET || (this._state & P.TOUCH_DOLLY_OFFSET) === P.TOUCH_DOLLY_OFFSET || (this._state & P.TOUCH_ZOOM_OFFSET) === P.TOUCH_ZOOM_OFFSET) && (this._truckInternal(g, S, !0), this._isUserControllingOffset = !0), this.dispatchEvent({ type: \"control\" });\n    }, C = () => {\n      $s(this._activePointers, lt), i.copy(lt), this._dragNeedsUpdate = !1, (this._activePointers.length === 0 || this._activePointers.length === 1 && this._activePointers[0] === this._lockedPointer) && (this._isDragging = !1), this._activePointers.length === 0 && this._domElement && (this._domElement.ownerDocument.removeEventListener(\"pointermove\", a, { passive: !1 }), this._domElement.ownerDocument.removeEventListener(\"mousemove\", c), this._domElement.ownerDocument.removeEventListener(\"pointerup\", h), this._domElement.ownerDocument.removeEventListener(\"mouseup\", d), this.dispatchEvent({ type: \"controlend\" }));\n    };\n    this.lockPointer = () => {\n      !this._enabled || !this._domElement || (this.cancel(), this._lockedPointer = {\n        pointerId: -1,\n        clientX: 0,\n        clientY: 0,\n        deltaX: 0,\n        deltaY: 0,\n        mouseButton: null\n      }, this._activePointers.push(this._lockedPointer), this._domElement.ownerDocument.removeEventListener(\"pointermove\", a, { passive: !1 }), this._domElement.ownerDocument.removeEventListener(\"pointerup\", h), this._domElement.requestPointerLock(), this._domElement.ownerDocument.addEventListener(\"pointerlockchange\", A), this._domElement.ownerDocument.addEventListener(\"pointerlockerror\", F), this._domElement.ownerDocument.addEventListener(\"pointermove\", a, { passive: !1 }), this._domElement.ownerDocument.addEventListener(\"pointerup\", h), T());\n    }, this.unlockPointer = () => {\n      this._lockedPointer !== null && (this._disposePointer(this._lockedPointer), this._lockedPointer = null), document.exitPointerLock(), this.cancel(), this._domElement && (this._domElement.ownerDocument.removeEventListener(\"pointerlockchange\", A), this._domElement.ownerDocument.removeEventListener(\"pointerlockerror\", F));\n    };\n    const A = () => {\n      this._domElement && this._domElement.ownerDocument.pointerLockElement === this._domElement || this.unlockPointer();\n    }, F = () => {\n      this.unlockPointer();\n    };\n    this._addAllEventListeners = (p) => {\n      this._domElement = p, this._domElement.style.touchAction = \"none\", this._domElement.style.userSelect = \"none\", this._domElement.style.webkitUserSelect = \"none\", this._domElement.addEventListener(\"pointerdown\", n), Nr && this._domElement.addEventListener(\"mousedown\", r), this._domElement.addEventListener(\"pointercancel\", h), this._domElement.addEventListener(\"wheel\", u, { passive: !1 }), this._domElement.addEventListener(\"contextmenu\", f);\n    }, this._removeAllEventListeners = () => {\n      this._domElement && (this._domElement.style.touchAction = \"\", this._domElement.style.userSelect = \"\", this._domElement.style.webkitUserSelect = \"\", this._domElement.removeEventListener(\"pointerdown\", n), this._domElement.removeEventListener(\"mousedown\", r), this._domElement.removeEventListener(\"pointercancel\", h), this._domElement.removeEventListener(\"wheel\", u, { passive: !1 }), this._domElement.removeEventListener(\"contextmenu\", f), this._domElement.ownerDocument.removeEventListener(\"pointermove\", a, { passive: !1 }), this._domElement.ownerDocument.removeEventListener(\"mousemove\", c), this._domElement.ownerDocument.removeEventListener(\"pointerup\", h), this._domElement.ownerDocument.removeEventListener(\"mouseup\", d), this._domElement.ownerDocument.removeEventListener(\"pointerlockchange\", A), this._domElement.ownerDocument.removeEventListener(\"pointerlockerror\", F));\n    }, this.cancel = () => {\n      this._state !== P.NONE && (this._state = P.NONE, this._activePointers.length = 0, C());\n    }, t && this.connect(t), this.update(0);\n  }\n  /**\n   * The camera to be controlled\n   * @category Properties\n   */\n  get camera() {\n    return this._camera;\n  }\n  set camera(s) {\n    this._camera = s, this.updateCameraUp(), this._camera.updateProjectionMatrix(), this._updateNearPlaneCorners(), this._needsUpdate = !0;\n  }\n  /**\n   * Whether or not the controls are enabled.\n   * `false` to disable user dragging/touch-move, but all methods works.\n   * @category Properties\n   */\n  get enabled() {\n    return this._enabled;\n  }\n  set enabled(s) {\n    this._enabled = s, this._domElement && (s ? (this._domElement.style.touchAction = \"none\", this._domElement.style.userSelect = \"none\", this._domElement.style.webkitUserSelect = \"none\") : (this.cancel(), this._domElement.style.touchAction = \"\", this._domElement.style.userSelect = \"\", this._domElement.style.webkitUserSelect = \"\"));\n  }\n  /**\n   * Returns `true` if the controls are active updating.\n   * readonly value.\n   * @category Properties\n   */\n  get active() {\n    return !this._hasRested;\n  }\n  /**\n   * Getter for the current `ACTION`.\n   * readonly value.\n   * @category Properties\n   */\n  get currentAction() {\n    return this._state;\n  }\n  /**\n   * get/set Current distance.\n   * @category Properties\n   */\n  get distance() {\n    return this._spherical.radius;\n  }\n  set distance(s) {\n    this._spherical.radius === s && this._sphericalEnd.radius === s || (this._spherical.radius = s, this._sphericalEnd.radius = s, this._needsUpdate = !0);\n  }\n  // horizontal angle\n  /**\n   * get/set the azimuth angle (horizontal) in radians.\n   * Every 360 degrees turn is added to `.azimuthAngle` value, which is accumulative.\n   * @category Properties\n   */\n  get azimuthAngle() {\n    return this._spherical.theta;\n  }\n  set azimuthAngle(s) {\n    this._spherical.theta === s && this._sphericalEnd.theta === s || (this._spherical.theta = s, this._sphericalEnd.theta = s, this._needsUpdate = !0);\n  }\n  // vertical angle\n  /**\n   * get/set the polar angle (vertical) in radians.\n   * @category Properties\n   */\n  get polarAngle() {\n    return this._spherical.phi;\n  }\n  set polarAngle(s) {\n    this._spherical.phi === s && this._sphericalEnd.phi === s || (this._spherical.phi = s, this._sphericalEnd.phi = s, this._needsUpdate = !0);\n  }\n  /**\n   * Whether camera position should be enclosed in the boundary or not.\n   * @category Properties\n   */\n  get boundaryEnclosesCamera() {\n    return this._boundaryEnclosesCamera;\n  }\n  set boundaryEnclosesCamera(s) {\n    this._boundaryEnclosesCamera = s, this._needsUpdate = !0;\n  }\n  /**\n   * Set drag-start, touches and wheel enable area in the domElement.\n   * each values are between `0` and `1` inclusive, where `0` is left/top and `1` is right/bottom of the screen.\n   * e.g. `{ x: 0, y: 0, width: 1, height: 1 }` for entire area.\n   * @category Properties\n   */\n  set interactiveArea(s) {\n    this._interactiveArea.width = mt(s.width, 0, 1), this._interactiveArea.height = mt(s.height, 0, 1), this._interactiveArea.x = mt(s.x, 0, 1 - this._interactiveArea.width), this._interactiveArea.y = mt(s.y, 0, 1 - this._interactiveArea.height);\n  }\n  /**\n   * Adds the specified event listener.\n   * Applicable event types (which is `K`) are:\n   * | Event name          | Timing |\n   * | ------------------- | ------ |\n   * | `'controlstart'`    | When the user starts to control the camera via mouse / touches. ¹ |\n   * | `'control'`         | When the user controls the camera (dragging). |\n   * | `'controlend'`      | When the user ends to control the camera. ¹ |\n   * | `'transitionstart'` | When any kind of transition starts, either user control or using a method with `enableTransition = true` |\n   * | `'update'`          | When the camera position is updated. |\n   * | `'wake'`            | When the camera starts moving. |\n   * | `'rest'`            | When the camera movement is below `.restThreshold` ². |\n   * | `'sleep'`           | When the camera end moving. |\n   *\n   * 1. `mouseButtons.wheel` (Mouse wheel control) does not emit `'controlstart'` and `'controlend'`. `mouseButtons.wheel` uses scroll-event internally, and scroll-event happens intermittently. That means \"start\" and \"end\" cannot be detected.\n   * 2. Due to damping, `sleep` will usually fire a few seconds after the camera _appears_ to have stopped moving. If you want to do something (e.g. enable UI, perform another transition) at the point when the camera has stopped, you probably want the `rest` event. This can be fine tuned using the `.restThreshold` parameter. See the [Rest and Sleep Example](https://yomotsu.github.io/camera-controls/examples/rest-and-sleep.html).\n   *\n   * e.g.\n   * ```\n   * cameraControl.addEventListener( 'controlstart', myCallbackFunction );\n   * ```\n   * @param type event name\n   * @param listener handler function\n   * @category Methods\n   */\n  addEventListener(s, t) {\n    super.addEventListener(s, t);\n  }\n  /**\n   * Removes the specified event listener\n   * e.g.\n   * ```\n   * cameraControl.addEventListener( 'controlstart', myCallbackFunction );\n   * ```\n   * @param type event name\n   * @param listener handler function\n   * @category Methods\n   */\n  removeEventListener(s, t) {\n    super.removeEventListener(s, t);\n  }\n  /**\n   * Rotate azimuthal angle(horizontal) and polar angle(vertical).\n   * Every value is added to the current value.\n   * @param azimuthAngle Azimuth rotate angle. In radian.\n   * @param polarAngle Polar rotate angle. In radian.\n   * @param enableTransition Whether to move smoothly or immediately\n   * @category Methods\n   */\n  rotate(s, t, e = !1) {\n    return this.rotateTo(this._sphericalEnd.theta + s, this._sphericalEnd.phi + t, e);\n  }\n  /**\n   * Rotate azimuthal angle(horizontal) to the given angle and keep the same polar angle(vertical) target.\n   *\n   * e.g.\n   * ```\n   * cameraControls.rotateAzimuthTo( 30 * THREE.MathUtils.DEG2RAD, true );\n   * ```\n   * @param azimuthAngle Azimuth rotate angle. In radian.\n   * @param enableTransition Whether to move smoothly or immediately\n   * @category Methods\n   */\n  rotateAzimuthTo(s, t = !1) {\n    return this.rotateTo(s, this._sphericalEnd.phi, t);\n  }\n  /**\n   * Rotate polar angle(vertical) to the given angle and keep the same azimuthal angle(horizontal) target.\n   *\n   * e.g.\n   * ```\n   * cameraControls.rotatePolarTo( 30 * THREE.MathUtils.DEG2RAD, true );\n   * ```\n   * @param polarAngle Polar rotate angle. In radian.\n   * @param enableTransition Whether to move smoothly or immediately\n   * @category Methods\n   */\n  rotatePolarTo(s, t = !1) {\n    return this.rotateTo(this._sphericalEnd.theta, s, t);\n  }\n  /**\n   * Rotate azimuthal angle(horizontal) and polar angle(vertical) to the given angle.\n   * Camera view will rotate over the orbit pivot absolutely:\n   *\n   * azimuthAngle\n   * ```\n   *       0º\n   *         \\\n   * 90º -----+----- -90º\n   *           \\\n   *           180º\n   * ```\n   * | direction | angle                  |\n   * | --------- | ---------------------- |\n   * | front     | 0º                     |\n   * | left      | 90º (`Math.PI / 2`)    |\n   * | right     | -90º (`- Math.PI / 2`) |\n   * | back      | 180º (`Math.PI`)       |\n   *\n   * polarAngle\n   * ```\n   *     180º\n   *      |\n   *      90º\n   *      |\n   *      0º\n   * ```\n   * | direction            | angle                  |\n   * | -------------------- | ---------------------- |\n   * | top/sky              | 180º (`Math.PI`)       |\n   * | horizontal from view | 90º (`Math.PI / 2`)    |\n   * | bottom/floor         | 0º                     |\n   *\n   * @param azimuthAngle Azimuth rotate angle to. In radian.\n   * @param polarAngle Polar rotate angle to. In radian.\n   * @param enableTransition  Whether to move smoothly or immediately\n   * @category Methods\n   */\n  rotateTo(s, t, e = !1) {\n    this._isUserControllingRotate = !1;\n    const i = mt(s, this.minAzimuthAngle, this.maxAzimuthAngle), o = mt(t, this.minPolarAngle, this.maxPolarAngle);\n    this._sphericalEnd.theta = i, this._sphericalEnd.phi = o, this._sphericalEnd.makeSafe(), this._needsUpdate = !0, e || (this._spherical.theta = this._sphericalEnd.theta, this._spherical.phi = this._sphericalEnd.phi);\n    const n = !e || W(this._spherical.theta, this._sphericalEnd.theta, this.restThreshold) && W(this._spherical.phi, this._sphericalEnd.phi, this.restThreshold);\n    return this._createOnRestPromise(n);\n  }\n  /**\n   * Dolly in/out camera position.\n   * @param distance Distance of dollyIn. Negative number for dollyOut.\n   * @param enableTransition Whether to move smoothly or immediately.\n   * @category Methods\n   */\n  dolly(s, t = !1) {\n    return this.dollyTo(this._sphericalEnd.radius - s, t);\n  }\n  /**\n   * Dolly in/out camera position to given distance.\n   * @param distance Distance of dolly.\n   * @param enableTransition Whether to move smoothly or immediately.\n   * @category Methods\n   */\n  dollyTo(s, t = !1) {\n    return this._isUserControllingDolly = !1, this._lastDollyDirection = le.NONE, this._changedDolly = 0, this._dollyToNoClamp(mt(s, this.minDistance, this.maxDistance), t);\n  }\n  _dollyToNoClamp(s, t = !1) {\n    const e = this._sphericalEnd.radius;\n    if (this.colliderMeshes.length >= 1) {\n      const n = this._collisionTest(), r = W(n, this._spherical.radius);\n      if (!(e > s) && r)\n        return Promise.resolve();\n      this._sphericalEnd.radius = Math.min(s, n);\n    } else\n      this._sphericalEnd.radius = s;\n    this._needsUpdate = !0, t || (this._spherical.radius = this._sphericalEnd.radius);\n    const o = !t || W(this._spherical.radius, this._sphericalEnd.radius, this.restThreshold);\n    return this._createOnRestPromise(o);\n  }\n  /**\n   * Dolly in, but does not change the distance between the target and the camera, and moves the target position instead.\n   * Specify a negative value for dolly out.\n   * @param distance Distance of dolly.\n   * @param enableTransition Whether to move smoothly or immediately.\n   * @category Methods\n   */\n  dollyInFixed(s, t = !1) {\n    this._targetEnd.add(this._getCameraDirection(Le).multiplyScalar(s)), t || this._target.copy(this._targetEnd);\n    const e = !t || W(this._target.x, this._targetEnd.x, this.restThreshold) && W(this._target.y, this._targetEnd.y, this.restThreshold) && W(this._target.z, this._targetEnd.z, this.restThreshold);\n    return this._createOnRestPromise(e);\n  }\n  /**\n   * Zoom in/out camera. The value is added to camera zoom.\n   * Limits set with `.minZoom` and `.maxZoom`\n   * @param zoomStep zoom scale\n   * @param enableTransition Whether to move smoothly or immediately\n   * @category Methods\n   */\n  zoom(s, t = !1) {\n    return this.zoomTo(this._zoomEnd + s, t);\n  }\n  /**\n   * Zoom in/out camera to given scale. The value overwrites camera zoom.\n   * Limits set with .minZoom and .maxZoom\n   * @param zoom\n   * @param enableTransition\n   * @category Methods\n   */\n  zoomTo(s, t = !1) {\n    this._isUserControllingZoom = !1, this._zoomEnd = mt(s, this.minZoom, this.maxZoom), this._needsUpdate = !0, t || (this._zoom = this._zoomEnd);\n    const e = !t || W(this._zoom, this._zoomEnd, this.restThreshold);\n    return this._changedZoom = 0, this._createOnRestPromise(e);\n  }\n  /**\n   * @deprecated `pan()` has been renamed to `truck()`\n   * @category Methods\n   */\n  pan(s, t, e = !1) {\n    return console.warn(\"`pan` has been renamed to `truck`\"), this.truck(s, t, e);\n  }\n  /**\n   * Truck and pedestal camera using current azimuthal angle\n   * @param x Horizontal translate amount\n   * @param y Vertical translate amount\n   * @param enableTransition Whether to move smoothly or immediately\n   * @category Methods\n   */\n  truck(s, t, e = !1) {\n    this._camera.updateMatrix(), Ot.setFromMatrixColumn(this._camera.matrix, 0), St.setFromMatrixColumn(this._camera.matrix, 1), Ot.multiplyScalar(s), St.multiplyScalar(-t);\n    const i = G.copy(Ot).add(St), o = z.copy(this._targetEnd).add(i);\n    return this.moveTo(o.x, o.y, o.z, e);\n  }\n  /**\n   * Move forward / backward.\n   * @param distance Amount to move forward / backward. Negative value to move backward\n   * @param enableTransition Whether to move smoothly or immediately\n   * @category Methods\n   */\n  forward(s, t = !1) {\n    G.setFromMatrixColumn(this._camera.matrix, 0), G.crossVectors(this._camera.up, G), G.multiplyScalar(s);\n    const e = z.copy(this._targetEnd).add(G);\n    return this.moveTo(e.x, e.y, e.z, t);\n  }\n  /**\n   * Move up / down.\n   * @param height Amount to move up / down. Negative value to move down\n   * @param enableTransition Whether to move smoothly or immediately\n   * @category Methods\n   */\n  elevate(s, t = !1) {\n    return G.copy(this._camera.up).multiplyScalar(s), this.moveTo(this._targetEnd.x + G.x, this._targetEnd.y + G.y, this._targetEnd.z + G.z, t);\n  }\n  /**\n   * Move target position to given point.\n   * @param x x coord to move center position\n   * @param y y coord to move center position\n   * @param z z coord to move center position\n   * @param enableTransition Whether to move smoothly or immediately\n   * @category Methods\n   */\n  moveTo(s, t, e, i = !1) {\n    this._isUserControllingTruck = !1;\n    const o = G.set(s, t, e).sub(this._targetEnd);\n    this._encloseToBoundary(this._targetEnd, o, this.boundaryFriction), this._needsUpdate = !0, i || this._target.copy(this._targetEnd);\n    const n = !i || W(this._target.x, this._targetEnd.x, this.restThreshold) && W(this._target.y, this._targetEnd.y, this.restThreshold) && W(this._target.z, this._targetEnd.z, this.restThreshold);\n    return this._createOnRestPromise(n);\n  }\n  /**\n   * Look in the given point direction.\n   * @param x point x.\n   * @param y point y.\n   * @param z point z.\n   * @param enableTransition Whether to move smoothly or immediately.\n   * @returns Transition end promise\n   * @category Methods\n   */\n  lookInDirectionOf(s, t, e, i = !1) {\n    const r = G.set(s, t, e).sub(this._targetEnd).normalize().multiplyScalar(-this._sphericalEnd.radius);\n    return this.setPosition(r.x, r.y, r.z, i);\n  }\n  /**\n   * Fit the viewport to the box or the bounding box of the object, using the nearest axis. paddings are in unit.\n   * set `cover: true` to fill enter screen.\n   * e.g.\n   * ```\n   * cameraControls.fitToBox( myMesh );\n   * ```\n   * @param box3OrObject Axis aligned bounding box to fit the view.\n   * @param enableTransition Whether to move smoothly or immediately.\n   * @param options | `<object>` { cover: boolean, paddingTop: number, paddingLeft: number, paddingBottom: number, paddingRight: number }\n   * @returns Transition end promise\n   * @category Methods\n   */\n  fitToBox(s, t, { cover: e = !1, paddingLeft: i = 0, paddingRight: o = 0, paddingBottom: n = 0, paddingTop: r = 0 } = {}) {\n    const a = [], c = s.isBox3 ? de.copy(s) : de.setFromObject(s);\n    c.isEmpty() && (console.warn(\"camera-controls: fitTo() cannot be used with an empty box. Aborting\"), Promise.resolve());\n    const h = on(this._sphericalEnd.theta, nn), d = on(this._sphericalEnd.phi, nn);\n    a.push(this.rotateTo(h, d, t));\n    const E = G.setFromSpherical(this._sphericalEnd).normalize(), u = En.setFromUnitVectors(E, ti), f = W(Math.abs(E.y), 1);\n    f && u.multiply(si.setFromAxisAngle(ds, h)), u.multiply(this._yAxisUpSpaceInverse);\n    const T = hn.makeEmpty();\n    z.copy(c.min).applyQuaternion(u), T.expandByPoint(z), z.copy(c.min).setX(c.max.x).applyQuaternion(u), T.expandByPoint(z), z.copy(c.min).setY(c.max.y).applyQuaternion(u), T.expandByPoint(z), z.copy(c.max).setZ(c.min.z).applyQuaternion(u), T.expandByPoint(z), z.copy(c.min).setZ(c.max.z).applyQuaternion(u), T.expandByPoint(z), z.copy(c.max).setY(c.min.y).applyQuaternion(u), T.expandByPoint(z), z.copy(c.max).setX(c.min.x).applyQuaternion(u), T.expandByPoint(z), z.copy(c.max).applyQuaternion(u), T.expandByPoint(z), T.min.x -= i, T.min.y -= n, T.max.x += o, T.max.y += r, u.setFromUnitVectors(ti, E), f && u.premultiply(si.invert()), u.premultiply(this._yAxisUpSpace);\n    const R = T.getSize(G), C = T.getCenter(z).applyQuaternion(u);\n    if (Zt(this._camera)) {\n      const A = this.getDistanceToFitBox(R.x, R.y, R.z, e);\n      a.push(this.moveTo(C.x, C.y, C.z, t)), a.push(this.dollyTo(A, t)), a.push(this.setFocalOffset(0, 0, 0, t));\n    } else if (bt(this._camera)) {\n      const A = this._camera, F = A.right - A.left, p = A.top - A.bottom, m = e ? Math.max(F / R.x, p / R.y) : Math.min(F / R.x, p / R.y);\n      a.push(this.moveTo(C.x, C.y, C.z, t)), a.push(this.zoomTo(m, t)), a.push(this.setFocalOffset(0, 0, 0, t));\n    }\n    return Promise.all(a);\n  }\n  /**\n   * Fit the viewport to the sphere or the bounding sphere of the object.\n   * @param sphereOrMesh\n   * @param enableTransition\n   * @category Methods\n   */\n  fitToSphere(s, t) {\n    const e = [], o = s instanceof Y.Sphere ? ei.copy(s) : ot.createBoundingSphere(s, ei);\n    if (e.push(this.moveTo(o.center.x, o.center.y, o.center.z, t)), Zt(this._camera)) {\n      const n = this.getDistanceToFitSphere(o.radius);\n      e.push(this.dollyTo(n, t));\n    } else if (bt(this._camera)) {\n      const n = this._camera.right - this._camera.left, r = this._camera.top - this._camera.bottom, a = 2 * o.radius, c = Math.min(n / a, r / a);\n      e.push(this.zoomTo(c, t));\n    }\n    return e.push(this.setFocalOffset(0, 0, 0, t)), Promise.all(e);\n  }\n  /**\n   * Look at the `target` from the `position`.\n   * @param positionX\n   * @param positionY\n   * @param positionZ\n   * @param targetX\n   * @param targetY\n   * @param targetZ\n   * @param enableTransition\n   * @category Methods\n   */\n  setLookAt(s, t, e, i, o, n, r = !1) {\n    this._isUserControllingRotate = !1, this._isUserControllingDolly = !1, this._isUserControllingTruck = !1, this._lastDollyDirection = le.NONE, this._changedDolly = 0;\n    const a = z.set(i, o, n), c = G.set(s, t, e);\n    this._targetEnd.copy(a), this._sphericalEnd.setFromVector3(c.sub(a).applyQuaternion(this._yAxisUpSpace)), this.normalizeRotations(), this._needsUpdate = !0, r || (this._target.copy(this._targetEnd), this._spherical.copy(this._sphericalEnd));\n    const h = !r || W(this._target.x, this._targetEnd.x, this.restThreshold) && W(this._target.y, this._targetEnd.y, this.restThreshold) && W(this._target.z, this._targetEnd.z, this.restThreshold) && W(this._spherical.theta, this._sphericalEnd.theta, this.restThreshold) && W(this._spherical.phi, this._sphericalEnd.phi, this.restThreshold) && W(this._spherical.radius, this._sphericalEnd.radius, this.restThreshold);\n    return this._createOnRestPromise(h);\n  }\n  /**\n   * Similar to setLookAt, but it interpolates between two states.\n   * @param positionAX\n   * @param positionAY\n   * @param positionAZ\n   * @param targetAX\n   * @param targetAY\n   * @param targetAZ\n   * @param positionBX\n   * @param positionBY\n   * @param positionBZ\n   * @param targetBX\n   * @param targetBY\n   * @param targetBZ\n   * @param t\n   * @param enableTransition\n   * @category Methods\n   */\n  lerpLookAt(s, t, e, i, o, n, r, a, c, h, d, E, u, f = !1) {\n    this._isUserControllingRotate = !1, this._isUserControllingDolly = !1, this._isUserControllingTruck = !1, this._lastDollyDirection = le.NONE, this._changedDolly = 0;\n    const T = G.set(i, o, n), R = z.set(s, t, e);\n    ut.setFromVector3(R.sub(T).applyQuaternion(this._yAxisUpSpace));\n    const C = Ee.set(h, d, E), A = z.set(r, a, c);\n    Me.setFromVector3(A.sub(C).applyQuaternion(this._yAxisUpSpace)), this._targetEnd.copy(T.lerp(C, u));\n    const F = Me.theta - ut.theta, p = Me.phi - ut.phi, m = Me.radius - ut.radius;\n    this._sphericalEnd.set(ut.radius + m * u, ut.phi + p * u, ut.theta + F * u), this.normalizeRotations(), this._needsUpdate = !0, f || (this._target.copy(this._targetEnd), this._spherical.copy(this._sphericalEnd));\n    const g = !f || W(this._target.x, this._targetEnd.x, this.restThreshold) && W(this._target.y, this._targetEnd.y, this.restThreshold) && W(this._target.z, this._targetEnd.z, this.restThreshold) && W(this._spherical.theta, this._sphericalEnd.theta, this.restThreshold) && W(this._spherical.phi, this._sphericalEnd.phi, this.restThreshold) && W(this._spherical.radius, this._sphericalEnd.radius, this.restThreshold);\n    return this._createOnRestPromise(g);\n  }\n  /**\n   * Set angle and distance by given position.\n   * An alias of `setLookAt()`, without target change. Thus keep gazing at the current target\n   * @param positionX\n   * @param positionY\n   * @param positionZ\n   * @param enableTransition\n   * @category Methods\n   */\n  setPosition(s, t, e, i = !1) {\n    return this.setLookAt(s, t, e, this._targetEnd.x, this._targetEnd.y, this._targetEnd.z, i);\n  }\n  /**\n   * Set the target position where gaze at.\n   * An alias of `setLookAt()`, without position change. Thus keep the same position.\n   * @param targetX\n   * @param targetY\n   * @param targetZ\n   * @param enableTransition\n   * @category Methods\n   */\n  setTarget(s, t, e, i = !1) {\n    const o = this.getPosition(G), n = this.setLookAt(o.x, o.y, o.z, s, t, e, i);\n    return this._sphericalEnd.phi = mt(this._sphericalEnd.phi, this.minPolarAngle, this.maxPolarAngle), n;\n  }\n  /**\n   * Set focal offset using the screen parallel coordinates. z doesn't affect in Orthographic as with Dolly.\n   * @param x\n   * @param y\n   * @param z\n   * @param enableTransition\n   * @category Methods\n   */\n  setFocalOffset(s, t, e, i = !1) {\n    this._isUserControllingOffset = !1, this._focalOffsetEnd.set(s, t, e), this._needsUpdate = !0, i || this._focalOffset.copy(this._focalOffsetEnd);\n    const o = !i || W(this._focalOffset.x, this._focalOffsetEnd.x, this.restThreshold) && W(this._focalOffset.y, this._focalOffsetEnd.y, this.restThreshold) && W(this._focalOffset.z, this._focalOffsetEnd.z, this.restThreshold);\n    return this._createOnRestPromise(o);\n  }\n  /**\n   * Set orbit point without moving the camera.\n   * SHOULD NOT RUN DURING ANIMATIONS. `setOrbitPoint()` will immediately fix the positions.\n   * @param targetX\n   * @param targetY\n   * @param targetZ\n   * @category Methods\n   */\n  setOrbitPoint(s, t, e) {\n    this._camera.updateMatrixWorld(), Ot.setFromMatrixColumn(this._camera.matrixWorldInverse, 0), St.setFromMatrixColumn(this._camera.matrixWorldInverse, 1), Qt.setFromMatrixColumn(this._camera.matrixWorldInverse, 2);\n    const i = G.set(s, t, e), o = i.distanceTo(this._camera.position), n = i.sub(this._camera.position);\n    Ot.multiplyScalar(n.x), St.multiplyScalar(n.y), Qt.multiplyScalar(n.z), G.copy(Ot).add(St).add(Qt), G.z = G.z + o, this.dollyTo(o, !1), this.setFocalOffset(-G.x, G.y, -G.z, !1), this.moveTo(s, t, e, !1);\n  }\n  /**\n   * Set the boundary box that encloses the target of the camera. box3 is in THREE.Box3\n   * @param box3\n   * @category Methods\n   */\n  setBoundary(s) {\n    if (!s) {\n      this._boundary.min.set(-1 / 0, -1 / 0, -1 / 0), this._boundary.max.set(1 / 0, 1 / 0, 1 / 0), this._needsUpdate = !0;\n      return;\n    }\n    this._boundary.copy(s), this._boundary.clampPoint(this._targetEnd, this._targetEnd), this._needsUpdate = !0;\n  }\n  /**\n   * Set (or unset) the current viewport.\n   * Set this when you want to use renderer viewport and .dollyToCursor feature at the same time.\n   * @param viewportOrX\n   * @param y\n   * @param width\n   * @param height\n   * @category Methods\n   */\n  setViewport(s, t, e, i) {\n    if (s === null) {\n      this._viewport = null;\n      return;\n    }\n    this._viewport = this._viewport || new Y.Vector4(), typeof s == \"number\" ? this._viewport.set(s, t, e, i) : this._viewport.copy(s);\n  }\n  /**\n   * Calculate the distance to fit the box.\n   * @param width box width\n   * @param height box height\n   * @param depth box depth\n   * @returns distance\n   * @category Methods\n   */\n  getDistanceToFitBox(s, t, e, i = !1) {\n    if (Js(this._camera, \"getDistanceToFitBox\"))\n      return this._spherical.radius;\n    const o = s / t, n = this._camera.getEffectiveFOV() * Ne, r = this._camera.aspect;\n    return ((i ? o > r : o < r) ? t : s / r) * 0.5 / Math.tan(n * 0.5) + e * 0.5;\n  }\n  /**\n   * Calculate the distance to fit the sphere.\n   * @param radius sphere radius\n   * @returns distance\n   * @category Methods\n   */\n  getDistanceToFitSphere(s) {\n    if (Js(this._camera, \"getDistanceToFitSphere\"))\n      return this._spherical.radius;\n    const t = this._camera.getEffectiveFOV() * Ne, e = Math.atan(Math.tan(t * 0.5) * this._camera.aspect) * 2, i = 1 < this._camera.aspect ? t : e;\n    return s / Math.sin(i * 0.5);\n  }\n  /**\n   * Returns the orbit center position, where the camera looking at.\n   * @param out The receiving Vector3 instance to copy the result\n   * @param receiveEndValue Whether receive the transition end coords or current. default is `true`\n   * @category Methods\n   */\n  getTarget(s, t = !0) {\n    return (s && s.isVector3 ? s : new Y.Vector3()).copy(t ? this._targetEnd : this._target);\n  }\n  /**\n   * Returns the camera position.\n   * @param out The receiving Vector3 instance to copy the result\n   * @param receiveEndValue Whether receive the transition end coords or current. default is `true`\n   * @category Methods\n   */\n  getPosition(s, t = !0) {\n    return (s && s.isVector3 ? s : new Y.Vector3()).setFromSpherical(t ? this._sphericalEnd : this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(t ? this._targetEnd : this._target);\n  }\n  /**\n   * Returns the spherical coordinates of the orbit.\n   * @param out The receiving Spherical instance to copy the result\n   * @param receiveEndValue Whether receive the transition end coords or current. default is `true`\n   * @category Methods\n   */\n  getSpherical(s, t = !0) {\n    return (s && s instanceof Y.Spherical ? s : new Y.Spherical()).copy(t ? this._sphericalEnd : this._spherical);\n  }\n  /**\n   * Returns the focal offset, which is how much the camera appears to be translated in screen parallel coordinates.\n   * @param out The receiving Vector3 instance to copy the result\n   * @param receiveEndValue Whether receive the transition end coords or current. default is `true`\n   * @category Methods\n   */\n  getFocalOffset(s, t = !0) {\n    return (s && s.isVector3 ? s : new Y.Vector3()).copy(t ? this._focalOffsetEnd : this._focalOffset);\n  }\n  /**\n   * Normalize camera azimuth angle rotation between 0 and 360 degrees.\n   * @category Methods\n   */\n  normalizeRotations() {\n    this._sphericalEnd.theta = this._sphericalEnd.theta % he, this._sphericalEnd.theta < 0 && (this._sphericalEnd.theta += he), this._spherical.theta += he * Math.round((this._sphericalEnd.theta - this._spherical.theta) / he);\n  }\n  /**\n   * Reset all rotation and position to defaults.\n   * @param enableTransition\n   * @category Methods\n   */\n  reset(s = !1) {\n    if (!W(this._camera.up.x, this._cameraUp0.x) || !W(this._camera.up.y, this._cameraUp0.y) || !W(this._camera.up.z, this._cameraUp0.z)) {\n      this._camera.up.copy(this._cameraUp0);\n      const e = this.getPosition(G);\n      this.updateCameraUp(), this.setPosition(e.x, e.y, e.z);\n    }\n    const t = [\n      this.setLookAt(this._position0.x, this._position0.y, this._position0.z, this._target0.x, this._target0.y, this._target0.z, s),\n      this.setFocalOffset(this._focalOffset0.x, this._focalOffset0.y, this._focalOffset0.z, s),\n      this.zoomTo(this._zoom0, s)\n    ];\n    return Promise.all(t);\n  }\n  /**\n   * Set current camera position as the default position.\n   * @category Methods\n   */\n  saveState() {\n    this._cameraUp0.copy(this._camera.up), this.getTarget(this._target0), this.getPosition(this._position0), this._zoom0 = this._zoom, this._focalOffset0.copy(this._focalOffset);\n  }\n  /**\n   * Sync camera-up direction.\n   * When camera-up vector is changed, `.updateCameraUp()` must be called.\n   * @category Methods\n   */\n  updateCameraUp() {\n    this._yAxisUpSpace.setFromUnitVectors(this._camera.up, ds), this._yAxisUpSpaceInverse.copy(this._yAxisUpSpace).invert();\n  }\n  /**\n   * Apply current camera-up direction to the camera.\n   * The orbit system will be re-initialized with the current position.\n   * @category Methods\n   */\n  applyCameraUp() {\n    const s = G.subVectors(this._target, this._camera.position).normalize(), t = z.crossVectors(s, this._camera.up);\n    this._camera.up.crossVectors(t, s).normalize(), this._camera.updateMatrixWorld();\n    const e = this.getPosition(G);\n    this.updateCameraUp(), this.setPosition(e.x, e.y, e.z);\n  }\n  /**\n   * Update camera position and directions.\n   * This should be called in your tick loop every time, and returns true if re-rendering is needed.\n   * @param delta\n   * @returns updated\n   * @category Methods\n   */\n  update(s) {\n    const t = this._sphericalEnd.theta - this._spherical.theta, e = this._sphericalEnd.phi - this._spherical.phi, i = this._sphericalEnd.radius - this._spherical.radius, o = cn.subVectors(this._targetEnd, this._target), n = ln.subVectors(this._focalOffsetEnd, this._focalOffset), r = this._zoomEnd - this._zoom;\n    if (X(t))\n      this._thetaVelocity.value = 0, this._spherical.theta = this._sphericalEnd.theta;\n    else {\n      const d = this._isUserControllingRotate ? this.draggingSmoothTime : this.smoothTime;\n      this._spherical.theta = hs(this._spherical.theta, this._sphericalEnd.theta, this._thetaVelocity, d, 1 / 0, s), this._needsUpdate = !0;\n    }\n    if (X(e))\n      this._phiVelocity.value = 0, this._spherical.phi = this._sphericalEnd.phi;\n    else {\n      const d = this._isUserControllingRotate ? this.draggingSmoothTime : this.smoothTime;\n      this._spherical.phi = hs(this._spherical.phi, this._sphericalEnd.phi, this._phiVelocity, d, 1 / 0, s), this._needsUpdate = !0;\n    }\n    if (X(i))\n      this._radiusVelocity.value = 0, this._spherical.radius = this._sphericalEnd.radius;\n    else {\n      const d = this._isUserControllingDolly ? this.draggingSmoothTime : this.smoothTime;\n      this._spherical.radius = hs(this._spherical.radius, this._sphericalEnd.radius, this._radiusVelocity, d, this.maxSpeed, s), this._needsUpdate = !0;\n    }\n    if (X(o.x) && X(o.y) && X(o.z))\n      this._targetVelocity.set(0, 0, 0), this._target.copy(this._targetEnd);\n    else {\n      const d = this._isUserControllingTruck ? this.draggingSmoothTime : this.smoothTime;\n      rn(this._target, this._targetEnd, this._targetVelocity, d, this.maxSpeed, s, this._target), this._needsUpdate = !0;\n    }\n    if (X(n.x) && X(n.y) && X(n.z))\n      this._focalOffsetVelocity.set(0, 0, 0), this._focalOffset.copy(this._focalOffsetEnd);\n    else {\n      const d = this._isUserControllingOffset ? this.draggingSmoothTime : this.smoothTime;\n      rn(this._focalOffset, this._focalOffsetEnd, this._focalOffsetVelocity, d, this.maxSpeed, s, this._focalOffset), this._needsUpdate = !0;\n    }\n    if (X(r))\n      this._zoomVelocity.value = 0, this._zoom = this._zoomEnd;\n    else {\n      const d = this._isUserControllingZoom ? this.draggingSmoothTime : this.smoothTime;\n      this._zoom = hs(this._zoom, this._zoomEnd, this._zoomVelocity, d, 1 / 0, s);\n    }\n    if (this.dollyToCursor) {\n      if (Zt(this._camera) && this._changedDolly !== 0) {\n        const d = this._spherical.radius - this._lastDistance, E = this._camera, u = this._getCameraDirection(Le), f = G.copy(u).cross(E.up).normalize();\n        f.lengthSq() === 0 && (f.x = 1);\n        const T = z.crossVectors(f, u), R = this._sphericalEnd.radius * Math.tan(E.getEffectiveFOV() * Ne * 0.5), A = (this._sphericalEnd.radius - d - this._sphericalEnd.radius) / this._sphericalEnd.radius, F = Ee.copy(this._targetEnd).add(f.multiplyScalar(this._dollyControlCoord.x * R * E.aspect)).add(T.multiplyScalar(this._dollyControlCoord.y * R)), p = G.copy(this._targetEnd).lerp(F, A), m = this._lastDollyDirection === le.IN && this._spherical.radius <= this.minDistance, g = this._lastDollyDirection === le.OUT && this.maxDistance <= this._spherical.radius;\n        if (this.infinityDolly && (m || g)) {\n          this._sphericalEnd.radius -= d, this._spherical.radius -= d;\n          const _ = z.copy(u).multiplyScalar(-d);\n          p.add(_);\n        }\n        this._boundary.clampPoint(p, p);\n        const S = z.subVectors(p, this._targetEnd);\n        this._targetEnd.copy(p), this._target.add(S), this._changedDolly -= d, X(this._changedDolly) && (this._changedDolly = 0);\n      } else if (bt(this._camera) && this._changedZoom !== 0) {\n        const d = this._zoom - this._lastZoom, E = this._camera, u = G.set(this._dollyControlCoord.x, this._dollyControlCoord.y, (E.near + E.far) / (E.near - E.far)).unproject(E), f = z.set(0, 0, -1).applyQuaternion(E.quaternion), T = Ee.copy(u).add(f.multiplyScalar(-u.dot(E.up))), C = -(this._zoom - d - this._zoom) / this._zoom, A = this._getCameraDirection(Le), F = this._targetEnd.dot(A), p = G.copy(this._targetEnd).lerp(T, C), m = p.dot(A), g = A.multiplyScalar(m - F);\n        p.sub(g), this._boundary.clampPoint(p, p);\n        const S = z.subVectors(p, this._targetEnd);\n        this._targetEnd.copy(p), this._target.add(S), this._changedZoom -= d, X(this._changedZoom) && (this._changedZoom = 0);\n      }\n    }\n    this._camera.zoom !== this._zoom && (this._camera.zoom = this._zoom, this._camera.updateProjectionMatrix(), this._updateNearPlaneCorners(), this._needsUpdate = !0), this._dragNeedsUpdate = !0;\n    const a = this._collisionTest();\n    this._spherical.radius = Math.min(this._spherical.radius, a), this._spherical.makeSafe(), this._camera.position.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(this._target), this._camera.lookAt(this._target), (!X(this._focalOffset.x) || !X(this._focalOffset.y) || !X(this._focalOffset.z)) && (this._camera.updateMatrixWorld(), Ot.setFromMatrixColumn(this._camera.matrix, 0), St.setFromMatrixColumn(this._camera.matrix, 1), Qt.setFromMatrixColumn(this._camera.matrix, 2), Ot.multiplyScalar(this._focalOffset.x), St.multiplyScalar(-this._focalOffset.y), Qt.multiplyScalar(this._focalOffset.z), G.copy(Ot).add(St).add(Qt), this._camera.position.add(G)), this._boundaryEnclosesCamera && this._encloseToBoundary(this._camera.position.copy(this._target), G.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse), 1);\n    const h = this._needsUpdate;\n    return h && !this._updatedLastTime ? (this._hasRested = !1, this.dispatchEvent({ type: \"wake\" }), this.dispatchEvent({ type: \"update\" })) : h ? (this.dispatchEvent({ type: \"update\" }), X(t, this.restThreshold) && X(e, this.restThreshold) && X(i, this.restThreshold) && X(o.x, this.restThreshold) && X(o.y, this.restThreshold) && X(o.z, this.restThreshold) && X(n.x, this.restThreshold) && X(n.y, this.restThreshold) && X(n.z, this.restThreshold) && X(r, this.restThreshold) && !this._hasRested && (this._hasRested = !0, this.dispatchEvent({ type: \"rest\" }))) : !h && this._updatedLastTime && this.dispatchEvent({ type: \"sleep\" }), this._lastDistance = this._spherical.radius, this._lastZoom = this._zoom, this._updatedLastTime = h, this._needsUpdate = !1, h;\n  }\n  /**\n   * Get all state in JSON string\n   * @category Methods\n   */\n  toJSON() {\n    return JSON.stringify({\n      enabled: this._enabled,\n      minDistance: this.minDistance,\n      maxDistance: Pe(this.maxDistance),\n      minZoom: this.minZoom,\n      maxZoom: Pe(this.maxZoom),\n      minPolarAngle: this.minPolarAngle,\n      maxPolarAngle: Pe(this.maxPolarAngle),\n      minAzimuthAngle: Pe(this.minAzimuthAngle),\n      maxAzimuthAngle: Pe(this.maxAzimuthAngle),\n      smoothTime: this.smoothTime,\n      draggingSmoothTime: this.draggingSmoothTime,\n      dollySpeed: this.dollySpeed,\n      truckSpeed: this.truckSpeed,\n      dollyToCursor: this.dollyToCursor,\n      verticalDragToForward: this.verticalDragToForward,\n      target: this._targetEnd.toArray(),\n      position: G.setFromSpherical(this._sphericalEnd).add(this._targetEnd).toArray(),\n      zoom: this._zoomEnd,\n      focalOffset: this._focalOffsetEnd.toArray(),\n      target0: this._target0.toArray(),\n      position0: this._position0.toArray(),\n      zoom0: this._zoom0,\n      focalOffset0: this._focalOffset0.toArray()\n    });\n  }\n  /**\n   * Reproduce the control state with JSON. enableTransition is where anim or not in a boolean.\n   * @param json\n   * @param enableTransition\n   * @category Methods\n   */\n  fromJSON(s, t = !1) {\n    const e = JSON.parse(s);\n    this.enabled = e.enabled, this.minDistance = e.minDistance, this.maxDistance = ye(e.maxDistance), this.minZoom = e.minZoom, this.maxZoom = ye(e.maxZoom), this.minPolarAngle = e.minPolarAngle, this.maxPolarAngle = ye(e.maxPolarAngle), this.minAzimuthAngle = ye(e.minAzimuthAngle), this.maxAzimuthAngle = ye(e.maxAzimuthAngle), this.smoothTime = e.smoothTime, this.draggingSmoothTime = e.draggingSmoothTime, this.dollySpeed = e.dollySpeed, this.truckSpeed = e.truckSpeed, this.dollyToCursor = e.dollyToCursor, this.verticalDragToForward = e.verticalDragToForward, this._target0.fromArray(e.target0), this._position0.fromArray(e.position0), this._zoom0 = e.zoom0, this._focalOffset0.fromArray(e.focalOffset0), this.moveTo(e.target[0], e.target[1], e.target[2], t), ut.setFromVector3(G.fromArray(e.position).sub(this._targetEnd).applyQuaternion(this._yAxisUpSpace)), this.rotateTo(ut.theta, ut.phi, t), this.dollyTo(ut.radius, t), this.zoomTo(e.zoom, t), this.setFocalOffset(e.focalOffset[0], e.focalOffset[1], e.focalOffset[2], t), this._needsUpdate = !0;\n  }\n  /**\n   * Attach all internal event handlers to enable drag control.\n   * @category Methods\n   */\n  connect(s) {\n    if (this._domElement) {\n      console.warn(\"camera-controls is already connected.\");\n      return;\n    }\n    s.setAttribute(\"data-camera-controls-version\", Sr), this._addAllEventListeners(s), this._getClientRect(this._elementRect);\n  }\n  /**\n   * Detach all internal event handlers to disable drag control.\n   */\n  disconnect() {\n    this.cancel(), this._removeAllEventListeners(), this._domElement && (this._domElement.removeAttribute(\"data-camera-controls-version\"), this._domElement = void 0);\n  }\n  /**\n   * Dispose the cameraControls instance itself, remove all eventListeners.\n   * @category Methods\n   */\n  dispose() {\n    this.removeAllEventListeners(), this.disconnect();\n  }\n  // it's okay to expose public though\n  _getTargetDirection(s) {\n    return s.setFromSpherical(this._spherical).divideScalar(this._spherical.radius).applyQuaternion(this._yAxisUpSpaceInverse);\n  }\n  // it's okay to expose public though\n  _getCameraDirection(s) {\n    return this._getTargetDirection(s).negate();\n  }\n  _findPointerById(s) {\n    return this._activePointers.find((t) => t.pointerId === s);\n  }\n  _findPointerByMouseButton(s) {\n    return this._activePointers.find((t) => t.mouseButton === s);\n  }\n  _disposePointer(s) {\n    this._activePointers.splice(this._activePointers.indexOf(s), 1);\n  }\n  _encloseToBoundary(s, t, e) {\n    const i = t.lengthSq();\n    if (i === 0)\n      return s;\n    const o = z.copy(t).add(s), r = this._boundary.clampPoint(o, Ee).sub(o), a = r.lengthSq();\n    if (a === 0)\n      return s.add(t);\n    if (a === i)\n      return s;\n    if (e === 0)\n      return s.add(t).add(r);\n    {\n      const c = 1 + e * a / t.dot(r);\n      return s.add(z.copy(t).multiplyScalar(c)).add(r.multiplyScalar(1 - e));\n    }\n  }\n  _updateNearPlaneCorners() {\n    if (Zt(this._camera)) {\n      const s = this._camera, t = s.near, e = s.getEffectiveFOV() * Ne, i = Math.tan(e * 0.5) * t, o = i * s.aspect;\n      this._nearPlaneCorners[0].set(-o, -i, 0), this._nearPlaneCorners[1].set(o, -i, 0), this._nearPlaneCorners[2].set(o, i, 0), this._nearPlaneCorners[3].set(-o, i, 0);\n    } else if (bt(this._camera)) {\n      const s = this._camera, t = 1 / s.zoom, e = s.left * t, i = s.right * t, o = s.top * t, n = s.bottom * t;\n      this._nearPlaneCorners[0].set(e, o, 0), this._nearPlaneCorners[1].set(i, o, 0), this._nearPlaneCorners[2].set(i, n, 0), this._nearPlaneCorners[3].set(e, n, 0);\n    }\n  }\n  // lateUpdate\n  _collisionTest() {\n    let s = 1 / 0;\n    if (!(this.colliderMeshes.length >= 1) || Js(this._camera, \"_collisionTest\"))\n      return s;\n    const e = this._getTargetDirection(Le);\n    ii.lookAt(an, e, this._camera.up);\n    for (let i = 0; i < 4; i++) {\n      const o = z.copy(this._nearPlaneCorners[i]);\n      o.applyMatrix4(ii);\n      const n = Ee.addVectors(this._target, o);\n      us.set(n, e), us.far = this._spherical.radius + 1;\n      const r = us.intersectObjects(this.colliderMeshes);\n      r.length !== 0 && r[0].distance < s && (s = r[0].distance);\n    }\n    return s;\n  }\n  /**\n   * Get its client rect and package into given `DOMRect` .\n   */\n  _getClientRect(s) {\n    if (!this._domElement)\n      return;\n    const t = this._domElement.getBoundingClientRect();\n    return s.x = t.left, s.y = t.top, this._viewport ? (s.x += this._viewport.x, s.y += t.height - this._viewport.w - this._viewport.y, s.width = this._viewport.z, s.height = this._viewport.w) : (s.width = t.width, s.height = t.height), s;\n  }\n  _createOnRestPromise(s) {\n    return s ? Promise.resolve() : (this._hasRested = !1, this.dispatchEvent({ type: \"transitionstart\" }), new Promise((t) => {\n      const e = () => {\n        this.removeEventListener(\"rest\", e), t();\n      };\n      this.addEventListener(\"rest\", e);\n    }));\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  _addAllEventListeners(s) {\n  }\n  _removeAllEventListeners() {\n  }\n  /**\n   * backward compatible\n   * @deprecated use smoothTime (in seconds) instead\n   * @category Properties\n   */\n  get dampingFactor() {\n    return console.warn(\".dampingFactor has been deprecated. use smoothTime (in seconds) instead.\"), 0;\n  }\n  /**\n   * backward compatible\n   * @deprecated use smoothTime (in seconds) instead\n   * @category Properties\n   */\n  set dampingFactor(s) {\n    console.warn(\".dampingFactor has been deprecated. use smoothTime (in seconds) instead.\");\n  }\n  /**\n   * backward compatible\n   * @deprecated use draggingSmoothTime (in seconds) instead\n   * @category Properties\n   */\n  get draggingDampingFactor() {\n    return console.warn(\".draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead.\"), 0;\n  }\n  /**\n   * backward compatible\n   * @deprecated use draggingSmoothTime (in seconds) instead\n   * @category Properties\n   */\n  set draggingDampingFactor(s) {\n    console.warn(\".draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead.\");\n  }\n  static createBoundingSphere(s, t = new Y.Sphere()) {\n    const e = t, i = e.center;\n    de.makeEmpty(), s.traverseVisible((n) => {\n      n.isMesh && de.expandByObject(n);\n    }), de.getCenter(i);\n    let o = 0;\n    return s.traverseVisible((n) => {\n      if (!n.isMesh)\n        return;\n      const r = n, a = r.geometry.clone();\n      a.applyMatrix4(r.matrixWorld);\n      const h = a.attributes.position;\n      for (let d = 0, E = h.count; d < E; d++)\n        G.fromBufferAttribute(h, d), o = Math.max(o, i.distanceToSquared(G));\n    }), e.radius = Math.sqrt(o), e;\n  }\n}\nclass We extends cr {\n  constructor(t) {\n    super(t);\n    /** {@link Updateable.onBeforeUpdate} */\n    I(this, \"onBeforeUpdate\", new D());\n    /** {@link Updateable.onAfterUpdate} */\n    I(this, \"onAfterUpdate\", new D());\n    /**\n     * Event that is triggered when the aspect of the camera has been updated.\n     * This event is useful when you need to perform actions after the aspect of the camera has been changed.\n     */\n    I(this, \"onAspectUpdated\", new D());\n    /** {@link Disposable.onDisposed} */\n    I(this, \"onDisposed\", new D());\n    /**\n     * A three.js PerspectiveCamera or OrthographicCamera instance.\n     * This camera is used for rendering the scene.\n     */\n    I(this, \"three\");\n    I(this, \"_allControls\", /* @__PURE__ */ new Map());\n    /**\n     * Updates the aspect of the camera to match the size of the\n     * {@link Components.renderer}.\n     */\n    I(this, \"updateAspect\", () => {\n      var t;\n      if (!(!this.currentWorld || !this.currentWorld.renderer)) {\n        if (this.three instanceof O.OrthographicCamera) {\n          this.onAspectUpdated.trigger();\n          return;\n        }\n        if ((t = this.currentWorld.renderer) != null && t.isResizeable()) {\n          const e = this.currentWorld.renderer.getSize();\n          this.three.aspect = e.width / e.height, this.three.updateProjectionMatrix(), this.onAspectUpdated.trigger();\n        }\n      }\n    });\n    this.three = this.setupCamera(), this.setupEvents(!0), this.onWorldChanged.add(({ action: e, world: i }) => {\n      if (e === \"added\") {\n        const o = this.newCameraControls();\n        this._allControls.set(i.uuid, o);\n      }\n      if (e === \"removed\") {\n        const o = this._allControls.get(i.uuid);\n        o && (o.dispose(), this._allControls.delete(i.uuid));\n      }\n    });\n  }\n  /**\n   * The object that controls the camera. An instance of\n   * [yomotsu's cameracontrols](https://github.com/yomotsu/camera-controls).\n   * Transforming the camera directly will have no effect: you need to use this\n   * object to move, rotate, look at objects, etc.\n   */\n  get controls() {\n    if (!this.currentWorld)\n      throw new Error(\"This camera needs a world to work!\");\n    const t = this._allControls.get(this.currentWorld.uuid);\n    if (!t)\n      throw new Error(\"Controls not found!\");\n    return t;\n  }\n  /**\n   * Getter for the enabled state of the camera controls.\n   * If the current world is null, it returns false.\n   * Otherwise, it returns the enabled state of the camera controls.\n   *\n   * @returns {boolean} The enabled state of the camera controls.\n   */\n  get enabled() {\n    return this.currentWorld === null ? !1 : this.controls.enabled;\n  }\n  /**\n   * Setter for the enabled state of the camera controls.\n   * If the current world is not null, it sets the enabled state of the camera controls to the provided value.\n   *\n   * @param {boolean} enabled - The new enabled state of the camera controls.\n   */\n  set enabled(t) {\n    this.currentWorld !== null && (this.controls.enabled = t);\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    this.setupEvents(!1), this.onAspectUpdated.reset(), this.onBeforeUpdate.reset(), this.onAfterUpdate.reset(), this.three.removeFromParent(), this.onDisposed.trigger(), this.onDisposed.reset();\n    for (const [t, e] of this._allControls)\n      e.dispose();\n  }\n  /** {@link Updateable.update} */\n  update(t) {\n    this.enabled && (this.onBeforeUpdate.trigger(this), this.controls.update(t), this.onAfterUpdate.trigger(this));\n  }\n  setupCamera() {\n    const t = window.innerWidth / window.innerHeight, e = new O.PerspectiveCamera(60, t, 1, 1e3);\n    return e.position.set(50, 50, 50), e.lookAt(new O.Vector3(0, 0, 0)), e;\n  }\n  newCameraControls() {\n    if (!this.currentWorld)\n      throw new Error(\"This camera needs a world to work!\");\n    if (!this.currentWorld.renderer)\n      throw new Error(\"This camera needs a renderer to work!\");\n    ot.install({ THREE: We.getSubsetOfThree() });\n    const { domElement: t } = this.currentWorld.renderer.three, e = new ot(this.three, t);\n    return e.smoothTime = 0.2, e.dollyToCursor = !0, e.infinityDolly = !0, e.minDistance = 6, e;\n  }\n  setupEvents(t) {\n    t ? window.addEventListener(\"resize\", this.updateAspect) : window.removeEventListener(\"resize\", this.updateAspect);\n  }\n  static getSubsetOfThree() {\n    return {\n      MOUSE: O.MOUSE,\n      Vector2: O.Vector2,\n      Vector3: O.Vector3,\n      Vector4: O.Vector4,\n      Quaternion: O.Quaternion,\n      Matrix4: O.Matrix4,\n      Spherical: O.Spherical,\n      Box3: O.Box3,\n      Sphere: O.Sphere,\n      Raycaster: O.Raycaster,\n      MathUtils: O.MathUtils\n    };\n  }\n}\nconst Os = class Os extends et {\n  constructor(t) {\n    super(t);\n    /** {@link Updateable.onAfterUpdate} */\n    I(this, \"onAfterUpdate\", new D());\n    /** {@link Updateable.onBeforeUpdate} */\n    I(this, \"onBeforeUpdate\", new D());\n    /** {@link Disposable.onDisposed} */\n    I(this, \"onDisposed\", new D());\n    /**\n     * An event that is triggered when a new world is created.\n     * The event passes the newly created world as a parameter.\n     */\n    I(this, \"onWorldCreated\", new D());\n    /**\n     * An event that is triggered when a world is deleted.\n     * The event passes the UUID of the deleted world as a parameter.\n     */\n    I(this, \"onWorldDeleted\", new D());\n    /**\n     * A collection of worlds managed by this component.\n     * The key is the unique identifier (UUID) of the world, and the value is the World instance.\n     */\n    I(this, \"list\", /* @__PURE__ */ new Map());\n    /** {@link Component.enabled} */\n    I(this, \"enabled\", !0);\n    t.add(Os.uuid, this);\n  }\n  /**\n   * Creates a new instance of a SimpleWorld and adds it to the list of worlds.\n   *\n   * @template T - The type of the scene, extending from BaseScene. Defaults to BaseScene.\n   * @template U - The type of the camera, extending from BaseCamera. Defaults to BaseCamera.\n   * @template S - The type of the renderer, extending from BaseRenderer. Defaults to BaseRenderer.\n   *\n   * @throws {Error} - Throws an error if a world with the same UUID already exists in the list.\n   */\n  create() {\n    const t = new gr(this.components), e = t.uuid;\n    if (this.list.has(e))\n      throw new Error(\"There is already a world with this name!\");\n    return this.list.set(e, t), this.onWorldCreated.trigger(t), t;\n  }\n  /**\n   * Deletes a world from the list of worlds.\n   *\n   * @param {World} world - The world to be deleted.\n   *\n   * @throws {Error} - Throws an error if the provided world is not found in the list.\n   *\n   * @returns {void}\n   */\n  delete(t) {\n    if (!this.list.has(t.uuid))\n      throw new Error(\"The provided world is not found in the list!\");\n    const e = t.uuid;\n    this.list.delete(t.uuid), t.dispose(), this.onWorldDeleted.trigger(e);\n  }\n  /**\n   * Disposes of the Worlds component and all its managed worlds.\n   * This method sets the enabled flag to false, disposes of all worlds, clears the list,\n   * and triggers the onDisposed event.\n   *\n   * @returns {void}\n   */\n  dispose() {\n    this.enabled = !1;\n    for (const [t, e] of this.list)\n      e.dispose();\n    this.list.clear(), this.onDisposed.trigger();\n  }\n  /** {@link Updateable.update} */\n  update(t) {\n    if (this.enabled)\n      for (const [e, i] of this.list)\n        i.update(t);\n  }\n};\n/**\n * A unique identifier for the component.\n * This UUID is used to register the component within the Components system.\n */\nI(Os, \"uuid\", \"fdb61dc4-2ec1-4966-b83d-54ea795fad4a\");\nlet Ci = Os;\nclass Pr {\n  constructor(s, t, e) {\n    /** {@link Disposable.onDisposed} */\n    I(this, \"onDisposed\", new D());\n    /** The world instance to which this Raycaster belongs. */\n    I(this, \"world\");\n    /** The components instance to which this grid belongs. */\n    I(this, \"components\");\n    /** The Three.js mesh that contains the infinite grid. */\n    I(this, \"three\");\n    I(this, \"_fade\", 3);\n    I(this, \"updateZoom\", () => {\n      this.world.camera instanceof We && (this.material.uniforms.uZoom.value = this.world.camera.three.zoom);\n    });\n    this.world = t;\n    const { color: i, size1: o, size2: n, distance: r } = e;\n    this.components = s;\n    const a = new O.PlaneGeometry(2, 2, 1, 1), c = new O.ShaderMaterial({\n      side: O.DoubleSide,\n      uniforms: {\n        uSize1: {\n          value: o\n        },\n        uSize2: {\n          value: n\n        },\n        uColor: {\n          value: i\n        },\n        uDistance: {\n          value: r\n        },\n        uFade: {\n          value: this._fade\n        },\n        uZoom: {\n          value: 1\n        }\n      },\n      transparent: !0,\n      vertexShader: `\n            \n            varying vec3 worldPosition;\n            \n            uniform float uDistance;\n            \n            void main() {\n            \n                    vec3 pos = position.xzy * uDistance;\n                    pos.xz += cameraPosition.xz;\n                    \n                    worldPosition = pos;\n                    \n                    gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n            \n            }\n            `,\n      fragmentShader: `\n            \n            varying vec3 worldPosition;\n            \n            uniform float uZoom;\n            uniform float uFade;\n            uniform float uSize1;\n            uniform float uSize2;\n            uniform vec3 uColor;\n            uniform float uDistance;\n                \n                \n                \n                float getGrid(float size) {\n                \n                    vec2 r = worldPosition.xz / size;\n                    \n                    \n                    vec2 grid = abs(fract(r - 0.5) - 0.5) / fwidth(r);\n                    float line = min(grid.x, grid.y);\n                    \n                \n                    return 1.0 - min(line, 1.0);\n                }\n                \n            void main() {\n            \n                    \n                    float d = 1.0 - min(distance(cameraPosition.xz, worldPosition.xz) / uDistance, 1.0);\n                    \n                    float g1 = getGrid(uSize1);\n                    float g2 = getGrid(uSize2);\n                    \n                    // Ortho camera fades the grid away when zooming out\n                    float minZoom = step(0.2, uZoom);\n                    float zoomFactor = pow(min(uZoom, 1.), 2.) * minZoom;\n                    \n                    gl_FragColor = vec4(uColor.rgb, mix(g2, g1, g1) * pow(d, uFade));\n                    gl_FragColor.a = mix(0.5 * gl_FragColor.a, gl_FragColor.a, g2) * zoomFactor;\n                    \n                    if ( gl_FragColor.a <= 0.0 ) discard;\n                    \n            \n            }\n            \n            `,\n      extensions: {\n        derivatives: !0\n      }\n    });\n    this.three = new O.Mesh(a, c), this.three.frustumCulled = !1, t.scene.three.add(this.three), this.setupEvents(!0);\n  }\n  /** {@link Hideable.visible} */\n  get visible() {\n    return this.three.visible;\n  }\n  /** {@link Hideable.visible} */\n  set visible(s) {\n    s ? this.world.scene.three.add(this.three) : this.three.removeFromParent();\n  }\n  /** The material of the grid. */\n  get material() {\n    return this.three.material;\n  }\n  /**\n   * Whether the grid should fade away with distance. Recommended to be true for\n   * perspective cameras and false for orthographic cameras.\n   */\n  get fade() {\n    return this._fade === 3;\n  }\n  /**\n   * Whether the grid should fade away with distance. Recommended to be true for\n   * perspective cameras and false for orthographic cameras.\n   */\n  set fade(s) {\n    this._fade = s ? 3 : 0, this.material.uniforms.uFade.value = this._fade;\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    this.setupEvents(!1), this.components.get(zt).destroy(this.three), this.onDisposed.trigger(), this.onDisposed.reset(), this.world = null, this.components = null;\n  }\n  setupEvents(s) {\n    if (this.world.isDisposing || !(this.world.camera instanceof We))\n      return;\n    const t = this.world.camera.controls;\n    s ? t.addEventListener(\"update\", this.updateZoom) : t.removeEventListener(\"update\", this.updateZoom);\n  }\n}\nconst Ss = class Ss extends et {\n  constructor(t) {\n    super(t);\n    /**\n     * A map of world UUIDs to their corresponding grid instances.\n     */\n    I(this, \"list\", /* @__PURE__ */ new Map());\n    /**\n     * The default configuration for grid creation.\n     */\n    I(this, \"config\", {\n      color: new O.Color(12303291),\n      size1: 1,\n      size2: 10,\n      distance: 500\n    });\n    /** {@link Disposable.onDisposed} */\n    I(this, \"onDisposed\", new D());\n    /** {@link Component.enabled} */\n    I(this, \"enabled\", !0);\n    t.add(Ss.uuid, this);\n  }\n  /**\n   * Creates a new grid for the given world.\n   * Throws an error if a grid already exists for the world.\n   *\n   * @param world - The world to create the grid for.\n   * @returns The newly created grid.\n   *\n   * @throws Will throw an error if a grid already exists for the given world.\n   */\n  create(t) {\n    if (this.list.has(t.uuid))\n      throw new Error(\"This world already has a grid!\");\n    const e = new Pr(this.components, t, this.config);\n    return this.list.set(t.uuid, e), t.onDisposed.add(() => {\n      this.delete(t);\n    }), e;\n  }\n  /**\n   * Deletes the grid associated with the given world.\n   * If a grid does not exist for the given world, this method does nothing.\n   *\n   * @param world - The world for which to delete the grid.\n   *\n   * @remarks\n   * This method will dispose of the grid and remove it from the internal list.\n   * If the world is disposed before calling this method, the grid will be automatically deleted.\n   */\n  delete(t) {\n    const e = this.list.get(t.uuid);\n    e && e.dispose(), this.list.delete(t.uuid);\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    for (const [t, e] of this.list)\n      e.dispose();\n    this.list.clear(), this.onDisposed.trigger(), this.onDisposed.reset();\n  }\n};\n/**\n * A unique identifier for the component.\n * This UUID is used to register the component within the Components system.\n */\nI(Ss, \"uuid\", \"d1e814d5-b81c-4452-87a2-f039375e0489\");\nlet dn = Ss;\nconst jt = new qn(), nt = new M(), xt = new M(), j = new Pt(), un = {\n  X: new M(1, 0, 0),\n  Y: new M(0, 1, 0),\n  Z: new M(0, 0, 1)\n}, ni = { type: \"change\" }, In = { type: \"mouseDown\" }, fn = { type: \"mouseUp\", mode: null }, pn = { type: \"objectChange\" };\nclass yr extends ri {\n  constructor(s, t) {\n    super(), t === void 0 && (console.warn('THREE.TransformControls: The second parameter \"domElement\" is now mandatory.'), t = document), this.isTransformControls = !0, this.visible = !1, this.domElement = t, this.domElement.style.touchAction = \"none\";\n    const e = new xr();\n    this._gizmo = e, this.add(e);\n    const i = new br();\n    this._plane = i, this.add(i);\n    const o = this;\n    function n(A, F) {\n      let p = F;\n      Object.defineProperty(o, A, {\n        get: function() {\n          return p !== void 0 ? p : F;\n        },\n        set: function(m) {\n          p !== m && (p = m, i[A] = m, e[A] = m, o.dispatchEvent({ type: A + \"-changed\", value: m }), o.dispatchEvent(ni));\n        }\n      }), o[A] = F, i[A] = F, e[A] = F;\n    }\n    n(\"camera\", s), n(\"object\", void 0), n(\"enabled\", !0), n(\"axis\", null), n(\"mode\", \"translate\"), n(\"translationSnap\", null), n(\"rotationSnap\", null), n(\"scaleSnap\", null), n(\"space\", \"world\"), n(\"size\", 1), n(\"dragging\", !1), n(\"showX\", !0), n(\"showY\", !0), n(\"showZ\", !0);\n    const r = new M(), a = new M(), c = new Pt(), h = new Pt(), d = new M(), E = new Pt(), u = new M(), f = new M(), T = new M(), R = 0, C = new M();\n    n(\"worldPosition\", r), n(\"worldPositionStart\", a), n(\"worldQuaternion\", c), n(\"worldQuaternionStart\", h), n(\"cameraPosition\", d), n(\"cameraQuaternion\", E), n(\"pointStart\", u), n(\"pointEnd\", f), n(\"rotationAxis\", T), n(\"rotationAngle\", R), n(\"eye\", C), this._offset = new M(), this._startNorm = new M(), this._endNorm = new M(), this._cameraScale = new M(), this._parentPosition = new M(), this._parentQuaternion = new Pt(), this._parentQuaternionInv = new Pt(), this._parentScale = new M(), this._worldScaleStart = new M(), this._worldQuaternionInv = new Pt(), this._worldScale = new M(), this._positionStart = new M(), this._quaternionStart = new Pt(), this._scaleStart = new M(), this._getPointer = Lr.bind(this), this._onPointerDown = wr.bind(this), this._onPointerHover = Mr.bind(this), this._onPointerMove = Dr.bind(this), this._onPointerUp = Ur.bind(this), this.domElement.addEventListener(\"pointerdown\", this._onPointerDown), this.domElement.addEventListener(\"pointermove\", this._onPointerHover), this.domElement.addEventListener(\"pointerup\", this._onPointerUp);\n  }\n  // updateMatrixWorld  updates key transformation variables\n  updateMatrixWorld() {\n    this.object !== void 0 && (this.object.updateMatrixWorld(), this.object.parent === null ? console.error(\"TransformControls: The attached 3D object must be a part of the scene graph.\") : this.object.parent.matrixWorld.decompose(this._parentPosition, this._parentQuaternion, this._parentScale), this.object.matrixWorld.decompose(this.worldPosition, this.worldQuaternion, this._worldScale), this._parentQuaternionInv.copy(this._parentQuaternion).invert(), this._worldQuaternionInv.copy(this.worldQuaternion).invert()), this.camera.updateMatrixWorld(), this.camera.matrixWorld.decompose(this.cameraPosition, this.cameraQuaternion, this._cameraScale), this.camera.isOrthographicCamera ? this.camera.getWorldDirection(this.eye).negate() : this.eye.copy(this.cameraPosition).sub(this.worldPosition).normalize(), super.updateMatrixWorld(this);\n  }\n  pointerHover(s) {\n    if (this.object === void 0 || this.dragging === !0)\n      return;\n    jt.setFromCamera(s, this.camera);\n    const t = oi(this._gizmo.picker[this.mode], jt);\n    t ? this.axis = t.object.name : this.axis = null;\n  }\n  pointerDown(s) {\n    if (!(this.object === void 0 || this.dragging === !0 || s.button !== 0) && this.axis !== null) {\n      jt.setFromCamera(s, this.camera);\n      const t = oi(this._plane, jt, !0);\n      t && (this.object.updateMatrixWorld(), this.object.parent.updateMatrixWorld(), this._positionStart.copy(this.object.position), this._quaternionStart.copy(this.object.quaternion), this._scaleStart.copy(this.object.scale), this.object.matrixWorld.decompose(this.worldPositionStart, this.worldQuaternionStart, this._worldScaleStart), this.pointStart.copy(t.point).sub(this.worldPositionStart)), this.dragging = !0, In.mode = this.mode, this.dispatchEvent(In);\n    }\n  }\n  pointerMove(s) {\n    const t = this.axis, e = this.mode, i = this.object;\n    let o = this.space;\n    if (e === \"scale\" ? o = \"local\" : (t === \"E\" || t === \"XYZE\" || t === \"XYZ\") && (o = \"world\"), i === void 0 || t === null || this.dragging === !1 || s.button !== -1)\n      return;\n    jt.setFromCamera(s, this.camera);\n    const n = oi(this._plane, jt, !0);\n    if (n) {\n      if (this.pointEnd.copy(n.point).sub(this.worldPositionStart), e === \"translate\")\n        this._offset.copy(this.pointEnd).sub(this.pointStart), o === \"local\" && t !== \"XYZ\" && this._offset.applyQuaternion(this._worldQuaternionInv), t.indexOf(\"X\") === -1 && (this._offset.x = 0), t.indexOf(\"Y\") === -1 && (this._offset.y = 0), t.indexOf(\"Z\") === -1 && (this._offset.z = 0), o === \"local\" && t !== \"XYZ\" ? this._offset.applyQuaternion(this._quaternionStart).divide(this._parentScale) : this._offset.applyQuaternion(this._parentQuaternionInv).divide(this._parentScale), i.position.copy(this._offset).add(this._positionStart), this.translationSnap && (o === \"local\" && (i.position.applyQuaternion(j.copy(this._quaternionStart).invert()), t.search(\"X\") !== -1 && (i.position.x = Math.round(i.position.x / this.translationSnap) * this.translationSnap), t.search(\"Y\") !== -1 && (i.position.y = Math.round(i.position.y / this.translationSnap) * this.translationSnap), t.search(\"Z\") !== -1 && (i.position.z = Math.round(i.position.z / this.translationSnap) * this.translationSnap), i.position.applyQuaternion(this._quaternionStart)), o === \"world\" && (i.parent && i.position.add(nt.setFromMatrixPosition(i.parent.matrixWorld)), t.search(\"X\") !== -1 && (i.position.x = Math.round(i.position.x / this.translationSnap) * this.translationSnap), t.search(\"Y\") !== -1 && (i.position.y = Math.round(i.position.y / this.translationSnap) * this.translationSnap), t.search(\"Z\") !== -1 && (i.position.z = Math.round(i.position.z / this.translationSnap) * this.translationSnap), i.parent && i.position.sub(nt.setFromMatrixPosition(i.parent.matrixWorld))));\n      else if (e === \"scale\") {\n        if (t.search(\"XYZ\") !== -1) {\n          let r = this.pointEnd.length() / this.pointStart.length();\n          this.pointEnd.dot(this.pointStart) < 0 && (r *= -1), xt.set(r, r, r);\n        } else\n          nt.copy(this.pointStart), xt.copy(this.pointEnd), nt.applyQuaternion(this._worldQuaternionInv), xt.applyQuaternion(this._worldQuaternionInv), xt.divide(nt), t.search(\"X\") === -1 && (xt.x = 1), t.search(\"Y\") === -1 && (xt.y = 1), t.search(\"Z\") === -1 && (xt.z = 1);\n        i.scale.copy(this._scaleStart).multiply(xt), this.scaleSnap && (t.search(\"X\") !== -1 && (i.scale.x = Math.round(i.scale.x / this.scaleSnap) * this.scaleSnap || this.scaleSnap), t.search(\"Y\") !== -1 && (i.scale.y = Math.round(i.scale.y / this.scaleSnap) * this.scaleSnap || this.scaleSnap), t.search(\"Z\") !== -1 && (i.scale.z = Math.round(i.scale.z / this.scaleSnap) * this.scaleSnap || this.scaleSnap));\n      } else if (e === \"rotate\") {\n        this._offset.copy(this.pointEnd).sub(this.pointStart);\n        const r = 20 / this.worldPosition.distanceTo(nt.setFromMatrixPosition(this.camera.matrixWorld));\n        let a = !1;\n        t === \"XYZE\" ? (this.rotationAxis.copy(this._offset).cross(this.eye).normalize(), this.rotationAngle = this._offset.dot(nt.copy(this.rotationAxis).cross(this.eye)) * r) : (t === \"X\" || t === \"Y\" || t === \"Z\") && (this.rotationAxis.copy(un[t]), nt.copy(un[t]), o === \"local\" && nt.applyQuaternion(this.worldQuaternion), nt.cross(this.eye), nt.length() === 0 ? a = !0 : this.rotationAngle = this._offset.dot(nt.normalize()) * r), (t === \"E\" || a) && (this.rotationAxis.copy(this.eye), this.rotationAngle = this.pointEnd.angleTo(this.pointStart), this._startNorm.copy(this.pointStart).normalize(), this._endNorm.copy(this.pointEnd).normalize(), this.rotationAngle *= this._endNorm.cross(this._startNorm).dot(this.eye) < 0 ? 1 : -1), this.rotationSnap && (this.rotationAngle = Math.round(this.rotationAngle / this.rotationSnap) * this.rotationSnap), o === \"local\" && t !== \"E\" && t !== \"XYZE\" ? (i.quaternion.copy(this._quaternionStart), i.quaternion.multiply(j.setFromAxisAngle(this.rotationAxis, this.rotationAngle)).normalize()) : (this.rotationAxis.applyQuaternion(this._parentQuaternionInv), i.quaternion.copy(j.setFromAxisAngle(this.rotationAxis, this.rotationAngle)), i.quaternion.multiply(this._quaternionStart).normalize());\n      }\n      this.dispatchEvent(ni), this.dispatchEvent(pn);\n    }\n  }\n  pointerUp(s) {\n    s.button === 0 && (this.dragging && this.axis !== null && (fn.mode = this.mode, this.dispatchEvent(fn)), this.dragging = !1, this.axis = null);\n  }\n  dispose() {\n    this.domElement.removeEventListener(\"pointerdown\", this._onPointerDown), this.domElement.removeEventListener(\"pointermove\", this._onPointerHover), this.domElement.removeEventListener(\"pointermove\", this._onPointerMove), this.domElement.removeEventListener(\"pointerup\", this._onPointerUp), this.traverse(function(s) {\n      s.geometry && s.geometry.dispose(), s.material && s.material.dispose();\n    });\n  }\n  // Set current object\n  attach(s) {\n    return this.object = s, this.visible = !0, this;\n  }\n  // Detach from object\n  detach() {\n    return this.object = void 0, this.visible = !1, this.axis = null, this;\n  }\n  reset() {\n    this.enabled && this.dragging && (this.object.position.copy(this._positionStart), this.object.quaternion.copy(this._quaternionStart), this.object.scale.copy(this._scaleStart), this.dispatchEvent(ni), this.dispatchEvent(pn), this.pointStart.copy(this.pointEnd));\n  }\n  getRaycaster() {\n    return jt;\n  }\n  // TODO: deprecate\n  getMode() {\n    return this.mode;\n  }\n  setMode(s) {\n    this.mode = s;\n  }\n  setTranslationSnap(s) {\n    this.translationSnap = s;\n  }\n  setRotationSnap(s) {\n    this.rotationSnap = s;\n  }\n  setScaleSnap(s) {\n    this.scaleSnap = s;\n  }\n  setSize(s) {\n    this.size = s;\n  }\n  setSpace(s) {\n    this.space = s;\n  }\n}\nfunction Lr(l) {\n  if (this.domElement.ownerDocument.pointerLockElement)\n    return {\n      x: 0,\n      y: 0,\n      button: l.button\n    };\n  {\n    const s = this.domElement.getBoundingClientRect();\n    return {\n      x: (l.clientX - s.left) / s.width * 2 - 1,\n      y: -(l.clientY - s.top) / s.height * 2 + 1,\n      button: l.button\n    };\n  }\n}\nfunction Mr(l) {\n  if (this.enabled)\n    switch (l.pointerType) {\n      case \"mouse\":\n      case \"pen\":\n        this.pointerHover(this._getPointer(l));\n        break;\n    }\n}\nfunction wr(l) {\n  this.enabled && (document.pointerLockElement || this.domElement.setPointerCapture(l.pointerId), this.domElement.addEventListener(\"pointermove\", this._onPointerMove), this.pointerHover(this._getPointer(l)), this.pointerDown(this._getPointer(l)));\n}\nfunction Dr(l) {\n  this.enabled && this.pointerMove(this._getPointer(l));\n}\nfunction Ur(l) {\n  this.enabled && (this.domElement.releasePointerCapture(l.pointerId), this.domElement.removeEventListener(\"pointermove\", this._onPointerMove), this.pointerUp(this._getPointer(l)));\n}\nfunction oi(l, s, t) {\n  const e = s.intersectObject(l, !0);\n  for (let i = 0; i < e.length; i++)\n    if (e[i].object.visible || t)\n      return e[i];\n  return !1;\n}\nconst Is = new Kn(), k = new M(0, 1, 0), Cn = new M(0, 0, 0), Tn = new Lt(), fs = new Pt(), Rs = new Pt(), _t = new M(), mn = new Lt(), Ue = new M(1, 0, 0), qt = new M(0, 1, 0), xe = new M(0, 0, 1), ps = new M(), we = new M(), De = new M();\nclass xr extends ri {\n  constructor() {\n    super(), this.isTransformControlsGizmo = !0, this.type = \"TransformControlsGizmo\";\n    const s = new Ln({\n      depthTest: !1,\n      depthWrite: !1,\n      fog: !1,\n      toneMapped: !1,\n      transparent: !0\n    }), t = new $n({\n      depthTest: !1,\n      depthWrite: !1,\n      fog: !1,\n      toneMapped: !1,\n      transparent: !0\n    }), e = s.clone();\n    e.opacity = 0.15;\n    const i = t.clone();\n    i.opacity = 0.5;\n    const o = s.clone();\n    o.color.setHex(16711680);\n    const n = s.clone();\n    n.color.setHex(65280);\n    const r = s.clone();\n    r.color.setHex(255);\n    const a = s.clone();\n    a.color.setHex(16711680), a.opacity = 0.5;\n    const c = s.clone();\n    c.color.setHex(65280), c.opacity = 0.5;\n    const h = s.clone();\n    h.color.setHex(255), h.opacity = 0.5;\n    const d = s.clone();\n    d.opacity = 0.25;\n    const E = s.clone();\n    E.color.setHex(16776960), E.opacity = 0.25, s.clone().color.setHex(16776960);\n    const f = s.clone();\n    f.color.setHex(7895160);\n    const T = new ct(0, 0.04, 0.1, 12);\n    T.translate(0, 0.05, 0);\n    const R = new rt(0.08, 0.08, 0.08);\n    R.translate(0, 0.04, 0);\n    const C = new Di();\n    C.setAttribute(\"position\", new Ui([0, 0, 0, 1, 0, 0], 3));\n    const A = new ct(75e-4, 75e-4, 0.5, 3);\n    A.translate(0, 0.25, 0);\n    function F(B, H) {\n      const q = new Re(B, 75e-4, 3, 64, H * Math.PI * 2);\n      return q.rotateY(Math.PI / 2), q.rotateX(Math.PI / 2), q;\n    }\n    function p() {\n      const B = new Di();\n      return B.setAttribute(\"position\", new Ui([0, 0, 0, 1, 1, 1], 3)), B;\n    }\n    const m = {\n      X: [\n        [new v(T, o), [0.5, 0, 0], [0, 0, -Math.PI / 2]],\n        [new v(T, o), [-0.5, 0, 0], [0, 0, Math.PI / 2]],\n        [new v(A, o), [0, 0, 0], [0, 0, -Math.PI / 2]]\n      ],\n      Y: [\n        [new v(T, n), [0, 0.5, 0]],\n        [new v(T, n), [0, -0.5, 0], [Math.PI, 0, 0]],\n        [new v(A, n)]\n      ],\n      Z: [\n        [new v(T, r), [0, 0, 0.5], [Math.PI / 2, 0, 0]],\n        [new v(T, r), [0, 0, -0.5], [-Math.PI / 2, 0, 0]],\n        [new v(A, r), null, [Math.PI / 2, 0, 0]]\n      ],\n      XYZ: [\n        [new v(new Ze(0.1, 0), d.clone()), [0, 0, 0]]\n      ],\n      XY: [\n        [new v(new rt(0.15, 0.15, 0.01), h.clone()), [0.15, 0.15, 0]]\n      ],\n      YZ: [\n        [new v(new rt(0.15, 0.15, 0.01), a.clone()), [0, 0.15, 0.15], [0, Math.PI / 2, 0]]\n      ],\n      XZ: [\n        [new v(new rt(0.15, 0.15, 0.01), c.clone()), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]]\n      ]\n    }, g = {\n      X: [\n        [new v(new ct(0.2, 0, 0.6, 4), e), [0.3, 0, 0], [0, 0, -Math.PI / 2]],\n        [new v(new ct(0.2, 0, 0.6, 4), e), [-0.3, 0, 0], [0, 0, Math.PI / 2]]\n      ],\n      Y: [\n        [new v(new ct(0.2, 0, 0.6, 4), e), [0, 0.3, 0]],\n        [new v(new ct(0.2, 0, 0.6, 4), e), [0, -0.3, 0], [0, 0, Math.PI]]\n      ],\n      Z: [\n        [new v(new ct(0.2, 0, 0.6, 4), e), [0, 0, 0.3], [Math.PI / 2, 0, 0]],\n        [new v(new ct(0.2, 0, 0.6, 4), e), [0, 0, -0.3], [-Math.PI / 2, 0, 0]]\n      ],\n      XYZ: [\n        [new v(new Ze(0.2, 0), e)]\n      ],\n      XY: [\n        [new v(new rt(0.2, 0.2, 0.01), e), [0.15, 0.15, 0]]\n      ],\n      YZ: [\n        [new v(new rt(0.2, 0.2, 0.01), e), [0, 0.15, 0.15], [0, Math.PI / 2, 0]]\n      ],\n      XZ: [\n        [new v(new rt(0.2, 0.2, 0.01), e), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]]\n      ]\n    }, S = {\n      START: [\n        [new v(new Ze(0.01, 2), i), null, null, null, \"helper\"]\n      ],\n      END: [\n        [new v(new Ze(0.01, 2), i), null, null, null, \"helper\"]\n      ],\n      DELTA: [\n        [new Dt(p(), i), null, null, null, \"helper\"]\n      ],\n      X: [\n        [new Dt(C, i.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], \"helper\"]\n      ],\n      Y: [\n        [new Dt(C, i.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], \"helper\"]\n      ],\n      Z: [\n        [new Dt(C, i.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], \"helper\"]\n      ]\n    }, _ = {\n      XYZE: [\n        [new v(F(0.5, 1), f), null, [0, Math.PI / 2, 0]]\n      ],\n      X: [\n        [new v(F(0.5, 0.5), o)]\n      ],\n      Y: [\n        [new v(F(0.5, 0.5), n), null, [0, 0, -Math.PI / 2]]\n      ],\n      Z: [\n        [new v(F(0.5, 0.5), r), null, [0, Math.PI / 2, 0]]\n      ],\n      E: [\n        [new v(F(0.75, 1), E), null, [0, Math.PI / 2, 0]]\n      ]\n    }, N = {\n      AXIS: [\n        [new Dt(C, i.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], \"helper\"]\n      ]\n    }, y = {\n      XYZE: [\n        [new v(new Jn(0.25, 10, 8), e)]\n      ],\n      X: [\n        [new v(new Re(0.5, 0.1, 4, 24), e), [0, 0, 0], [0, -Math.PI / 2, -Math.PI / 2]]\n      ],\n      Y: [\n        [new v(new Re(0.5, 0.1, 4, 24), e), [0, 0, 0], [Math.PI / 2, 0, 0]]\n      ],\n      Z: [\n        [new v(new Re(0.5, 0.1, 4, 24), e), [0, 0, 0], [0, 0, -Math.PI / 2]]\n      ],\n      E: [\n        [new v(new Re(0.75, 0.1, 2, 24), e)]\n      ]\n    }, w = {\n      X: [\n        [new v(R, o), [0.5, 0, 0], [0, 0, -Math.PI / 2]],\n        [new v(A, o), [0, 0, 0], [0, 0, -Math.PI / 2]],\n        [new v(R, o), [-0.5, 0, 0], [0, 0, Math.PI / 2]]\n      ],\n      Y: [\n        [new v(R, n), [0, 0.5, 0]],\n        [new v(A, n)],\n        [new v(R, n), [0, -0.5, 0], [0, 0, Math.PI]]\n      ],\n      Z: [\n        [new v(R, r), [0, 0, 0.5], [Math.PI / 2, 0, 0]],\n        [new v(A, r), [0, 0, 0], [Math.PI / 2, 0, 0]],\n        [new v(R, r), [0, 0, -0.5], [-Math.PI / 2, 0, 0]]\n      ],\n      XY: [\n        [new v(new rt(0.15, 0.15, 0.01), h), [0.15, 0.15, 0]]\n      ],\n      YZ: [\n        [new v(new rt(0.15, 0.15, 0.01), a), [0, 0.15, 0.15], [0, Math.PI / 2, 0]]\n      ],\n      XZ: [\n        [new v(new rt(0.15, 0.15, 0.01), c), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]]\n      ],\n      XYZ: [\n        [new v(new rt(0.1, 0.1, 0.1), d.clone())]\n      ]\n    }, L = {\n      X: [\n        [new v(new ct(0.2, 0, 0.6, 4), e), [0.3, 0, 0], [0, 0, -Math.PI / 2]],\n        [new v(new ct(0.2, 0, 0.6, 4), e), [-0.3, 0, 0], [0, 0, Math.PI / 2]]\n      ],\n      Y: [\n        [new v(new ct(0.2, 0, 0.6, 4), e), [0, 0.3, 0]],\n        [new v(new ct(0.2, 0, 0.6, 4), e), [0, -0.3, 0], [0, 0, Math.PI]]\n      ],\n      Z: [\n        [new v(new ct(0.2, 0, 0.6, 4), e), [0, 0, 0.3], [Math.PI / 2, 0, 0]],\n        [new v(new ct(0.2, 0, 0.6, 4), e), [0, 0, -0.3], [-Math.PI / 2, 0, 0]]\n      ],\n      XY: [\n        [new v(new rt(0.2, 0.2, 0.01), e), [0.15, 0.15, 0]]\n      ],\n      YZ: [\n        [new v(new rt(0.2, 0.2, 0.01), e), [0, 0.15, 0.15], [0, Math.PI / 2, 0]]\n      ],\n      XZ: [\n        [new v(new rt(0.2, 0.2, 0.01), e), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]]\n      ],\n      XYZ: [\n        [new v(new rt(0.2, 0.2, 0.2), e), [0, 0, 0]]\n      ]\n    }, U = {\n      X: [\n        [new Dt(C, i.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], \"helper\"]\n      ],\n      Y: [\n        [new Dt(C, i.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], \"helper\"]\n      ],\n      Z: [\n        [new Dt(C, i.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], \"helper\"]\n      ]\n    };\n    function b(B) {\n      const H = new ri();\n      for (const q in B)\n        for (let st = B[q].length; st--; ) {\n          const Q = B[q][st][0].clone(), Ht = B[q][st][1], Wt = B[q][st][2], kt = B[q][st][3], ke = B[q][st][4];\n          Q.name = q, Q.tag = ke, Ht && Q.position.set(Ht[0], Ht[1], Ht[2]), Wt && Q.rotation.set(Wt[0], Wt[1], Wt[2]), kt && Q.scale.set(kt[0], kt[1], kt[2]), Q.updateMatrix();\n          const Te = Q.geometry.clone();\n          Te.applyMatrix4(Q.matrix), Q.geometry = Te, Q.renderOrder = 1 / 0, Q.position.set(0, 0, 0), Q.rotation.set(0, 0, 0), Q.scale.set(1, 1, 1), H.add(Q);\n        }\n      return H;\n    }\n    this.gizmo = {}, this.picker = {}, this.helper = {}, this.add(this.gizmo.translate = b(m)), this.add(this.gizmo.rotate = b(_)), this.add(this.gizmo.scale = b(w)), this.add(this.picker.translate = b(g)), this.add(this.picker.rotate = b(y)), this.add(this.picker.scale = b(L)), this.add(this.helper.translate = b(S)), this.add(this.helper.rotate = b(N)), this.add(this.helper.scale = b(U)), this.picker.translate.visible = !1, this.picker.rotate.visible = !1, this.picker.scale.visible = !1;\n  }\n  // updateMatrixWorld will update transformations and appearance of individual handles\n  updateMatrixWorld(s) {\n    const e = (this.mode === \"scale\" ? \"local\" : this.space) === \"local\" ? this.worldQuaternion : Rs;\n    this.gizmo.translate.visible = this.mode === \"translate\", this.gizmo.rotate.visible = this.mode === \"rotate\", this.gizmo.scale.visible = this.mode === \"scale\", this.helper.translate.visible = this.mode === \"translate\", this.helper.rotate.visible = this.mode === \"rotate\", this.helper.scale.visible = this.mode === \"scale\";\n    let i = [];\n    i = i.concat(this.picker[this.mode].children), i = i.concat(this.gizmo[this.mode].children), i = i.concat(this.helper[this.mode].children);\n    for (let o = 0; o < i.length; o++) {\n      const n = i[o];\n      n.visible = !0, n.rotation.set(0, 0, 0), n.position.copy(this.worldPosition);\n      let r;\n      if (this.camera.isOrthographicCamera ? r = (this.camera.top - this.camera.bottom) / this.camera.zoom : r = this.worldPosition.distanceTo(this.cameraPosition) * Math.min(1.9 * Math.tan(Math.PI * this.camera.fov / 360) / this.camera.zoom, 7), n.scale.set(1, 1, 1).multiplyScalar(r * this.size / 4), n.tag === \"helper\") {\n        n.visible = !1, n.name === \"AXIS\" ? (n.visible = !!this.axis, this.axis === \"X\" && (j.setFromEuler(Is.set(0, 0, 0)), n.quaternion.copy(e).multiply(j), Math.abs(k.copy(Ue).applyQuaternion(e).dot(this.eye)) > 0.9 && (n.visible = !1)), this.axis === \"Y\" && (j.setFromEuler(Is.set(0, 0, Math.PI / 2)), n.quaternion.copy(e).multiply(j), Math.abs(k.copy(qt).applyQuaternion(e).dot(this.eye)) > 0.9 && (n.visible = !1)), this.axis === \"Z\" && (j.setFromEuler(Is.set(0, Math.PI / 2, 0)), n.quaternion.copy(e).multiply(j), Math.abs(k.copy(xe).applyQuaternion(e).dot(this.eye)) > 0.9 && (n.visible = !1)), this.axis === \"XYZE\" && (j.setFromEuler(Is.set(0, Math.PI / 2, 0)), k.copy(this.rotationAxis), n.quaternion.setFromRotationMatrix(Tn.lookAt(Cn, k, qt)), n.quaternion.multiply(j), n.visible = this.dragging), this.axis === \"E\" && (n.visible = !1)) : n.name === \"START\" ? (n.position.copy(this.worldPositionStart), n.visible = this.dragging) : n.name === \"END\" ? (n.position.copy(this.worldPosition), n.visible = this.dragging) : n.name === \"DELTA\" ? (n.position.copy(this.worldPositionStart), n.quaternion.copy(this.worldQuaternionStart), nt.set(1e-10, 1e-10, 1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1), nt.applyQuaternion(this.worldQuaternionStart.clone().invert()), n.scale.copy(nt), n.visible = this.dragging) : (n.quaternion.copy(e), this.dragging ? n.position.copy(this.worldPositionStart) : n.position.copy(this.worldPosition), this.axis && (n.visible = this.axis.search(n.name) !== -1));\n        continue;\n      }\n      n.quaternion.copy(e), this.mode === \"translate\" || this.mode === \"scale\" ? (n.name === \"X\" && Math.abs(k.copy(Ue).applyQuaternion(e).dot(this.eye)) > 0.99 && (n.scale.set(1e-10, 1e-10, 1e-10), n.visible = !1), n.name === \"Y\" && Math.abs(k.copy(qt).applyQuaternion(e).dot(this.eye)) > 0.99 && (n.scale.set(1e-10, 1e-10, 1e-10), n.visible = !1), n.name === \"Z\" && Math.abs(k.copy(xe).applyQuaternion(e).dot(this.eye)) > 0.99 && (n.scale.set(1e-10, 1e-10, 1e-10), n.visible = !1), n.name === \"XY\" && Math.abs(k.copy(xe).applyQuaternion(e).dot(this.eye)) < 0.2 && (n.scale.set(1e-10, 1e-10, 1e-10), n.visible = !1), n.name === \"YZ\" && Math.abs(k.copy(Ue).applyQuaternion(e).dot(this.eye)) < 0.2 && (n.scale.set(1e-10, 1e-10, 1e-10), n.visible = !1), n.name === \"XZ\" && Math.abs(k.copy(qt).applyQuaternion(e).dot(this.eye)) < 0.2 && (n.scale.set(1e-10, 1e-10, 1e-10), n.visible = !1)) : this.mode === \"rotate\" && (fs.copy(e), k.copy(this.eye).applyQuaternion(j.copy(e).invert()), n.name.search(\"E\") !== -1 && n.quaternion.setFromRotationMatrix(Tn.lookAt(this.eye, Cn, qt)), n.name === \"X\" && (j.setFromAxisAngle(Ue, Math.atan2(-k.y, k.z)), j.multiplyQuaternions(fs, j), n.quaternion.copy(j)), n.name === \"Y\" && (j.setFromAxisAngle(qt, Math.atan2(k.x, k.z)), j.multiplyQuaternions(fs, j), n.quaternion.copy(j)), n.name === \"Z\" && (j.setFromAxisAngle(xe, Math.atan2(k.y, k.x)), j.multiplyQuaternions(fs, j), n.quaternion.copy(j))), n.visible = n.visible && (n.name.indexOf(\"X\") === -1 || this.showX), n.visible = n.visible && (n.name.indexOf(\"Y\") === -1 || this.showY), n.visible = n.visible && (n.name.indexOf(\"Z\") === -1 || this.showZ), n.visible = n.visible && (n.name.indexOf(\"E\") === -1 || this.showX && this.showY && this.showZ), n.material._color = n.material._color || n.material.color.clone(), n.material._opacity = n.material._opacity || n.material.opacity, n.material.color.copy(n.material._color), n.material.opacity = n.material._opacity, this.enabled && this.axis && (n.name === this.axis || this.axis.split(\"\").some(function(a) {\n        return n.name === a;\n      })) && (n.material.color.setHex(16776960), n.material.opacity = 1);\n    }\n    super.updateMatrixWorld(s);\n  }\n}\nclass br extends v {\n  constructor() {\n    super(\n      new to(1e5, 1e5, 2, 2),\n      new Ln({ visible: !1, wireframe: !0, side: yn, transparent: !0, opacity: 0.1, toneMapped: !1 })\n    ), this.isTransformControlsPlane = !0, this.type = \"TransformControlsPlane\";\n  }\n  updateMatrixWorld(s) {\n    let t = this.space;\n    switch (this.position.copy(this.worldPosition), this.mode === \"scale\" && (t = \"local\"), ps.copy(Ue).applyQuaternion(t === \"local\" ? this.worldQuaternion : Rs), we.copy(qt).applyQuaternion(t === \"local\" ? this.worldQuaternion : Rs), De.copy(xe).applyQuaternion(t === \"local\" ? this.worldQuaternion : Rs), k.copy(we), this.mode) {\n      case \"translate\":\n      case \"scale\":\n        switch (this.axis) {\n          case \"X\":\n            k.copy(this.eye).cross(ps), _t.copy(ps).cross(k);\n            break;\n          case \"Y\":\n            k.copy(this.eye).cross(we), _t.copy(we).cross(k);\n            break;\n          case \"Z\":\n            k.copy(this.eye).cross(De), _t.copy(De).cross(k);\n            break;\n          case \"XY\":\n            _t.copy(De);\n            break;\n          case \"YZ\":\n            _t.copy(ps);\n            break;\n          case \"XZ\":\n            k.copy(De), _t.copy(we);\n            break;\n          case \"XYZ\":\n          case \"E\":\n            _t.set(0, 0, 0);\n            break;\n        }\n        break;\n      case \"rotate\":\n      default:\n        _t.set(0, 0, 0);\n    }\n    _t.length() === 0 ? this.quaternion.copy(this.cameraQuaternion) : (mn.lookAt(nt.set(0, 0, 0), _t, k), this.quaternion.setFromRotationMatrix(mn)), super.updateMatrixWorld(s);\n  }\n}\nclass Pi {\n  constructor(s, t, e, i, o, n = 5, r = !0) {\n    /** Event that fires when the user starts dragging a clipping plane. */\n    I(this, \"onDraggingStarted\", new D());\n    /** Event that fires when the user stops dragging a clipping plane. */\n    I(this, \"onDraggingEnded\", new D());\n    /** {@link Disposable.onDisposed} */\n    I(this, \"onDisposed\", new D());\n    /**\n     * The normal vector of the clipping plane.\n     */\n    I(this, \"normal\");\n    /**\n     * The origin point of the clipping plane.\n     */\n    I(this, \"origin\");\n    /**\n     * The THREE.js Plane object representing the clipping plane.\n     */\n    I(this, \"three\", new O.Plane());\n    /** The components instance to which this plane belongs. */\n    I(this, \"components\");\n    /** The world instance to which this plane belongs. */\n    I(this, \"world\");\n    /** A custom string to identify what this plane is used for. */\n    I(this, \"type\", \"default\");\n    I(this, \"_helper\");\n    I(this, \"_visible\", !0);\n    I(this, \"_enabled\", !0);\n    I(this, \"_controlsActive\", !1);\n    I(this, \"_arrowBoundBox\", new O.Mesh());\n    I(this, \"_planeMesh\");\n    I(this, \"_controls\");\n    I(this, \"_hiddenMaterial\", new O.MeshBasicMaterial({\n      visible: !1\n    }));\n    /** {@link Updateable.update} */\n    I(this, \"update\", () => {\n      this._enabled && this.three.setFromNormalAndCoplanarPoint(\n        this.normal,\n        this._helper.position\n      );\n    });\n    I(this, \"changeDrag\", (s) => {\n      this._visible = !s.value, this.preventCameraMovement(), this.notifyDraggingChanged(s);\n    });\n    if (this.components = s, this.world = t, !t.renderer)\n      throw new Error(\"The given world must have a renderer!\");\n    this.normal = i, this.origin = e, t.renderer.setPlane(!0, this.three), this._planeMesh = Pi.newPlaneMesh(n, o), this._helper = this.newHelper(), this._controls = this.newTransformControls(), this.three.setFromNormalAndCoplanarPoint(i, e), r && this.toggleControls(!0);\n  }\n  /**\n   * Getter for the enabled state of the clipping plane.\n   * @returns {boolean} The current enabled state.\n   */\n  get enabled() {\n    return this._enabled;\n  }\n  /**\n   * Setter for the enabled state of the clipping plane.\n   * Updates the clipping plane state in the renderer and throws an error if no renderer is found.\n   * @param {boolean} state - The new enabled state.\n   */\n  set enabled(s) {\n    if (!this.world.renderer)\n      throw new Error(\"No renderer found for clipping plane!\");\n    this._enabled = s, this.world.renderer.setPlane(s, this.three);\n  }\n  /** {@link Hideable.visible } */\n  get visible() {\n    return this._visible;\n  }\n  /** {@link Hideable.visible } */\n  set visible(s) {\n    this._visible = s, this._controls.visible = s, this._helper.visible = s, this.toggleControls(s);\n  }\n  /** The meshes used for raycasting */\n  get meshes() {\n    return [this._planeMesh, this._arrowBoundBox];\n  }\n  /** The material of the clipping plane representation. */\n  get planeMaterial() {\n    return this._planeMesh.material;\n  }\n  /** The material of the clipping plane representation. */\n  set planeMaterial(s) {\n    this._planeMesh.material = s;\n  }\n  /** The size of the clipping plane representation. */\n  get size() {\n    return this._planeMesh.scale.x;\n  }\n  /** Sets the size of the clipping plane representation. */\n  set size(s) {\n    this._planeMesh.scale.set(s, s, s);\n  }\n  /**\n   * Getter for the helper object of the clipping plane.\n   * The helper object is a THREE.Object3D that contains the clipping plane mesh and other related objects.\n   * It is used for positioning, rotating, and scaling the clipping plane in the 3D scene.\n   *\n   * @returns {THREE.Object3D} The helper object of the clipping plane.\n   */\n  get helper() {\n    return this._helper;\n  }\n  /**\n   * Sets the clipping plane's normal and origin from the given normal and point.\n   * This method resets the clipping plane's state, updates the normal and origin,\n   * and positions the helper object accordingly.\n   *\n   * @param normal - The new normal vector for the clipping plane.\n   * @param point - The new origin point for the clipping plane.\n   *\n   * @returns {void}\n   */\n  setFromNormalAndCoplanarPoint(s, t) {\n    this.reset(), this.normal.equals(s) || (this.normal.copy(s), this._helper.lookAt(s)), this.origin.copy(t), this._helper.position.copy(t), this._helper.updateMatrix(), this.update();\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    this._enabled = !1, this.onDraggingStarted.reset(), this.onDraggingEnded.reset(), this._helper.removeFromParent(), this.world.renderer && this.world.renderer.setPlane(!1, this.three), this._arrowBoundBox.removeFromParent(), this._arrowBoundBox.geometry.dispose(), this._planeMesh.geometry.dispose(), this._controls.removeFromParent(), this._controls.dispose(), this.onDisposed.trigger(), this.onDisposed.reset();\n  }\n  reset() {\n    const s = new O.Vector3(1, 0, 0), t = new O.Vector3();\n    this.normal.equals(s) || (this.normal.copy(s), this._helper.lookAt(s)), this.origin.copy(t), this._helper.position.copy(t), this._helper.updateMatrix();\n  }\n  toggleControls(s) {\n    if (s) {\n      if (this._controlsActive)\n        return;\n      this._controls.addEventListener(\"change\", this.update), this._controls.addEventListener(\"dragging-changed\", this.changeDrag);\n    } else\n      this._controls.removeEventListener(\"change\", this.update), this._controls.removeEventListener(\"dragging-changed\", this.changeDrag);\n    this._controlsActive = s;\n  }\n  newTransformControls() {\n    if (!this.world.renderer)\n      throw new Error(\"No renderer found for clipping plane!\");\n    const s = this.world.camera.three, t = this.world.renderer.three.domElement, e = new yr(s, t);\n    return this.initializeControls(e), this.world.scene.three.add(e), e;\n  }\n  initializeControls(s) {\n    s.attach(this._helper), s.showX = !1, s.showY = !1, s.setSpace(\"local\"), this.createArrowBoundingBox(), s.children[0].children[0].add(this._arrowBoundBox);\n  }\n  createArrowBoundingBox() {\n    this._arrowBoundBox.geometry = new O.CylinderGeometry(0.18, 0.18, 1.2), this._arrowBoundBox.material = this._hiddenMaterial, this._arrowBoundBox.rotateX(Math.PI / 2), this._arrowBoundBox.updateMatrix(), this._arrowBoundBox.geometry.applyMatrix4(this._arrowBoundBox.matrix);\n  }\n  notifyDraggingChanged(s) {\n    s.value ? this.onDraggingStarted.trigger() : this.onDraggingEnded.trigger();\n  }\n  preventCameraMovement() {\n    this.world.camera.enabled = this._visible;\n  }\n  newHelper() {\n    const s = new O.Object3D();\n    return s.lookAt(this.normal), s.position.copy(this.origin), this._planeMesh.position.z += 0.01, s.add(this._planeMesh), this.world.scene.three.add(s), s;\n  }\n  static newPlaneMesh(s, t) {\n    const e = new O.PlaneGeometry(1), i = new O.Mesh(e, t);\n    return i.scale.set(s, s, s), i;\n  }\n}\nconst Be = class Be extends et {\n  constructor(t) {\n    super(t);\n    /** Event that fires when the user starts dragging a clipping plane. */\n    I(this, \"onBeforeDrag\", new D());\n    /** Event that fires when the user stops dragging a clipping plane. */\n    I(this, \"onAfterDrag\", new D());\n    /**\n     * Event that fires when the user starts creating a clipping plane.\n     */\n    I(this, \"onBeforeCreate\", new D());\n    /**\n     * Event that fires when the user cancels the creation of a clipping plane.\n     */\n    I(this, \"onBeforeCancel\", new D());\n    /**\n     * Event that fires after the user cancels the creation of a clipping plane.\n     */\n    I(this, \"onAfterCancel\", new D());\n    /**\n     * Event that fires when the user starts deleting a clipping plane.\n     */\n    I(this, \"onBeforeDelete\", new D());\n    /**\n     * Event that fires after a clipping plane has been created.\n     * @param plane - The newly created clipping plane.\n     */\n    I(this, \"onAfterCreate\", new D());\n    /**\n     * Event that fires after a clipping plane has been deleted.\n     * @param plane - The deleted clipping plane.\n     */\n    I(this, \"onAfterDelete\", new D());\n    /** {@link Disposable.onDisposed} */\n    I(this, \"onDisposed\", new D());\n    /**\n     * Whether to force the clipping plane to be orthogonal in the Y direction\n     * (up). This is desirable when clipping a building horizontally and a\n     * clipping plane is created in its roof, which might have a slight\n     * slope for draining purposes.\n     */\n    I(this, \"orthogonalY\", !1);\n    /**\n     * The tolerance that determines whether an almost-horizontal clipping plane\n     * will be forced to be orthogonal to the Y direction. {@link orthogonalY}\n     * has to be `true` for this to apply.\n     */\n    I(this, \"toleranceOrthogonalY\", 0.7);\n    /**\n     * The type of clipping plane to be created.\n     * Default is {@link SimplePlane}.\n     */\n    I(this, \"Type\", Pi);\n    /**\n     * A list of all the clipping planes created by this component.\n     */\n    I(this, \"list\", []);\n    /** The material used in all the clipping planes. */\n    I(this, \"_material\", new O.MeshBasicMaterial({\n      color: 12255487,\n      side: O.DoubleSide,\n      transparent: !0,\n      opacity: 0.2\n    }));\n    I(this, \"_size\", 5);\n    I(this, \"_enabled\", !1);\n    I(this, \"_visible\", !0);\n    I(this, \"_onStartDragging\", () => {\n      this.onBeforeDrag.trigger();\n    });\n    I(this, \"_onEndDragging\", () => {\n      this.onAfterDrag.trigger();\n    });\n    this.components.add(Be.uuid, this);\n  }\n  /** {@link Component.enabled} */\n  get enabled() {\n    return this._enabled;\n  }\n  /** {@link Component.enabled} */\n  set enabled(t) {\n    this._enabled = t;\n    for (const e of this.list)\n      e.enabled = t;\n    this.updateMaterialsAndPlanes();\n  }\n  /** {@link Hideable.visible } */\n  get visible() {\n    return this._visible;\n  }\n  /** {@link Hideable.visible } */\n  set visible(t) {\n    this._visible = t;\n    for (const e of this.list)\n      e.visible = t;\n  }\n  /** The material of the clipping plane representation. */\n  get material() {\n    return this._material;\n  }\n  /** The material of the clipping plane representation. */\n  set material(t) {\n    this._material = t;\n    for (const e of this.list)\n      e.planeMaterial = t;\n  }\n  /** The size of the geometric representation of the clippings planes. */\n  get size() {\n    return this._size;\n  }\n  /** The size of the geometric representation of the clippings planes. */\n  set size(t) {\n    this._size = t;\n    for (const e of this.list)\n      e.size = t;\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    this._enabled = !1;\n    for (const t of this.list)\n      t.dispose();\n    this.list.length = 0, this._material.dispose(), this.onBeforeCreate.reset(), this.onBeforeCancel.reset(), this.onBeforeDelete.reset(), this.onBeforeDrag.reset(), this.onAfterCreate.reset(), this.onAfterCancel.reset(), this.onAfterDelete.reset(), this.onAfterDrag.reset(), this.onDisposed.trigger(Be.uuid), this.onDisposed.reset();\n  }\n  /** {@link Createable.create} */\n  create(t) {\n    const o = this.components.get(He).get(t).castRay();\n    return o ? this.createPlaneFromIntersection(t, o) : null;\n  }\n  /**\n   * Creates a plane in a certain place and with a certain orientation,\n   * without the need of the mouse.\n   *\n   * @param world - the world where this plane should be created.\n   * @param normal - the orientation of the clipping plane.\n   * @param point - the position of the clipping plane.\n   * navigation.\n   */\n  createFromNormalAndCoplanarPoint(t, e, i) {\n    const o = this.newPlane(t, i, e);\n    return this.updateMaterialsAndPlanes(), o;\n  }\n  /**\n   * {@link Createable.delete}\n   *\n   * @param world - the world where the plane to delete is.\n   * @param plane - the plane to delete. If undefined, the first plane\n   * found under the cursor will be deleted.\n   */\n  delete(t, e) {\n    e || (e = this.pickPlane(t)), e && this.deletePlane(e);\n  }\n  /**\n   * Deletes all the existing clipping planes.\n   *\n   * @param types - the types of planes to be deleted. If not provided, all planes will be deleted.\n   */\n  deleteAll(t) {\n    const e = [...this.list];\n    for (const i of e)\n      if (!t || t.has(i.type)) {\n        this.delete(i.world, i);\n        const o = this.list.indexOf(i);\n        o !== -1 && this.list.splice(o, 1);\n      }\n  }\n  deletePlane(t) {\n    const e = this.list.indexOf(t);\n    if (e !== -1) {\n      if (this.list.splice(e, 1), !t.world.renderer)\n        throw new Error(\"Renderer not found for this plane's world!\");\n      t.world.renderer.setPlane(!1, t.three), t.dispose(), this.updateMaterialsAndPlanes(), this.onAfterDelete.trigger(t);\n    }\n  }\n  pickPlane(t) {\n    const i = this.components.get(He).get(t), o = this.getAllPlaneMeshes(), n = i.castRay(o);\n    if (n) {\n      const r = n.object;\n      return this.list.find((a) => a.meshes.includes(r));\n    }\n  }\n  getAllPlaneMeshes() {\n    const t = [];\n    for (const e of this.list)\n      t.push(...e.meshes);\n    return t;\n  }\n  createPlaneFromIntersection(t, e) {\n    var a;\n    if (!t.renderer)\n      throw new Error(\"The given world must have a renderer!\");\n    const i = e.point.distanceTo(new O.Vector3(0, 0, 0)), o = (a = e.face) == null ? void 0 : a.normal;\n    if (!i || !o)\n      return null;\n    const n = this.getWorldNormal(e, o), r = this.newPlane(t, e.point, n.negate());\n    return r.visible = this._visible, r.size = this._size, t.renderer.setPlane(!0, r.three), this.updateMaterialsAndPlanes(), r;\n  }\n  getWorldNormal(t, e) {\n    const i = t.object;\n    let o = t.object.matrixWorld.clone();\n    if (i instanceof O.InstancedMesh && t.instanceId !== void 0) {\n      const c = new O.Matrix4();\n      i.getMatrixAt(t.instanceId, c), o = c.multiply(o);\n    }\n    const r = new O.Matrix3().getNormalMatrix(o), a = e.clone().applyMatrix3(r).normalize();\n    return this.normalizePlaneDirectionY(a), a;\n  }\n  normalizePlaneDirectionY(t) {\n    this.orthogonalY && (t.y > this.toleranceOrthogonalY && (t.x = 0, t.y = 1, t.z = 0), t.y < -this.toleranceOrthogonalY && (t.x = 0, t.y = -1, t.z = 0));\n  }\n  newPlane(t, e, i) {\n    const o = new this.Type(\n      this.components,\n      t,\n      e,\n      i,\n      this._material\n    );\n    return o.onDraggingStarted.add(this._onStartDragging), o.onDraggingEnded.add(this._onEndDragging), this.list.push(o), this.onAfterCreate.trigger(o), o;\n  }\n  updateMaterialsAndPlanes() {\n    const t = this.components.get(Ci);\n    for (const [e, i] of t.list) {\n      if (!i.renderer)\n        continue;\n      i.renderer.updateClippingPlanes();\n      const { clippingPlanes: o } = i.renderer;\n      for (const n of i.meshes)\n        if (n.material)\n          if (Array.isArray(n.material))\n            for (const r of n.material)\n              r.clippingPlanes = o;\n          else\n            n.material.clippingPlanes = o;\n    }\n  }\n};\n/**\n * A unique identifier for the component.\n * This UUID is used to register the component within the Components system.\n */\nI(Be, \"uuid\", \"66290bc5-18c4-4cd1-9379-2e17a0617611\");\nlet Rn = Be;\nfunction vr(l, s, t, e) {\n  return new Promise((i, o) => {\n    function n() {\n      const r = l.clientWaitSync(s, t, 0);\n      if (r === l.WAIT_FAILED) {\n        o();\n        return;\n      }\n      if (r === l.TIMEOUT_EXPIRED) {\n        setTimeout(n, e);\n        return;\n      }\n      i();\n    }\n    n();\n  });\n}\nasync function Br(l, s, t, e, i, o, n) {\n  const r = l.fenceSync(l.SYNC_GPU_COMMANDS_COMPLETE, 0);\n  l.flush(), await vr(l, r, 0, 10), l.deleteSync(r), l.bindBuffer(s, t), l.getBufferSubData(s, e, i, o, n), l.bindBuffer(s, null);\n}\nasync function Yr(l, s, t, e, i, o, n, r) {\n  const a = l.createBuffer();\n  return l.bindBuffer(l.PIXEL_PACK_BUFFER, a), l.bufferData(l.PIXEL_PACK_BUFFER, r.byteLength, l.STREAM_READ), l.readPixels(s, t, e, i, o, n, 0), l.bindBuffer(l.PIXEL_PACK_BUFFER, null), await Br(l, l.PIXEL_PACK_BUFFER, a, 0, r), l.deleteBuffer(a), r;\n}\nclass Vr {\n  constructor(s, t, e) {\n    /** {@link Disposable.onDisposed} */\n    I(this, \"onDisposed\", new D());\n    /**\n     * Fires after making the visibility check to the meshes. It lists the\n     * meshes that are currently visible, and the ones that were visible\n     * just before but not anymore.\n     */\n    I(this, \"onViewUpdated\", new Ts());\n    /**\n     * Whether this renderer is active or not. If not, it won't render anything.\n     */\n    I(this, \"enabled\", !0);\n    /**\n     * Needs to check whether there are objects that need to be hidden or shown.\n     * You can bind this to the camera movement, to a certain interval, etc.\n     */\n    I(this, \"needsUpdate\", !1);\n    /**\n     * Render the internal scene used to determine the object visibility. Used\n     * for debugging purposes.\n     */\n    I(this, \"renderDebugFrame\", !1);\n    /** The components instance to which this renderer belongs. */\n    I(this, \"components\");\n    /** The world instance to which this renderer belongs. */\n    I(this, \"world\");\n    /** The THREE.js renderer used to make the visibility test. */\n    I(this, \"renderer\");\n    I(this, \"autoUpdate\", !0);\n    I(this, \"updateInterval\", 1e3);\n    I(this, \"worker\");\n    I(this, \"scene\", new O.Scene());\n    I(this, \"_width\", 512);\n    I(this, \"_height\", 512);\n    I(this, \"_availableColor\", 1);\n    I(this, \"renderTarget\");\n    I(this, \"bufferSize\");\n    I(this, \"_buffer\");\n    // Prevents worker being fired multiple times\n    I(this, \"_isWorkerBusy\", !1);\n    /**\n     * The function that the culler uses to reprocess the scene. Generally it's\n     * better to call needsUpdate, but you can also call this to force it.\n     * @param force if true, it will refresh the scene even if needsUpdate is\n     * not true.\n     */\n    I(this, \"updateVisibility\", async (s) => {\n      if (!this.enabled || !this.needsUpdate && !s || this._isWorkerBusy)\n        return;\n      this._isWorkerBusy = !0;\n      const t = this.world.camera.three;\n      t.updateMatrix(), this.renderer.setSize(this._width, this._height), this.renderer.setRenderTarget(this.renderTarget), this.renderer.render(this.scene, t);\n      const e = this.renderer.getContext();\n      await Yr(\n        e,\n        0,\n        0,\n        this._width,\n        this._height,\n        e.RGBA,\n        e.UNSIGNED_BYTE,\n        this._buffer\n      ), this.renderer.setRenderTarget(null), this.renderDebugFrame && this.renderer.render(this.scene, t), this.worker.postMessage({\n        buffer: this._buffer\n      }), this.needsUpdate = !1;\n    });\n    if (!t.renderer)\n      throw new Error(\"The given world must have a renderer!\");\n    this.components = s, this.applySettings(e), this.world = t, this.renderer = new O.WebGLRenderer(), this.renderTarget = new O.WebGLRenderTarget(this._width, this._height), this.bufferSize = this._width * this._height * 4, this._buffer = new Uint8Array(this.bufferSize), this.renderer.clippingPlanes = t.renderer.clippingPlanes;\n    const i = `\n      addEventListener(\"message\", (event) => {\n        const { buffer } = event.data;\n        const colors = new Map();\n        for (let i = 0; i < buffer.length; i += 4) {\n          const r = buffer[i];\n          const g = buffer[i + 1];\n          const b = buffer[i + 2];\n          const code = \"\" + r + \"-\" + g + \"-\" + b;\n          if(colors.has(code)) {\n            colors.set(code, colors.get(code) + 1);\n          } else {\n            colors.set(code, 1);\n          }\n        }\n        postMessage({ colors });\n      });\n    `, o = new Blob([i], { type: \"application/javascript\" });\n    this.worker = new Worker(URL.createObjectURL(o));\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    this.enabled = !1;\n    for (const s of this.scene.children)\n      s.removeFromParent();\n    this.onViewUpdated.reset(), this.worker.terminate(), this.renderer.dispose(), this.renderTarget.dispose(), this._buffer = null, this.onDisposed.reset();\n  }\n  getAvailableColor() {\n    let s = BigInt(this._availableColor.toString());\n    const t = [];\n    do\n      t.unshift(Number(s % 256n)), s /= 256n;\n    while (s);\n    for (; t.length !== 3; )\n      t.unshift(0);\n    const [e, i, o] = t, n = `${e}-${i}-${o}`;\n    return { r: e, g: i, b: o, code: n };\n  }\n  increaseColor() {\n    if (this._availableColor === 256 * 256 * 256) {\n      console.warn(\"Color can't be increased over 256 x 256 x 256!\");\n      return;\n    }\n    this._availableColor++;\n  }\n  decreaseColor() {\n    if (this._availableColor === 1) {\n      console.warn(\"Color can't be decreased under 0!\");\n      return;\n    }\n    this._availableColor--;\n  }\n  applySettings(s) {\n    s && (s.updateInterval !== void 0 && (this.updateInterval = s.updateInterval), s.height !== void 0 && (this._height = s.height), s.width !== void 0 && (this._width = s.width), s.autoUpdate !== void 0 && (this.autoUpdate = s.autoUpdate));\n  }\n}\nclass Gr extends Vr {\n  constructor(t, e, i) {\n    super(t, e, i);\n    /**\n     * Event triggered when the visibility of meshes is updated.\n     * Contains two sets: seen and unseen.\n     */\n    I(this, \"onViewUpdated\", new D());\n    /**\n     * Pixels in screen a geometry must occupy to be considered \"seen\".\n     * Default value is 100.\n     */\n    I(this, \"threshold\", 100);\n    /**\n     * Map of color code to THREE.InstancedMesh.\n     * Used to keep track of color-coded meshes.\n     */\n    I(this, \"colorMeshes\", /* @__PURE__ */ new Map());\n    /**\n     * Flag to indicate if the renderer is currently processing.\n     * Used to prevent concurrent processing.\n     */\n    I(this, \"isProcessing\", !1);\n    I(this, \"_colorCodeMeshMap\", /* @__PURE__ */ new Map());\n    I(this, \"_meshIDColorCodeMap\", /* @__PURE__ */ new Map());\n    I(this, \"_currentVisibleMeshes\", /* @__PURE__ */ new Set());\n    I(this, \"_recentlyHiddenMeshes\", /* @__PURE__ */ new Set());\n    I(this, \"_intervalID\", null);\n    I(this, \"_transparentMat\", new O.MeshBasicMaterial({\n      transparent: !0,\n      opacity: 0\n    }));\n    I(this, \"handleWorkerMessage\", async (t) => {\n      if (this.isProcessing)\n        return;\n      const e = t.data.colors;\n      this._recentlyHiddenMeshes = new Set(this._currentVisibleMeshes), this._currentVisibleMeshes.clear();\n      for (const [i, o] of e) {\n        if (o < this.threshold)\n          continue;\n        const n = this._colorCodeMeshMap.get(i);\n        n && (this._currentVisibleMeshes.add(n), this._recentlyHiddenMeshes.delete(n));\n      }\n      this.onViewUpdated.trigger({\n        seen: this._currentVisibleMeshes,\n        unseen: this._recentlyHiddenMeshes\n      }), this._isWorkerBusy = !1;\n    });\n    this.worker.addEventListener(\"message\", this.handleWorkerMessage), this.autoUpdate && window.setInterval(async () => {\n      this.isProcessing || await this.updateVisibility();\n    }, this.updateInterval), this.onViewUpdated.add(({ seen: o, unseen: n }) => {\n      for (const r of o)\n        r.visible = !0;\n      for (const r of n)\n        r.visible = !1;\n    });\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    super.dispose(), this._intervalID !== null && (window.clearInterval(this._intervalID), this._intervalID = null), this._currentVisibleMeshes.clear(), this._recentlyHiddenMeshes.clear(), this._meshIDColorCodeMap.clear(), this._transparentMat.dispose(), this._colorCodeMeshMap.clear();\n    const t = this.components.get(zt);\n    for (const e in this.colorMeshes) {\n      const i = this.colorMeshes.get(e);\n      i && t.destroy(i, !0);\n    }\n    this.colorMeshes.clear();\n  }\n  /**\n   * Adds a mesh to the culler. When the mesh is not visibile anymore, it will be removed from the scene. When it's visible again, it will be added to the scene.\n   * @param mesh - The mesh to add. It can be a regular THREE.Mesh or an instance of THREE.InstancedMesh.\n   * @returns {void}\n   */\n  add(t) {\n    if (!this.enabled)\n      return;\n    if (this.isProcessing) {\n      console.log(\"Culler processing not finished yet.\");\n      return;\n    }\n    this.isProcessing = !0;\n    const e = t instanceof O.InstancedMesh, { geometry: i, material: o } = t, { colorMaterial: n, code: r } = this.getAvailableMaterial();\n    let a;\n    if (Array.isArray(o)) {\n      let d = !0;\n      const E = [];\n      for (const u of o)\n        sn.isTransparent(u) ? E.push(this._transparentMat) : (d = !1, E.push(n));\n      if (d) {\n        n.dispose(), this.isProcessing = !1;\n        return;\n      }\n      a = E;\n    } else if (sn.isTransparent(o)) {\n      n.dispose(), this.isProcessing = !1;\n      return;\n    } else\n      a = n;\n    this._colorCodeMeshMap.set(r, t), this._meshIDColorCodeMap.set(t.uuid, r);\n    const c = e ? t.count : 1, h = new O.InstancedMesh(i, a, c);\n    e ? h.instanceMatrix = t.instanceMatrix : h.setMatrixAt(0, new O.Matrix4()), t.visible = !1, t.updateWorldMatrix(!0, !1), h.applyMatrix4(t.matrixWorld), h.updateMatrix(), this.scene.add(h), this.colorMeshes.set(t.uuid, h), this.increaseColor(), this.isProcessing = !1;\n  }\n  /**\n   * Removes a mesh from the culler, so its visibility is not controlled by the culler anymore.\n   * When the mesh is removed, it will be hidden from the scene and its color-coded mesh will be destroyed.\n   * @param mesh - The mesh to remove. It can be a regular THREE.Mesh or an instance of THREE.InstancedMesh.\n   * @returns {void}\n   */\n  remove(t) {\n    if (this.isProcessing) {\n      console.log(\"Culler processing not finished yet.\");\n      return;\n    }\n    this.isProcessing = !0;\n    const e = this.components.get(zt);\n    this._currentVisibleMeshes.delete(t), this._recentlyHiddenMeshes.delete(t);\n    const i = this.colorMeshes.get(t.uuid), o = this._meshIDColorCodeMap.get(t.uuid);\n    if (!i || !o) {\n      this.isProcessing = !1;\n      return;\n    }\n    this._colorCodeMeshMap.delete(o), this._meshIDColorCodeMap.delete(t.uuid), this.colorMeshes.delete(t.uuid), i.geometry = void 0, i.material = [], e.destroy(i, !0), this._recentlyHiddenMeshes.delete(t), this._currentVisibleMeshes.delete(t), this.isProcessing = !1;\n  }\n  getAvailableMaterial() {\n    const { r: t, g: e, b: i, code: o } = this.getAvailableColor(), n = O.ColorManagement.enabled;\n    O.ColorManagement.enabled = !1;\n    const r = new O.Color(`rgb(${t}, ${e}, ${i})`);\n    if (!this.world.renderer)\n      throw new Error(\"Renderer not found in the world!\");\n    const a = this.world.renderer.clippingPlanes, c = new O.MeshBasicMaterial({\n      color: r,\n      clippingPlanes: a,\n      side: O.DoubleSide\n    });\n    return O.ColorManagement.enabled = n, { colorMaterial: c, code: o };\n  }\n}\nconst Ye = class Ye extends et {\n  constructor(t) {\n    super(t);\n    /**\n     * An event that is triggered when the Cullers component is disposed.\n     */\n    I(this, \"onDisposed\", new D());\n    I(this, \"_enabled\", !0);\n    /**\n     * A map of MeshCullerRenderer instances, keyed by their world UUIDs.\n     */\n    I(this, \"list\", /* @__PURE__ */ new Map());\n    t.add(Ye.uuid, this);\n  }\n  /** {@link Component.enabled} */\n  get enabled() {\n    return this._enabled;\n  }\n  /** {@link Component.enabled} */\n  set enabled(t) {\n    this._enabled = t;\n    for (const [e, i] of this.list)\n      i.enabled = t;\n  }\n  /**\n   * Creates a new MeshCullerRenderer for the given world.\n   * If a MeshCullerRenderer already exists for the world, it will return the existing one.\n   *\n   * @param world - The world for which to create the MeshCullerRenderer.\n   * @param config - Optional configuration settings for the MeshCullerRenderer.\n   *\n   * @returns The newly created or existing MeshCullerRenderer for the given world.\n   */\n  create(t, e) {\n    if (this.list.has(t.uuid))\n      return this.list.get(t.uuid);\n    const i = new Gr(this.components, t, e);\n    return this.list.set(t.uuid, i), i;\n  }\n  /**\n   * Deletes the MeshCullerRenderer associated with the given world.\n   * If a MeshCullerRenderer exists for the given world, it will be disposed and removed from the list.\n   *\n   * @param world - The world for which to delete the MeshCullerRenderer.\n   *\n   * @returns {void}\n   */\n  delete(t) {\n    const e = this.list.get(t.uuid);\n    e && e.dispose(), this.list.delete(t.uuid);\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    this.enabled = !1, this.onDisposed.trigger(Ye.uuid), this.onDisposed.reset();\n    for (const [t, e] of this.list)\n      e.dispose();\n    this.list.clear();\n  }\n};\n/**\n * A unique identifier for the component.\n * This UUID is used to register the component within the Components system.\n */\nI(Ye, \"uuid\", \"69f2a50d-c266-44fc-b1bd-fa4d34be89e6\");\nlet Ti = Ye;\nclass zr {\n  constructor(s) {\n    /** {@link Disposable.onDisposed} */\n    I(this, \"onDisposed\", new D());\n    /** {@link Updateable.onAfterUpdate} */\n    I(this, \"onAfterUpdate\", new D());\n    /** {@link Updateable.onBeforeUpdate} */\n    I(this, \"onBeforeUpdate\", new D());\n    /** {@link Resizeable.onResize} */\n    I(this, \"onResize\", new D());\n    /**\n     * The front offset of the minimap.\n     * It determines how much the minimap's view is offset from the camera's view.\n     * By pushing the map to the front, what the user sees on screen corresponds with what they see on the map\n     */\n    I(this, \"frontOffset\", 0);\n    /**\n     * The override material for the minimap.\n     * It is used to render the depth information of the world onto the minimap.\n     */\n    I(this, \"overrideMaterial\", new O.MeshDepthMaterial());\n    /**\n     * The background color of the minimap.\n     * It is used to set the background color of the minimap's renderer.\n     */\n    I(this, \"backgroundColor\", new O.Color(395274));\n    /**\n     * The WebGL renderer for the minimap.\n     * It is used to render the minimap onto the screen.\n     */\n    I(this, \"renderer\");\n    /**\n     * A flag indicating whether the minimap is enabled.\n     * If disabled, the minimap will not update or render.\n     */\n    I(this, \"enabled\", !0);\n    /**\n     * The world in which the minimap is displayed.\n     * It provides access to the 3D scene, camera, and other relevant world elements.\n     */\n    I(this, \"world\");\n    I(this, \"_lockRotation\", !0);\n    I(this, \"_camera\");\n    I(this, \"_plane\");\n    I(this, \"_size\", new O.Vector2(320, 160));\n    I(this, \"_tempVector1\", new O.Vector3());\n    I(this, \"_tempVector2\", new O.Vector3());\n    I(this, \"_tempTarget\", new O.Vector3());\n    I(this, \"down\", new O.Vector3(0, -1, 0));\n    I(this, \"updatePlanes\", () => {\n      if (!this.world.renderer)\n        throw new Error(\"The given world must have a renderer!\");\n      const s = [], t = this.world.renderer.three;\n      for (const e of t.clippingPlanes)\n        s.push(e);\n      s.push(this._plane), this.renderer.clippingPlanes = s;\n    });\n    if (this.world = s, !this.world.renderer)\n      throw new Error(\"The given world must have a renderer!\");\n    this.renderer = new O.WebGLRenderer(), this.renderer.setSize(this._size.x, this._size.y);\n    const t = 1, e = this._size.x / this._size.y;\n    this._camera = new O.OrthographicCamera(\n      t * e / -2,\n      t * e / 2,\n      t / 2,\n      t / -2\n    ), this.world.renderer.onClippingPlanesUpdated.add(this.updatePlanes), this._camera.position.set(0, 200, 0), this._camera.zoom = 0.1, this._camera.rotation.x = -Math.PI / 2, this._plane = new O.Plane(this.down, 200), this.updatePlanes();\n  }\n  /**\n   * Gets or sets whether the minimap rotation is locked.\n   * When rotation is locked, the minimap will always face the same direction as the camera.\n   */\n  get lockRotation() {\n    return this._lockRotation;\n  }\n  /**\n   * Sets whether the minimap rotation is locked.\n   * When rotation is locked, the minimap will always face the same direction as the camera.\n   * @param active - If `true`, rotation is locked. If `false`, rotation is not locked.\n   */\n  set lockRotation(s) {\n    this._lockRotation = s, s && (this._camera.rotation.z = 0);\n  }\n  /**\n   * Gets the current zoom level of the minimap.\n   * The zoom level determines how much of the world is visible on the minimap.\n   * @returns The current zoom level of the minimap.\n   */\n  get zoom() {\n    return this._camera.zoom;\n  }\n  /**\n   * Sets the zoom level of the minimap.\n   * The zoom level determines how much of the world is visible on the minimap.\n   * @param value - The new zoom level of the minimap.\n   */\n  set zoom(s) {\n    this._camera.zoom = s, this._camera.updateProjectionMatrix();\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    this.enabled = !1, this.onBeforeUpdate.reset(), this.onAfterUpdate.reset(), this.onResize.reset(), this.overrideMaterial.dispose(), this.renderer.dispose(), this.onDisposed.trigger(), this.onDisposed.reset();\n  }\n  /** Returns the camera used by the MiniMap */\n  get() {\n    return this._camera;\n  }\n  /** {@link Updateable.update} */\n  update() {\n    if (!this.enabled)\n      return;\n    this.onBeforeUpdate.trigger();\n    const s = this.world.scene.three, t = this.world.camera;\n    if (!t.hasCameraControls())\n      throw new Error(\"The given world must use camera controls!\");\n    if (!(s instanceof O.Scene))\n      throw new Error(\"The given world must have a THREE.Scene as a root!\");\n    const e = t.controls;\n    if (e.getPosition(this._tempVector1), this._camera.position.x = this._tempVector1.x, this._camera.position.z = this._tempVector1.z, this.frontOffset !== 0 && (e.getTarget(this._tempVector2), this._tempVector2.sub(this._tempVector1), this._tempVector2.normalize().multiplyScalar(this.frontOffset), this._camera.position.x += this._tempVector2.x, this._camera.position.z += this._tempVector2.z), !this._lockRotation) {\n      e.getTarget(this._tempTarget);\n      const o = Math.atan2(\n        this._tempTarget.x - this._tempVector1.x,\n        this._tempTarget.z - this._tempVector1.z\n      );\n      this._camera.rotation.z = o + Math.PI;\n    }\n    this._plane.set(this.down, this._tempVector1.y);\n    const i = s.background;\n    s.background = this.backgroundColor, this.renderer.render(s, this._camera), s.background = i, this.onAfterUpdate.trigger();\n  }\n  /** {@link Resizeable.getSize} */\n  getSize() {\n    return this._size;\n  }\n  /** {@link Resizeable.resize} */\n  resize(s = this._size) {\n    this._size.copy(s), this.renderer.setSize(s.x, s.y);\n    const t = s.x / s.y, e = 1;\n    this._camera.left = e * t / -2, this._camera.right = e * t / 2, this._camera.top = e / 2, this._camera.bottom = -e / 2, this._camera.updateProjectionMatrix(), this.onResize.trigger(s);\n  }\n}\nconst _s = class _s extends et {\n  constructor(t) {\n    super(t);\n    /** {@link Updateable.onAfterUpdate} */\n    I(this, \"onAfterUpdate\", new D());\n    /** {@link Updateable.onBeforeUpdate} */\n    I(this, \"onBeforeUpdate\", new D());\n    /** {@link Disposable.onDisposed} */\n    I(this, \"onDisposed\", new D());\n    /** {@link Component.enabled} */\n    I(this, \"enabled\", !0);\n    /**\n     * A collection of {@link MiniMap} instances, each associated with a unique world ID.\n     */\n    I(this, \"list\", /* @__PURE__ */ new Map());\n    this.components.add(_s.uuid, this);\n  }\n  /**\n   * Creates a new {@link MiniMap} instance associated with the given world.\n   * If a {@link MiniMap} instance already exists for the given world, an error will be thrown.\n   *\n   * @param world - The {@link World} for which to create a {@link MiniMap} instance.\n   * @returns The newly created {@link MiniMap} instance.\n   * @throws Will throw an error if a {@link MiniMap} instance already exists for the given world.\n   */\n  create(t) {\n    if (this.list.has(t.uuid))\n      throw new Error(\"This world already has a minimap!\");\n    const e = new zr(t);\n    return this.list.set(t.uuid, e), e;\n  }\n  /**\n   * Deletes a {@link MiniMap} instance associated with the given world ID.\n   * If a {@link MiniMap} instance does not exist for the given ID, nothing happens.\n   *\n   * @param id - The unique identifier of the world for which to delete the {@link MiniMap} instance.\n   * @returns {void}\n   */\n  delete(t) {\n    const e = this.list.get(t);\n    e && e.dispose(), this.list.delete(t);\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    for (const [t, e] of this.list)\n      e.dispose();\n    this.list.clear(), this.onDisposed.trigger();\n  }\n  /** {@link Updateable.update} */\n  update() {\n    for (const [t, e] of this.list)\n      e.update();\n  }\n};\n/**\n * A unique identifier for the component.\n * This UUID is used to register the component within the Components system.\n */\nI(_s, \"uuid\", \"39ad6aad-84c8-4adf-a1e0-7f25313a9e7f\");\nlet An = _s;\nclass Hr {\n  constructor(s) {\n    /** {@link NavigationMode.enabled} */\n    I(this, \"enabled\", !1);\n    /** {@link NavigationMode.id} */\n    I(this, \"id\", \"FirstPerson\");\n    this.camera = s;\n  }\n  /** {@link NavigationMode.set} */\n  set(s) {\n    if (this.enabled = s, s) {\n      if (this.camera.projection.current !== \"Perspective\") {\n        this.camera.set(\"Orbit\");\n        return;\n      }\n      this.setupFirstPersonCamera();\n    }\n  }\n  setupFirstPersonCamera() {\n    const s = this.camera.controls, t = new O.Vector3();\n    s.distance--, s.getPosition(t), s.minDistance = 1, s.maxDistance = 1, s.distance = 1, s.moveTo(\n      t.x,\n      t.y,\n      t.z\n    ), s.truckSpeed = 50, s.mouseButtons.wheel = ot.ACTION.DOLLY, s.touches.two = ot.ACTION.TOUCH_ZOOM_TRUCK;\n  }\n}\nclass Wr {\n  constructor(s) {\n    /** {@link NavigationMode.enabled} */\n    I(this, \"enabled\", !0);\n    /** {@link NavigationMode.id} */\n    I(this, \"id\", \"Orbit\");\n    this.camera = s, this.activateOrbitControls();\n  }\n  /** {@link NavigationMode.set} */\n  set(s) {\n    this.enabled = s, s && this.activateOrbitControls();\n  }\n  activateOrbitControls() {\n    const s = this.camera.controls;\n    s.minDistance = 1, s.maxDistance = 300;\n    const t = new O.Vector3();\n    s.getPosition(t);\n    const e = t.length();\n    s.distance = e, s.truckSpeed = 2;\n    const { rotation: i } = this.camera.three, o = new O.Vector3(0, 0, -1).applyEuler(i), n = t.addScaledVector(o, e);\n    s.moveTo(n.x, n.y, n.z);\n  }\n}\nclass kr {\n  constructor(s) {\n    /** {@link NavigationMode.enabled} */\n    I(this, \"enabled\", !1);\n    /** {@link NavigationMode.id} */\n    I(this, \"id\", \"Plan\");\n    I(this, \"mouseAction1\");\n    I(this, \"mouseAction2\");\n    I(this, \"mouseInitialized\", !1);\n    I(this, \"defaultAzimuthSpeed\");\n    I(this, \"defaultPolarSpeed\");\n    this.camera = s, this.defaultAzimuthSpeed = s.controls.azimuthRotateSpeed, this.defaultPolarSpeed = s.controls.polarRotateSpeed;\n  }\n  /** {@link NavigationMode.set} */\n  set(s) {\n    this.enabled = s;\n    const t = this.camera.controls;\n    t.azimuthRotateSpeed = s ? 0 : this.defaultAzimuthSpeed, t.polarRotateSpeed = s ? 0 : this.defaultPolarSpeed, this.mouseInitialized || (this.mouseAction1 = t.touches.one, this.mouseAction2 = t.touches.two, this.mouseInitialized = !0), s ? (t.mouseButtons.left = ot.ACTION.TRUCK, t.touches.one = ot.ACTION.TOUCH_TRUCK, t.touches.two = ot.ACTION.TOUCH_ZOOM) : (t.mouseButtons.left = ot.ACTION.ROTATE, t.touches.one = this.mouseAction1, t.touches.two = this.mouseAction2);\n  }\n}\nclass Xr {\n  constructor(s) {\n    /**\n     * Event that fires when the {@link CameraProjection} changes.\n     */\n    I(this, \"onChanged\", new D());\n    /**\n     * Current projection mode of the camera.\n     * Default is \"Perspective\".\n     */\n    I(this, \"current\", \"Perspective\");\n    /**\n     * The camera controlled by this ProjectionManager.\n     * It can be either a PerspectiveCamera or an OrthographicCamera.\n     */\n    I(this, \"camera\");\n    /** Match Ortho zoom with Perspective distance when changing projection mode */\n    I(this, \"matchOrthoDistanceEnabled\", !1);\n    I(this, \"_component\");\n    I(this, \"_previousDistance\", -1);\n    this._component = s, this.camera = s.three;\n  }\n  /**\n   * Sets the {@link CameraProjection} of the {@link OrthoPerspectiveCamera}.\n   *\n   * @param projection - the new projection to set. If it is the current projection,\n   * it will have no effect.\n   */\n  async set(s) {\n    this.current !== s && (s === \"Orthographic\" ? this.setOrthoCamera() : await this.setPerspectiveCamera(), this.onChanged.trigger(this.camera));\n  }\n  /**\n   * Changes the current {@link CameraProjection} from Ortographic to Perspective\n   * and vice versa.\n   */\n  async toggle() {\n    const t = this.current === \"Perspective\" ? \"Orthographic\" : \"Perspective\";\n    await this.set(t);\n  }\n  setOrthoCamera() {\n    if (this._component.mode === null || this._component.mode.id === \"FirstPerson\")\n      return;\n    this._previousDistance = this._component.controls.distance, this._component.controls.distance = 200;\n    const s = this.getPerspectiveDims();\n    if (!s)\n      return;\n    const { width: t, height: e } = s;\n    this.setupOrthoCamera(e, t), this.camera = this._component.threeOrtho, this.current = \"Orthographic\";\n  }\n  getPerspectiveDims() {\n    const s = this._component.currentWorld;\n    if (!s || !s.renderer)\n      return null;\n    const t = new O.Vector3();\n    this._component.threePersp.getWorldDirection(t);\n    const e = new O.Vector3();\n    this._component.controls.getTarget(e);\n    const o = e.clone().sub(this._component.threePersp.position).dot(t), n = s.renderer.getSize(), r = n.x / n.y, a = this._component.threePersp, c = o * 2 * Math.atan(a.fov * (Math.PI / 180) / 2);\n    return { width: c * r, height: c };\n  }\n  setupOrthoCamera(s, t) {\n    this._component.controls.mouseButtons.wheel = ot.ACTION.ZOOM, this._component.controls.mouseButtons.middle = ot.ACTION.ZOOM;\n    const e = this._component.threePersp, i = this._component.threeOrtho;\n    i.zoom = 1, i.left = t / -2, i.right = t / 2, i.top = s / 2, i.bottom = s / -2, i.updateProjectionMatrix(), i.position.copy(e.position), i.quaternion.copy(e.quaternion), this._component.controls.camera = i;\n  }\n  getDistance() {\n    const s = this._component.threePersp, t = this._component.threeOrtho;\n    return (t.top - t.bottom) / t.zoom / (2 * Math.atan(s.fov * (Math.PI / 180) / 2));\n  }\n  async setPerspectiveCamera() {\n    this._component.controls.mouseButtons.wheel = ot.ACTION.DOLLY, this._component.controls.mouseButtons.middle = ot.ACTION.DOLLY;\n    const s = this._component.threePersp, t = this._component.threeOrtho;\n    s.position.copy(t.position), s.quaternion.copy(t.quaternion), this._component.controls.mouseButtons.wheel = ot.ACTION.DOLLY, this.matchOrthoDistanceEnabled ? this._component.controls.distance = this.getDistance() : this._component.controls.distance = this._previousDistance, await this._component.controls.zoomTo(1), s.updateProjectionMatrix(), this._component.controls.camera = s, this.camera = s, this.current = \"Perspective\";\n  }\n}\nclass oa extends We {\n  constructor(t) {\n    super(t);\n    /**\n     * A ProjectionManager instance that manages the projection modes of the camera.\n     */\n    I(this, \"projection\");\n    /**\n     * A THREE.OrthographicCamera instance that represents the orthographic camera.\n     * This camera is used when the projection mode is set to orthographic.\n     */\n    I(this, \"threeOrtho\");\n    /**\n     * A THREE.PerspectiveCamera instance that represents the perspective camera.\n     * This camera is used when the projection mode is set to perspective.\n     */\n    I(this, \"threePersp\");\n    I(this, \"_userInputButtons\", {});\n    I(this, \"_frustumSize\", 50);\n    I(this, \"_navigationModes\", /* @__PURE__ */ new Map());\n    I(this, \"_mode\", null);\n    I(this, \"previousSize\", null);\n    this.threePersp = this.three, this.threeOrtho = this.newOrthoCamera(), this.projection = new Xr(this), this.onAspectUpdated.add(() => {\n      this.setOrthoPerspCameraAspect();\n    }), this.projection.onChanged.add(\n      (e) => {\n        this.three = e, this.updateAspect();\n      }\n    ), this.onWorldChanged.add(({ action: e }) => {\n      e === \"added\" && (this._navigationModes.clear(), this._navigationModes.set(\"Orbit\", new Wr(this)), this._navigationModes.set(\"FirstPerson\", new Hr(this)), this._navigationModes.set(\"Plan\", new kr(this)), this._mode = this._navigationModes.get(\"Orbit\"), this.mode.set(!0, { preventTargetAdjustment: !0 }), this.currentWorld && this.currentWorld.renderer && (this.previousSize = this.currentWorld.renderer.getSize().clone()));\n    });\n  }\n  /**\n   * Getter for the current navigation mode.\n   * Throws an error if the mode is not found or the camera is not initialized.\n   *\n   * @returns {NavigationMode} The current navigation mode.\n   *\n   * @throws {Error} Throws an error if the mode is not found or the camera is not initialized.\n   */\n  get mode() {\n    if (!this._mode)\n      throw new Error(\"Mode not found, camera not initialized\");\n    return this._mode;\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    super.dispose(), this.threeOrtho.removeFromParent();\n  }\n  /**\n   * Sets a new {@link NavigationMode} and disables the previous one.\n   *\n   * @param mode - The {@link NavigationMode} to set.\n   */\n  set(t) {\n    if (this.mode !== null && this.mode.id !== t) {\n      if (this.mode.set(!1), !this._navigationModes.has(t))\n        throw new Error(\"The specified mode does not exist!\");\n      this._mode = this._navigationModes.get(t), this.mode.set(!0);\n    }\n  }\n  /**\n   * Make the camera view fit all the specified meshes.\n   *\n   * @param meshes the meshes to fit. If it is not defined, it will\n   * evaluate {@link Components.meshes}.\n   * @param offset the distance to the fit object\n   */\n  async fit(t, e = 1.5) {\n    if (!this.enabled)\n      return;\n    const i = Number.MAX_VALUE, o = Number.MIN_VALUE, n = new O.Vector3(i, i, i), r = new O.Vector3(o, o, o);\n    for (const u of t) {\n      const f = new O.Box3().setFromObject(u);\n      f.min.x < n.x && (n.x = f.min.x), f.min.y < n.y && (n.y = f.min.y), f.min.z < n.z && (n.z = f.min.z), f.max.x > r.x && (r.x = f.max.x), f.max.y > r.y && (r.y = f.max.y), f.max.z > r.z && (r.z = f.max.z);\n    }\n    const a = new O.Box3(n, r), c = new O.Vector3();\n    a.getSize(c);\n    const h = new O.Vector3();\n    a.getCenter(h);\n    const d = Math.max(c.x, c.y, c.z) * e, E = new O.Sphere(h, d);\n    await this.controls.fitToSphere(E, !0);\n  }\n  /**\n   * Allows or prevents all user input.\n   *\n   * @param active - whether to enable or disable user inputs.\n   */\n  setUserInput(t) {\n    t ? this.enableUserInput() : this.disableUserInput();\n  }\n  disableUserInput() {\n    this._userInputButtons.left = this.controls.mouseButtons.left, this._userInputButtons.right = this.controls.mouseButtons.right, this._userInputButtons.middle = this.controls.mouseButtons.middle, this._userInputButtons.wheel = this.controls.mouseButtons.wheel, this.controls.mouseButtons.left = 0, this.controls.mouseButtons.right = 0, this.controls.mouseButtons.middle = 0, this.controls.mouseButtons.wheel = 0;\n  }\n  enableUserInput() {\n    Object.keys(this._userInputButtons).length !== 0 && (this.controls.mouseButtons.left = this._userInputButtons.left, this.controls.mouseButtons.right = this._userInputButtons.right, this.controls.mouseButtons.middle = this._userInputButtons.middle, this.controls.mouseButtons.wheel = this._userInputButtons.wheel);\n  }\n  newOrthoCamera() {\n    const t = window.innerWidth / window.innerHeight;\n    return new O.OrthographicCamera(\n      this._frustumSize * t / -2,\n      this._frustumSize * t / 2,\n      this._frustumSize / 2,\n      this._frustumSize / -2,\n      0.1,\n      1e3\n    );\n  }\n  setOrthoPerspCameraAspect() {\n    if (!this.currentWorld || !this.currentWorld.renderer || !this.previousSize)\n      return;\n    const t = this.currentWorld.renderer.getSize(), e = this.threeOrtho.top, i = this.threeOrtho.right, o = t.y / this.previousSize.y, n = t.x / this.previousSize.x, r = e * o, a = i * n;\n    this.threeOrtho.left = -a, this.threeOrtho.right = a, this.threeOrtho.top = r, this.threeOrtho.bottom = -r, this.threeOrtho.updateProjectionMatrix(), this.previousSize.copy(t);\n  }\n}\nconst Zr = /* @__PURE__ */ new Map([\n  [\n    x.IFCRELAGGREGATES,\n    {\n      forRelating: \"IsDecomposedBy\",\n      forRelated: \"Decomposes\"\n    }\n  ],\n  [\n    x.IFCRELASSOCIATESMATERIAL,\n    {\n      forRelating: \"AssociatedTo\",\n      forRelated: \"HasAssociations\"\n    }\n  ],\n  [\n    x.IFCRELASSOCIATESCLASSIFICATION,\n    {\n      forRelating: \"ClassificationForObjects\",\n      forRelated: \"HasAssociations\"\n    }\n  ],\n  [\n    x.IFCRELASSIGNSTOGROUP,\n    {\n      forRelating: \"IsGroupedBy\",\n      forRelated: \"HasAssignments\"\n    }\n  ],\n  [\n    x.IFCRELDEFINESBYPROPERTIES,\n    {\n      forRelated: \"IsDefinedBy\",\n      forRelating: \"DefinesOcurrence\"\n    }\n  ],\n  [\n    x.IFCRELDEFINESBYTYPE,\n    {\n      forRelated: \"IsTypedBy\",\n      forRelating: \"Types\"\n    }\n  ],\n  [\n    x.IFCRELDEFINESBYTEMPLATE,\n    {\n      forRelated: \"IsDefinedBy\",\n      forRelating: \"Defines\"\n    }\n  ],\n  [\n    x.IFCRELCONTAINEDINSPATIALSTRUCTURE,\n    {\n      forRelated: \"ContainedInStructure\",\n      forRelating: \"ContainsElements\"\n    }\n  ]\n]), Ve = class Ve extends et {\n  constructor(t) {\n    super(t);\n    /** {@link Disposable.onDisposed} */\n    I(this, \"onDisposed\", new D());\n    /**\n     * Event triggered when relations for a model have been indexed.\n     * This event provides the model's UUID and the relations map generated for that model.\n     *\n     * @property {string} modelID - The UUID of the model for which relations have been indexed.\n     * @property {RelationsMap} relationsMap - The relations map generated for the specified model.\n     * The map keys are expressIDs of entities, and the values are maps where each key is a relation type ID and its value is an array of expressIDs of entities related through that relation type.\n     */\n    I(this, \"onRelationsIndexed\", new D());\n    /**\n     * Holds the relationship mappings for each model processed by the indexer.\n     * The structure is a map where each key is a model's UUID, and the value is another map.\n     * This inner map's keys are entity expressIDs, and its values are maps where each key is an index\n     * representing a specific relation type, and the value is an array of expressIDs of entities\n     * that are related through that relation type. This structure allows for efficient querying\n     * of entity relationships within a model.\n     */\n    I(this, \"relationMaps\", {});\n    /** {@link Component.enabled} */\n    I(this, \"enabled\", !0);\n    I(this, \"_relToAttributesMap\", Zr);\n    I(this, \"_inverseAttributes\", [\n      \"IsDecomposedBy\",\n      \"Decomposes\",\n      \"AssociatedTo\",\n      \"HasAssociations\",\n      \"ClassificationForObjects\",\n      \"IsGroupedBy\",\n      \"HasAssignments\",\n      \"IsDefinedBy\",\n      \"DefinesOcurrence\",\n      \"IsTypedBy\",\n      \"Types\",\n      \"Defines\",\n      \"ContainedInStructure\",\n      \"ContainsElements\"\n    ]);\n    I(this, \"_ifcRels\", [\n      x.IFCRELAGGREGATES,\n      x.IFCRELASSOCIATESMATERIAL,\n      x.IFCRELASSOCIATESCLASSIFICATION,\n      x.IFCRELASSIGNSTOGROUP,\n      x.IFCRELDEFINESBYPROPERTIES,\n      x.IFCRELDEFINESBYTYPE,\n      x.IFCRELDEFINESBYTEMPLATE,\n      x.IFCRELCONTAINEDINSPATIALSTRUCTURE\n    ]);\n    I(this, \"onFragmentsDisposed\", (t) => {\n      delete this.relationMaps[t.groupID];\n    });\n    this.components.add(Ve.uuid, this), t.get(ht).onFragmentsDisposed.add(this.onFragmentsDisposed);\n  }\n  indexRelations(t, e, i, o) {\n    const n = Object.keys(e).find(\n      (E) => E.startsWith(\"Relating\")\n    ), r = Object.keys(e).find(\n      (E) => E.startsWith(\"Related\")\n    );\n    if (!(n && r))\n      return;\n    const a = e[n].value, c = e[r].map((E) => E.value), h = t.get(a) ?? /* @__PURE__ */ new Map(), d = this.getAttributeIndex(o);\n    d !== null && (h.set(d, c), t.set(a, h));\n    for (const E of c) {\n      const u = t.get(E) ?? /* @__PURE__ */ new Map(), f = this.getAttributeIndex(i);\n      if (!f)\n        continue;\n      const T = u.get(f) ?? [];\n      T.push(a), u.set(f, T), t.set(E, u);\n    }\n  }\n  getAttributeIndex(t) {\n    const e = this._inverseAttributes.indexOf(t);\n    return e === -1 ? null : e;\n  }\n  /**\n   * Adds a relation map to the model's relations map.\n   *\n   * @param model - The `FragmentsGroup` model to which the relation map will be added.\n   * @param relationMap - The `RelationsMap` to be added to the model's relations map.\n   *\n   * @fires onRelationsIndexed - Triggers an event with the model's UUID and the added relation map.\n   */\n  setRelationMap(t, e) {\n    this.relationMaps[t.uuid] = e, this.onRelationsIndexed.trigger({\n      modelID: t.uuid,\n      relationsMap: e\n    });\n  }\n  /**\n   * Processes a given model to index its IFC entities relations based on predefined inverse attributes.\n   * This method iterates through each specified inverse attribute, retrieves the corresponding relations,\n   * and maps them in a structured way to facilitate quick access to related entities.\n   *\n   * The process involves querying the model for each relation type associated with the inverse attributes\n   * and updating the internal relationMaps with the relationships found. This map is keyed by the model's UUID\n   * and contains a nested map where each key is an entity's expressID and its value is another map.\n   * This inner map's keys are the indices of the inverse attributes, and its values are arrays of expressIDs\n   * of entities that are related through that attribute.\n   *\n   * @param model The `FragmentsGroup` model to be processed. It must have properties loaded.\n   * @returns A promise that resolves to the relations map for the processed model. This map is a detailed\n   * representation of the relations indexed by entity expressIDs and relation types.\n   * @throws An error if the model does not have properties loaded.\n   */\n  async process(t) {\n    if (!t.hasProperties)\n      throw new Error(\"FragmentsGroup properties not found\");\n    let e = this.relationMaps[t.uuid];\n    if (e)\n      return e;\n    e = /* @__PURE__ */ new Map();\n    for (const i of this._ifcRels) {\n      const o = await t.getAllPropertiesOfType(i);\n      if (!o)\n        continue;\n      const n = this._relToAttributesMap.get(i);\n      if (!n)\n        continue;\n      const { forRelated: r, forRelating: a } = n;\n      for (const c in o) {\n        const h = o[c];\n        this.indexRelations(e, h, r, a);\n      }\n    }\n    return this.setRelationMap(t, e), e;\n  }\n  /**\n   * Processes a given model from a WebIfc API to index its IFC entities relations.\n   *\n   * @param ifcApi - The WebIfc API instance from which to retrieve the model's properties.\n   * @param modelID - The unique identifier of the model within the WebIfc API.\n   * @returns A promise that resolves to the relations map for the processed model.\n   *          This map is a detailed representation of the relations indexed by entity expressIDs and relation types.\n   */\n  async processFromWebIfc(t, e) {\n    const i = /* @__PURE__ */ new Map();\n    for (const o of this._ifcRels) {\n      const n = this._relToAttributesMap.get(o);\n      if (!n)\n        continue;\n      const { forRelated: r, forRelating: a } = n, c = t.GetLineIDsWithType(e, o);\n      for (let h = 0; h < c.size(); h++) {\n        const d = await t.properties.getItemProperties(\n          e,\n          c.get(h)\n        );\n        this.indexRelations(i, d, r, a);\n      }\n    }\n    return this.onRelationsIndexed.trigger({\n      modelID: e.toString(),\n      relationsMap: i\n    }), i;\n  }\n  /**\n   * Retrieves the relations of a specific entity within a model based on the given relation name.\n   * This method searches the indexed relation maps for the specified model and entity,\n   * returning the IDs of related entities if a match is found.\n   *\n   * @param model The `FragmentsGroup` model containing the entity.\n   * @param expressID The unique identifier of the entity within the model.\n   * @param relationName The IFC schema inverse attribute of the relation to search for (e.g., \"IsDefinedBy\", \"ContainsElements\").\n   * @returns An array of express IDs representing the related entities, or `null` if no relations are found\n   * or the specified relation name is not indexed.\n   */\n  getEntityRelations(t, e, i) {\n    const o = this.relationMaps[t.uuid];\n    if (!o)\n      throw new Error(\n        `IfcRelationsIndexer: model ${t.uuid} has no relations indexed.`\n      );\n    const n = o.get(e), r = this.getAttributeIndex(i);\n    if (n === void 0 || r === null)\n      return null;\n    const a = n.get(r);\n    return a || null;\n  }\n  /**\n   * Serializes the relations of a given relation map into a JSON string.\n   * This method iterates through the relations in the given map, organizing them into a structured object where each key is an expressID of an entity,\n   * and its value is another object mapping relation indices to arrays of related entity expressIDs.\n   * The resulting object is then serialized into a JSON string.\n   *\n   * @param relationMap - The map of relations to be serialized. The map keys are expressIDs of entities, and the values are maps where each key is a relation type ID and its value is an array of expressIDs of entities related through that relation type.\n   * @returns A JSON string representing the serialized relations of the given relation map.\n   */\n  serializeRelations(t) {\n    const e = {};\n    for (const [i, o] of t.entries()) {\n      e[i] || (e[i] = {});\n      for (const [n, r] of o.entries())\n        e[i][n] = r;\n    }\n    return JSON.stringify(e);\n  }\n  /**\n   * Serializes the relations of a specific model into a JSON string.\n   * This method iterates through the relations indexed for the given model,\n   * organizing them into a structured object where each key is an expressID of an entity,\n   * and its value is another object mapping relation indices to arrays of related entity expressIDs.\n   * The resulting object is then serialized into a JSON string.\n   *\n   * @param model The `FragmentsGroup` model whose relations are to be serialized.\n   * @returns A JSON string representing the serialized relations of the specified model.\n   * If the model has no indexed relations, `null` is returned.\n   */\n  serializeModelRelations(t) {\n    const e = this.relationMaps[t.uuid];\n    return e ? this.serializeRelations(e) : null;\n  }\n  /**\n   * Serializes all relations of every model processed by the indexer into a JSON string.\n   * This method iterates through each model's relations indexed in `relationMaps`, organizing them\n   * into a structured JSON object. Each top-level key in this object corresponds to a model's UUID,\n   * and its value is another object mapping entity expressIDs to their related entities, categorized\n   * by relation types. The structure facilitates easy access to any entity's relations across all models.\n   *\n   * @returns A JSON string representing the serialized relations of all models processed by the indexer.\n   *          If no relations have been indexed, an empty object is returned as a JSON string.\n   */\n  serializeAllRelations() {\n    const t = {};\n    for (const e in this.relationMaps) {\n      const i = this.relationMaps[e], o = {};\n      for (const [n, r] of i.entries()) {\n        o[n] || (o[n] = {});\n        for (const [a, c] of r.entries())\n          o[n][a] = c;\n      }\n      t[e] = o;\n    }\n    return JSON.stringify(t);\n  }\n  /**\n   * Converts a JSON string representing relations between entities into a structured map.\n   * This method parses the JSON string to reconstruct the relations map that indexes\n   * entity relations by their express IDs. The outer map keys are the express IDs of entities,\n   * and the values are maps where each key is a relation type ID and its value is an array\n   * of express IDs of entities related through that relation type.\n   *\n   * @param json The JSON string to be parsed into the relations map.\n   * @returns A `Map` where the key is the express ID of an entity as a number, and the value\n   * is another `Map`. This inner map's key is the relation type ID as a number, and its value\n   * is an array of express IDs (as numbers) of entities related through that relation type.\n   */\n  getRelationsMapFromJSON(t) {\n    const e = JSON.parse(t), i = /* @__PURE__ */ new Map();\n    for (const o in e) {\n      const n = e[o], r = /* @__PURE__ */ new Map();\n      for (const a in n)\n        r.set(Number(a), n[a]);\n      i.set(Number(o), r);\n    }\n    return i;\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    this.relationMaps = {}, this.components.get(ht).onFragmentsDisposed.remove(this.onFragmentsDisposed), this.onDisposed.trigger(Ve.uuid), this.onDisposed.reset();\n  }\n  /**\n   * Adds relations between an entity and other entities in a BIM model.\n   *\n   * @param model - The BIM model to which the relations will be added.\n   * @param expressID - The expressID of the entity within the model.\n   * @param relationName - The IFC schema inverse attribute of the relation to add (e.g., \"IsDefinedBy\", \"ContainsElements\").\n   * @param relIDs - The expressIDs of the related entities within the model.\n   *\n   * @throws An error if the relation name is not a valid relation name.\n   */\n  addEntityRelations(t, e, i, ...o) {\n    const n = this.getEntityRelations(\n      t,\n      e,\n      i\n    );\n    if (n)\n      n.push(...o);\n    else {\n      const r = this.getAttributeIndex(i);\n      if (!r)\n        throw new Error(\n          `IfcRelationsIndexer: ${i} is not a valid relation name.`\n        );\n      const a = this.relationMaps[t.uuid].get(e);\n      a == null || a.set(r, o);\n    }\n  }\n  /**\n   * Gets the children of the given element recursively. E.g. in a model with project - site - building - storeys - rooms, passing a storey will include all its children and the children of the rooms contained in it.\n   *\n   * @param model The BIM model whose children to get.\n   * @param expressID The expressID of the item whose children to get.\n   * @param found An optional parameter that includes a set of expressIDs where the found element IDs will be added.\n   *\n   * @returns A `Set` with the expressIDs of the found items.\n   */\n  getEntityChildren(t, e, i = /* @__PURE__ */ new Set()) {\n    if (i.add(e), this.relationMaps[t.uuid] === void 0)\n      throw new Error(\n        \"The provided model has no indices. You have to generate them first.\"\n      );\n    const n = this.getEntityRelations(\n      t,\n      e,\n      \"IsDecomposedBy\"\n    );\n    if (n)\n      for (const a of n)\n        this.getEntityChildren(t, a, i);\n    const r = this.getEntityRelations(t, e, \"ContainsElements\");\n    if (r)\n      for (const a of r)\n        this.getEntityChildren(t, a, i);\n    return i;\n  }\n};\n/**\n * A unique identifier for the component.\n * This UUID is used to register the component within the Components system.\n */\nI(Ve, \"uuid\", \"23a889ab-83b3-44a4-8bee-ead83438370b\");\nlet pe = Ve;\nconst Ns = class Ns extends et {\n  constructor(t) {\n    super(t);\n    /** {@link Disposable.onDisposed} */\n    I(this, \"onDisposed\", new D());\n    /**\n     * Event triggered when fragments are loaded.\n     */\n    I(this, \"onFragmentsLoaded\", new D());\n    /**\n     * Event triggered when fragments are disposed.\n     */\n    I(this, \"onFragmentsDisposed\", new D());\n    /**\n     * Map containing all loaded fragments.\n     * The key is the fragment's unique identifier, and the value is the fragment itself.\n     */\n    I(this, \"list\", /* @__PURE__ */ new Map());\n    /**\n     * Map containing all loaded fragment groups.\n     * The key is the group's unique identifier, and the value is the group itself.\n     */\n    I(this, \"groups\", /* @__PURE__ */ new Map());\n    I(this, \"baseCoordinationModel\", \"\");\n    I(this, \"baseCoordinationMatrix\", new O.Matrix4());\n    /** {@link Component.enabled} */\n    I(this, \"enabled\", !0);\n    I(this, \"_loader\", new eo());\n    this.components.add(Ns.uuid, this);\n  }\n  /**\n   * Getter for the meshes of all fragments in the FragmentsManager.\n   * It iterates over the fragments in the list and pushes their meshes into an array.\n   * @returns {THREE.Mesh[]} An array of THREE.Mesh objects representing the fragments.\n   */\n  get meshes() {\n    const t = [];\n    for (const [e, i] of this.list)\n      t.push(i.mesh);\n    return t;\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    for (const [t, e] of this.groups)\n      e.dispose(!0);\n    this.baseCoordinationModel = \"\", this.groups.clear(), this.list.clear(), this.onFragmentsLoaded.reset(), this.onFragmentsDisposed.reset(), this.onDisposed.trigger(), this.onDisposed.reset();\n  }\n  /**\n   * Dispose of a specific fragment group.\n   * This method removes the group from the groups map, deletes all fragments within the group from the list,\n   * disposes of the group, and triggers the onFragmentsDisposed event.\n   *\n   * @param group - The fragment group to be disposed.\n   */\n  disposeGroup(t) {\n    const { uuid: e } = t, i = [];\n    for (const o of t.items)\n      i.push(o.id), this.list.delete(o.id);\n    t.dispose(!0), this.groups.delete(t.uuid), this.onFragmentsDisposed.trigger({\n      groupID: e,\n      fragmentIDs: i\n    });\n  }\n  /**\n   * Loads a binary file that contain fragment geometry.\n   * @param data - The binary data to load.\n   * @param config - Optional configuration for loading.\n   * @param config.coordinate - Whether to apply coordinate transformation. Default is true.\n   * @param config.properties - Ifc properties to set on the loaded fragments. Not to be used when streaming.\n   * @returns The loaded FragmentsGroup.\n   */\n  load(t, e) {\n    const o = { ...{ coordinate: !0 }, ...e }, { coordinate: n, name: r, properties: a, relationsMap: c } = o, h = this._loader.import(t);\n    r && (h.name = r);\n    for (const d of h.items)\n      d.group = h, this.list.set(d.id, d);\n    return n && this.coordinate([h]), this.groups.set(h.uuid, h), a && h.setLocalProperties(a), c && this.components.get(pe).setRelationMap(h, c), this.onFragmentsLoaded.trigger(h), h;\n  }\n  /**\n   * Export the specified fragmentsgroup to binary data.\n   * @param group - the fragments group to be exported.\n   * @returns the exported data as binary buffer.\n   */\n  export(t) {\n    return this._loader.export(t);\n  }\n  /**\n   * Gets a map of model IDs to sets of express IDs for the given fragment ID map.\n   * @param fragmentIdMap - A map of fragment IDs to their corresponding express IDs.\n   * @returns A map of model IDs to sets of express IDs.\n   */\n  getModelIdMap(t) {\n    const e = {};\n    for (const i in t) {\n      const o = this.list.get(i);\n      if (!(o && o.group))\n        continue;\n      const n = o.group;\n      n.uuid in e || (e[n.uuid] = /* @__PURE__ */ new Set());\n      const r = t[i];\n      for (const a of r)\n        e[n.uuid].add(a);\n    }\n    return e;\n  }\n  /**\n   * Converts a map of model IDs to sets of express IDs to a fragment ID map.\n   * @param modelIdMap - A map of model IDs to their corresponding express IDs.\n   * @returns A fragment ID map.\n   * @remarks\n   * This method iterates through the provided model ID map, retrieves the corresponding model from the `groups` map,\n   * and then calls the `getFragmentMap` method of the model to obtain a fragment ID map for the given express IDs.\n   * The fragment ID maps are then merged into a single map and returned.\n   * If a model with a given ID is not found in the `groups` map, the method skips that model and continues with the next one.\n   */\n  modelIdToFragmentIdMap(t) {\n    let e = {};\n    for (const i in t) {\n      const o = this.groups.get(i);\n      if (!o)\n        continue;\n      const n = t[i], r = o.getFragmentMap(n);\n      e = { ...e, ...r };\n    }\n    return e;\n  }\n  /**\n   * Applies coordinate transformation to the provided models.\n   * If no models are provided, all groups are used.\n   * The first model in the list becomes the base model for coordinate transformation.\n   * All other models are then transformed to match the base model's coordinate system.\n   *\n   * @param models - The models to apply coordinate transformation to.\n   * If not provided, all models are used.\n   */\n  coordinate(t = Array.from(this.groups.values())) {\n    if (this.baseCoordinationModel.length === 0) {\n      const i = t.pop();\n      if (!i)\n        return;\n      this.baseCoordinationModel = i.uuid, this.baseCoordinationMatrix = i.coordinationMatrix.clone();\n    }\n    if (t.length)\n      for (const i of t)\n        i.coordinationMatrix.equals(this.baseCoordinationMatrix) || (i.position.set(0, 0, 0), i.rotation.set(0, 0, 0), i.scale.set(1, 1, 1), i.updateMatrix(), this.applyBaseCoordinateSystem(i, i.coordinationMatrix));\n  }\n  /**\n   * Applies the base coordinate system to the provided object.\n   *\n   * This function takes an object and its original coordinate system as input.\n   * It then inverts the original coordinate system and applies the base coordinate system\n   * to the object. This ensures that the object's position, rotation, and scale are\n   * transformed to match the base coordinate system (which is taken from the first model loaded).\n   *\n   * @param object - The object to which the base coordinate system will be applied.\n   * This should be an instance of THREE.Object3D.\n   *\n   * @param originalCoordinateSystem - The original coordinate system of the object.\n   * This should be a THREE.Matrix4 representing the object's transformation matrix.\n   */\n  applyBaseCoordinateSystem(t, e) {\n    t.applyMatrix4(e.clone().invert()), t.applyMatrix4(this.baseCoordinationMatrix);\n  }\n};\n/**\n * A unique identifier for the component.\n * This UUID is used to register the component within the Components system.\n */\nI(Ns, \"uuid\", \"fef46874-46a3-461b-8c44-2922ab77c806\");\nlet ht = Ns;\nconst At = class At extends et {\n  constructor(t) {\n    super(t);\n    /** {@link Component.enabled} */\n    I(this, \"enabled\", !0);\n    /** {@link Disposable.onDisposed} */\n    I(this, \"onDisposed\", new D());\n    I(this, \"_absoluteMin\");\n    I(this, \"_absoluteMax\");\n    I(this, \"_meshes\", []);\n    this.components.add(At.uuid, this), this._absoluteMin = At.newBound(!0), this._absoluteMax = At.newBound(!1);\n  }\n  /**\n   * A static method to calculate the dimensions of a given bounding box.\n   *\n   * @param bbox - The bounding box to calculate the dimensions for.\n   * @returns An object containing the width, height, depth, and center of the bounding box.\n   */\n  static getDimensions(t) {\n    const { min: e, max: i } = t, o = Math.abs(i.x - e.x), n = Math.abs(i.y - e.y), r = Math.abs(i.z - e.z), a = new O.Vector3();\n    return a.subVectors(i, e).divideScalar(2).add(e), { width: o, height: n, depth: r, center: a };\n  }\n  /**\n   * A static method to create a new bounding box boundary.\n   *\n   * @param positive - A boolean indicating whether to create a boundary for positive or negative values.\n   * @returns A new THREE.Vector3 representing the boundary.\n   *\n   * @remarks\n   * This method is used to create a new boundary for calculating bounding boxes.\n   * It sets the x, y, and z components of the returned vector to positive or negative infinity,\n   * depending on the value of the `positive` parameter.\n   *\n   * @example\n   * ```typescript\n   * const positiveBound = BoundingBoxer.newBound(true);\n   * console.log(positiveBound); // Output: Vector3 { x: Infinity, y: Infinity, z: Infinity }\n   *\n   * const negativeBound = BoundingBoxer.newBound(false);\n   * console.log(negativeBound); // Output: Vector3 { x: -Infinity, y: -Infinity, z: -Infinity }\n   * ```\n   */\n  static newBound(t) {\n    const e = t ? 1 : -1;\n    return new O.Vector3(\n      e * Number.MAX_VALUE,\n      e * Number.MAX_VALUE,\n      e * Number.MAX_VALUE\n    );\n  }\n  /**\n   * A static method to calculate the bounding box of a set of points.\n   *\n   * @param points - An array of THREE.Vector3 representing the points.\n   * @param min - An optional THREE.Vector3 representing the minimum bounds. If not provided, it will be calculated.\n   * @param max - An optional THREE.Vector3 representing the maximum bounds. If not provided, it will be calculated.\n   * @returns A THREE.Box3 representing the bounding box of the given points.\n   *\n   * @remarks\n   * This method calculates the bounding box of a set of points by iterating through each point and updating the minimum and maximum bounds accordingly.\n   * If the `min` or `max` parameters are provided, they will be used as the initial bounds. Otherwise, the initial bounds will be set to positive and negative infinity.\n   *\n   * @example\n   * ```typescript\n   * const points = [\n   *   new THREE.Vector3(1, 2, 3),\n   *   new THREE.Vector3(4, 5, 6),\n   *   new THREE.Vector3(7, 8, 9),\n   * ];\n   *\n   * const bbox = BoundingBoxer.getBounds(points);\n   * console.log(bbox); // Output: Box3 { min: Vector3 { x: 1, y: 2, z: 3 }, max: Vector3 { x: 7, y: 8, z: 9 } }\n   * ```\n   */\n  static getBounds(t, e, i) {\n    const o = i || this.newBound(!1), n = e || this.newBound(!0);\n    for (const r of t)\n      r.x < n.x && (n.x = r.x), r.y < n.y && (n.y = r.y), r.z < n.z && (n.z = r.z), r.x > o.x && (o.x = r.x), r.y > o.y && (o.y = r.y), r.z > o.z && (o.z = r.z);\n    return new O.Box3(e, i);\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    const t = this.components.get(zt);\n    for (const e of this._meshes)\n      t.destroy(e);\n    this._meshes = [], this.onDisposed.trigger(At.uuid), this.onDisposed.reset();\n  }\n  /**\n   * Returns the bounding box of the calculated fragments.\n   *\n   * @returns A new THREE.Box3 instance representing the bounding box.\n   *\n   * @remarks\n   * This method clones the internal minimum and maximum vectors and returns a new THREE.Box3 instance.\n   * The returned box represents the bounding box of the calculated fragments.\n   *\n   * @example\n   * ```typescript\n   * const boundingBox = boundingBoxer.get();\n   * console.log(boundingBox); // Output: Box3 { min: Vector3 { x: -10, y: -10, z: -10 }, max: Vector3 { x: 10, y: 10, z: 10 } }\n   * ```\n   */\n  get() {\n    const t = this._absoluteMin.clone(), e = this._absoluteMax.clone();\n    return new O.Box3(t, e);\n  }\n  /**\n   * Calculates and returns a sphere that encompasses the entire bounding box.\n   *\n   * @returns A new THREE.Sphere instance representing the calculated sphere.\n   *\n   * @remarks\n   * This method calculates the center and radius of a sphere that encompasses the entire bounding box.\n   * The center is calculated as the midpoint between the minimum and maximum bounds of the bounding box.\n   * The radius is calculated as the distance from the center to the minimum bound.\n   *\n   * @example\n   * ```typescript\n   * const boundingBoxer = components.get(BoundingBoxer);\n   * boundingBoxer.add(fragmentsGroup);\n   * const boundingSphere = boundingBoxer.getSphere();\n   * console.log(boundingSphere); // Output: Sphere { center: Vector3 { x: 0, y: 0, z: 0 }, radius: 10 }\n   * ```\n   */\n  getSphere() {\n    const t = this._absoluteMin.clone(), e = this._absoluteMax.clone(), i = Math.abs((e.x - t.x) / 2), o = Math.abs((e.y - t.y) / 2), n = Math.abs((e.z - t.z) / 2), r = new O.Vector3(t.x + i, t.y + o, t.z + n), a = r.distanceTo(t);\n    return new O.Sphere(r, a);\n  }\n  /**\n   * Returns a THREE.Mesh instance representing the bounding box.\n   *\n   * @returns A new THREE.Mesh instance representing the bounding box.\n   *\n   * @remarks\n   * This method calculates the dimensions of the bounding box using the `getDimensions` method.\n   * It then creates a new THREE.BoxGeometry with the calculated dimensions.\n   * A new THREE.Mesh is created using the box geometry, and it is added to the `_meshes` array.\n   * The position of the mesh is set to the center of the bounding box.\n   *\n   * @example\n   * ```typescript\n   * const boundingBoxer = components.get(BoundingBoxer);\n   * boundingBoxer.add(fragmentsGroup);\n   * const boundingBoxMesh = boundingBoxer.getMesh();\n   * scene.add(boundingBoxMesh);\n   * ```\n   */\n  getMesh() {\n    const t = new O.Box3(this._absoluteMin, this._absoluteMax), e = At.getDimensions(t), { width: i, height: o, depth: n, center: r } = e, a = new O.BoxGeometry(i, o, n), c = new O.Mesh(a);\n    return this._meshes.push(c), c.position.copy(r), c;\n  }\n  /**\n   * Resets the internal minimum and maximum vectors to positive and negative infinity, respectively.\n   * This method is used to prepare the BoundingBoxer for a new set of fragments.\n   *\n   * @remarks\n   * This method is called when a new set of fragments is added to the BoundingBoxer.\n   * It ensures that the bounding box calculations are accurate and up-to-date.\n   *\n   * @example\n   * ```typescript\n   * const boundingBoxer = components.get(BoundingBoxer);\n   * boundingBoxer.add(fragmentsGroup);\n   * // ...\n   * boundingBoxer.reset();\n   * ```\n   */\n  reset() {\n    this._absoluteMin = At.newBound(!0), this._absoluteMax = At.newBound(!1);\n  }\n  /**\n   * Adds a FragmentsGroup to the BoundingBoxer.\n   *\n   * @param group - The FragmentsGroup to add.\n   *\n   * @remarks\n   * This method iterates through each fragment in the provided FragmentsGroup,\n   * and calls the `addMesh` method for each fragment's mesh.\n   *\n   * @example\n   * ```typescript\n   * const boundingBoxer = components.get(BoundingBoxer);\n   * boundingBoxer.add(fragmentsGroup);\n   * ```\n   */\n  add(t) {\n    for (const e of t.items)\n      this.addMesh(e.mesh);\n  }\n  /**\n   * Adds a mesh to the BoundingBoxer and calculates the bounding box.\n   *\n   * @param mesh - The mesh to add. It can be an instance of THREE.InstancedMesh, THREE.Mesh, or FRAGS.CurveMesh.\n   * @param itemIDs - An optional iterable of numbers representing the item IDs.\n   *\n   * @remarks\n   * This method calculates the bounding box of the provided mesh and updates the internal minimum and maximum vectors.\n   * If the mesh is an instance of THREE.InstancedMesh, it calculates the bounding box for each instance.\n   * If the mesh is an instance of FRAGS.FragmentMesh and itemIDs are provided, it calculates the bounding box for the specified item IDs.\n   *\n   * @example\n   * ```typescript\n   * const boundingBoxer = components.get(BoundingBoxer);\n   * boundingBoxer.addMesh(mesh);\n   * ```\n   */\n  addMesh(t, e) {\n    if (!t.geometry.index)\n      return;\n    const i = At.getFragmentBounds(t);\n    t.updateMatrixWorld();\n    const o = t.matrixWorld, n = new O.Matrix4(), r = t instanceof O.InstancedMesh, a = /* @__PURE__ */ new Set();\n    if (e && t instanceof Vt.FragmentMesh)\n      for (const c of e) {\n        const h = t.fragment.getInstancesIDs(c);\n        if (h)\n          for (const d of h)\n            a.add(d);\n      }\n    else\n      a.add(0);\n    for (const c of a) {\n      const h = i.min.clone(), d = i.max.clone();\n      r && (t.getMatrixAt(c, n), h.applyMatrix4(n), d.applyMatrix4(n)), h.applyMatrix4(o), d.applyMatrix4(o), h.x < this._absoluteMin.x && (this._absoluteMin.x = h.x), h.y < this._absoluteMin.y && (this._absoluteMin.y = h.y), h.z < this._absoluteMin.z && (this._absoluteMin.z = h.z), h.x > this._absoluteMax.x && (this._absoluteMax.x = h.x), h.y > this._absoluteMax.y && (this._absoluteMax.y = h.y), h.z > this._absoluteMax.z && (this._absoluteMax.z = h.z), d.x > this._absoluteMax.x && (this._absoluteMax.x = d.x), d.y > this._absoluteMax.y && (this._absoluteMax.y = d.y), d.z > this._absoluteMax.z && (this._absoluteMax.z = d.z), d.x < this._absoluteMin.x && (this._absoluteMin.x = d.x), d.y < this._absoluteMin.y && (this._absoluteMin.y = d.y), d.z < this._absoluteMin.z && (this._absoluteMin.z = d.z);\n    }\n  }\n  /**\n   * Uses a FragmentIdMap to add its meshes to the bb calculation.\n   *\n   * This method iterates through the provided `fragmentIdMap`, retrieves the corresponding fragment from the `FragmentsManager`,\n   * and then calls the `addMesh` method for each fragment's mesh, passing the expression IDs as the second parameter.\n   *\n   * @param fragmentIdMap - A mapping of fragment IDs to their corresponding expression IDs.\n   *\n   * @remarks\n   * This method is used to add a mapping of fragment IDs to their corresponding expression IDs.\n   * It ensures that the bounding box calculations are accurate and up-to-date by updating the internal minimum and maximum vectors.\n   *\n   * @example\n   * ```typescript\n   * const boundingBoxer = components.get(BoundingBoxer);\n   * const fragmentIdMap: FRAGS.FragmentIdMap = {\n   *   '5991fa75-2eef-4825-90b3-85177f51a9c9': [123, 245, 389],\n   *   '3469077e-39bf-4fc9-b3e6-4a1d78ad52b0': [454, 587, 612],\n   * };\n   * boundingBoxer.addFragmentIdMap(fragmentIdMap);\n   * ```\n   */\n  addFragmentIdMap(t) {\n    const e = this.components.get(ht);\n    for (const i in t) {\n      const o = e.list.get(i);\n      if (!o)\n        continue;\n      const n = t[i];\n      this.addMesh(o.mesh, n);\n    }\n  }\n  static getFragmentBounds(t) {\n    const e = t.geometry.attributes.position, i = Number.MAX_VALUE, o = -i, n = new O.Vector3(i, i, i), r = new O.Vector3(o, o, o);\n    if (!t.geometry.index)\n      throw new Error(\"Geometry must be indexed!\");\n    const a = Array.from(t.geometry.index.array);\n    for (let c = 0; c < a.length; c++) {\n      if (c % 3 === 0 && a[c] === 0 && a[c + 1] === 0 && a[c + 2] === 0) {\n        c += 2;\n        continue;\n      }\n      const h = a[c], d = e.getX(h), E = e.getY(h), u = e.getZ(h);\n      d < n.x && (n.x = d), E < n.y && (n.y = E), u < n.z && (n.z = u), d > r.x && (r.x = d), E > r.y && (r.y = E), u > r.z && (r.z = u);\n    }\n    return new O.Box3(n, r);\n  }\n};\nI(At, \"uuid\", \"d1444724-dba6-4cdd-a0c7-68ee1450d166\");\nlet Fn = At;\nconst vn = /* @__PURE__ */ new Set([\n  1123145078,\n  574549367,\n  1675464909,\n  2059837836,\n  3798115385,\n  32440307,\n  3125803723,\n  3207858831,\n  2740243338,\n  2624227202,\n  4240577450,\n  3615266464,\n  3724593414,\n  220341763,\n  477187591,\n  1878645084,\n  1300840506,\n  3303107099,\n  1607154358,\n  1878645084,\n  846575682,\n  1351298697,\n  2417041796,\n  3049322572,\n  3331915920,\n  1416205885,\n  776857604,\n  3285139300,\n  3958052878,\n  2827736869,\n  2732653382,\n  673634403,\n  3448662350,\n  4142052618,\n  2924175390,\n  803316827,\n  2556980723,\n  1809719519,\n  2205249479,\n  807026263,\n  3737207727,\n  1660063152,\n  2347385850,\n  2705031697,\n  3732776249,\n  2485617015,\n  2611217952,\n  1704287377,\n  2937912522,\n  2770003689,\n  1281925730,\n  1484403080,\n  3448662350,\n  4142052618,\n  3800577675,\n  4006246654,\n  3590301190,\n  1383045692,\n  2775532180,\n  2047409740,\n  370225590,\n  3593883385,\n  2665983363,\n  4124623270,\n  812098782,\n  3649129432,\n  987898635,\n  1105321065,\n  3510044353,\n  1635779807,\n  2603310189,\n  3406155212,\n  1310608509,\n  4261334040,\n  2736907675,\n  3649129432,\n  1136057603,\n  1260505505,\n  4182860854,\n  2713105998,\n  2898889636,\n  59481748,\n  3749851601,\n  3486308946,\n  3150382593,\n  1062206242,\n  3264961684,\n  15328376,\n  1485152156,\n  370225590,\n  1981873012,\n  2859738748,\n  45288368,\n  2614616156,\n  2732653382,\n  775493141,\n  2147822146,\n  2601014836,\n  2629017746,\n  1186437898,\n  2367409068,\n  1213902940,\n  3632507154,\n  3900360178,\n  476780140,\n  1472233963,\n  2804161546,\n  3008276851,\n  738692330,\n  374418227,\n  315944413,\n  3905492369,\n  3570813810,\n  2571569899,\n  178912537,\n  2294589976,\n  1437953363,\n  2133299955,\n  572779678,\n  3092502836,\n  388784114,\n  2624227202,\n  1425443689,\n  3057273783,\n  2347385850,\n  1682466193,\n  2519244187,\n  2839578677,\n  3958567839,\n  2513912981,\n  2830218821,\n  427810014\n]), Ps = class Ps extends et {\n  constructor(t) {\n    super(t);\n    /** {@link Component.enabled} */\n    I(this, \"enabled\", !0);\n    t.add(Ps.uuid, this);\n  }\n  /**\n   * Exports all the properties of an IFC into an array of JS objects.\n   * @param webIfc The instance of [web-ifc](https://github.com/ThatOpen/engine_web-ifc) to use.\n   * @param modelID ID of the IFC model whose properties to extract.\n   * @param indirect whether to get the indirect relationships as well.\n   * @param recursiveSpatial whether to get the properties of spatial items recursively\n   * to make the location data available (e.g. absolute position of building).\n   */\n  async export(t, e, i = !1, o = !0) {\n    const n = {}, r = new Set(t.GetIfcEntityList(e)), a = /* @__PURE__ */ new Set([\n      x.IFCPROJECT,\n      x.IFCSITE,\n      x.IFCBUILDING,\n      x.IFCBUILDINGSTOREY,\n      x.IFCSPACE\n    ]);\n    for (const c of a)\n      r.add(c);\n    for (const c of r) {\n      if (vn.has(c))\n        continue;\n      const h = a.has(c) && o, d = t.GetLineIDsWithType(e, c);\n      for (const E of d) {\n        const u = t.GetLine(0, E, h, i);\n        n[u.expressID] = u;\n      }\n    }\n    return n;\n  }\n};\n/**\n * A unique identifier for the component.\n * This UUID is used to register the component within the Components system.\n */\nI(Ps, \"uuid\", \"b32c4332-cd67-436e-ba7f-196646c7a635\");\nlet mi = Ps;\nconst Qr = {\n  103090709: \"IFCPROJECT\",\n  4097777520: \"IFCSITE\",\n  4031249490: \"IFCBUILDING\",\n  3124254112: \"IFCBUILDINGSTOREY\",\n  3856911033: \"IFCSPACE\",\n  1674181508: \"IFCANNOTATION\",\n  25142252: \"IFCCONTROLLER\",\n  32344328: \"IFCBOILER\",\n  76236018: \"IFCLAMP\",\n  90941305: \"IFCPUMP\",\n  177149247: \"IFCAIRTERMINALBOX\",\n  182646315: \"IFCFLOWINSTRUMENT\",\n  263784265: \"IFCFURNISHINGELEMENT\",\n  264262732: \"IFCELECTRICGENERATOR\",\n  277319702: \"IFCAUDIOVISUALAPPLIANCE\",\n  310824031: \"IFCPIPEFITTING\",\n  331165859: \"IFCSTAIR\",\n  342316401: \"IFCDUCTFITTING\",\n  377706215: \"IFCMECHANICALFASTENER\",\n  395920057: \"IFCDOOR\",\n  402227799: \"IFCELECTRICMOTOR\",\n  413509423: \"IFCSYSTEMFURNITUREELEMENT\",\n  484807127: \"IFCEVAPORATOR\",\n  486154966: \"IFCWINDOWSTANDARDCASE\",\n  629592764: \"IFCLIGHTFIXTURE\",\n  630975310: \"IFCUNITARYCONTROLELEMENT\",\n  635142910: \"IFCCABLECARRIERFITTING\",\n  639361253: \"IFCCOIL\",\n  647756555: \"IFCFASTENER\",\n  707683696: \"IFCFLOWSTORAGEDEVICE\",\n  738039164: \"IFCPROTECTIVEDEVICE\",\n  753842376: \"IFCBEAM\",\n  812556717: \"IFCTANK\",\n  819412036: \"IFCFILTER\",\n  843113511: \"IFCCOLUMN\",\n  862014818: \"IFCELECTRICDISTRIBUTIONBOARD\",\n  900683007: \"IFCFOOTING\",\n  905975707: \"IFCCOLUMNSTANDARDCASE\",\n  926996030: \"IFCVOIDINGFEATURE\",\n  979691226: \"IFCREINFORCINGBAR\",\n  987401354: \"IFCFLOWSEGMENT\",\n  1003880860: \"IFCELECTRICTIMECONTROL\",\n  1051757585: \"IFCCABLEFITTING\",\n  1052013943: \"IFCDISTRIBUTIONCHAMBERELEMENT\",\n  1062813311: \"IFCDISTRIBUTIONCONTROLELEMENT\",\n  1073191201: \"IFCMEMBER\",\n  1095909175: \"IFCBUILDINGELEMENTPROXY\",\n  1156407060: \"IFCPLATESTANDARDCASE\",\n  1162798199: \"IFCSWITCHINGDEVICE\",\n  1329646415: \"IFCSHADINGDEVICE\",\n  1335981549: \"IFCDISCRETEACCESSORY\",\n  1360408905: \"IFCDUCTSILENCER\",\n  1404847402: \"IFCSTACKTERMINAL\",\n  1426591983: \"IFCFIRESUPPRESSIONTERMINAL\",\n  1437502449: \"IFCMEDICALDEVICE\",\n  1509553395: \"IFCFURNITURE\",\n  1529196076: \"IFCSLAB\",\n  1620046519: \"IFCTRANSPORTELEMENT\",\n  1634111441: \"IFCAIRTERMINAL\",\n  1658829314: \"IFCENERGYCONVERSIONDEVICE\",\n  1677625105: \"IFCCIVILELEMENT\",\n  1687234759: \"IFCPILE\",\n  1904799276: \"IFCELECTRICAPPLIANCE\",\n  1911478936: \"IFCMEMBERSTANDARDCASE\",\n  1945004755: \"IFCDISTRIBUTIONELEMENT\",\n  1973544240: \"IFCCOVERING\",\n  1999602285: \"IFCSPACEHEATER\",\n  2016517767: \"IFCROOF\",\n  2056796094: \"IFCAIRTOAIRHEATRECOVERY\",\n  2058353004: \"IFCFLOWCONTROLLER\",\n  2068733104: \"IFCHUMIDIFIER\",\n  2176052936: \"IFCJUNCTIONBOX\",\n  2188021234: \"IFCFLOWMETER\",\n  2223149337: \"IFCFLOWTERMINAL\",\n  2262370178: \"IFCRAILING\",\n  2272882330: \"IFCCONDENSER\",\n  2295281155: \"IFCPROTECTIVEDEVICETRIPPINGUNIT\",\n  2320036040: \"IFCREINFORCINGMESH\",\n  2347447852: \"IFCTENDONANCHOR\",\n  2391383451: \"IFCVIBRATIONISOLATOR\",\n  2391406946: \"IFCWALL\",\n  2474470126: \"IFCMOTORCONNECTION\",\n  2769231204: \"IFCVIRTUALELEMENT\",\n  2814081492: \"IFCENGINE\",\n  2906023776: \"IFCBEAMSTANDARDCASE\",\n  2938176219: \"IFCBURNER\",\n  2979338954: \"IFCBUILDINGELEMENTPART\",\n  3024970846: \"IFCRAMP\",\n  3026737570: \"IFCTUBEBUNDLE\",\n  3027962421: \"IFCSLABSTANDARDCASE\",\n  3040386961: \"IFCDISTRIBUTIONFLOWELEMENT\",\n  3053780830: \"IFCSANITARYTERMINAL\",\n  3079942009: \"IFCOPENINGSTANDARDCASE\",\n  3087945054: \"IFCALARM\",\n  3101698114: \"IFCSURFACEFEATURE\",\n  3127900445: \"IFCSLABELEMENTEDCASE\",\n  3132237377: \"IFCFLOWMOVINGDEVICE\",\n  3171933400: \"IFCPLATE\",\n  3221913625: \"IFCCOMMUNICATIONSAPPLIANCE\",\n  3242481149: \"IFCDOORSTANDARDCASE\",\n  3283111854: \"IFCRAMPFLIGHT\",\n  3296154744: \"IFCCHIMNEY\",\n  3304561284: \"IFCWINDOW\",\n  3310460725: \"IFCELECTRICFLOWSTORAGEDEVICE\",\n  3319311131: \"IFCHEATEXCHANGER\",\n  3415622556: \"IFCFAN\",\n  3420628829: \"IFCSOLARDEVICE\",\n  3493046030: \"IFCGEOGRAPHICELEMENT\",\n  3495092785: \"IFCCURTAINWALL\",\n  3508470533: \"IFCFLOWTREATMENTDEVICE\",\n  3512223829: \"IFCWALLSTANDARDCASE\",\n  3518393246: \"IFCDUCTSEGMENT\",\n  3571504051: \"IFCCOMPRESSOR\",\n  3588315303: \"IFCOPENINGELEMENT\",\n  3612865200: \"IFCPIPESEGMENT\",\n  3640358203: \"IFCCOOLINGTOWER\",\n  3651124850: \"IFCPROJECTIONELEMENT\",\n  3694346114: \"IFCOUTLET\",\n  3747195512: \"IFCEVAPORATIVECOOLER\",\n  3758799889: \"IFCCABLECARRIERSEGMENT\",\n  3824725483: \"IFCTENDON\",\n  3825984169: \"IFCTRANSFORMER\",\n  3902619387: \"IFCCHILLER\",\n  4074379575: \"IFCDAMPER\",\n  4086658281: \"IFCSENSOR\",\n  4123344466: \"IFCELEMENTASSEMBLY\",\n  4136498852: \"IFCCOOLEDBEAM\",\n  4156078855: \"IFCWALLELEMENTEDCASE\",\n  4175244083: \"IFCINTERCEPTOR\",\n  4207607924: \"IFCVALVE\",\n  4217484030: \"IFCCABLESEGMENT\",\n  4237592921: \"IFCWASTETERMINAL\",\n  4252922144: \"IFCSTAIRFLIGHT\",\n  4278956645: \"IFCFLOWFITTING\",\n  4288193352: \"IFCACTUATOR\",\n  4292641817: \"IFCUNITARYEQUIPMENT\",\n  3009204131: \"IFCGRID\"\n};\nclass ra {\n  getAll(s, t) {\n    const e = {}, i = Object.keys(Qr).map((o) => parseInt(o, 10));\n    for (let o = 0; o < i.length; o++) {\n      const n = i[o], r = s.GetLineIDsWithType(t, n), a = r.size();\n      for (let c = 0; c < a; c++)\n        e[r.get(c)] = n;\n    }\n    return e;\n  }\n}\nconst Bn = {\n  950732822: \"IFCURIREFERENCE\",\n  4075327185: \"IFCTIME\",\n  1209108979: \"IFCTEMPERATURERATEOFCHANGEMEASURE\",\n  3457685358: \"IFCSOUNDPRESSURELEVELMEASURE\",\n  4157543285: \"IFCSOUNDPOWERLEVELMEASURE\",\n  2798247006: \"IFCPROPERTYSETDEFINITIONSET\",\n  1790229001: \"IFCPOSITIVEINTEGER\",\n  525895558: \"IFCNONNEGATIVELENGTHMEASURE\",\n  1774176899: \"IFCLINEINDEX\",\n  1275358634: \"IFCLANGUAGEID\",\n  2541165894: \"IFCDURATION\",\n  3701338814: \"IFCDAYINWEEKNUMBER\",\n  2195413836: \"IFCDATETIME\",\n  937566702: \"IFCDATE\",\n  1683019596: \"IFCCARDINALPOINTREFERENCE\",\n  2314439260: \"IFCBINARY\",\n  1500781891: \"IFCAREADENSITYMEASURE\",\n  3683503648: \"IFCARCINDEX\",\n  4065007721: \"IFCYEARNUMBER\",\n  1718600412: \"IFCWARPINGMOMENTMEASURE\",\n  51269191: \"IFCWARPINGCONSTANTMEASURE\",\n  2593997549: \"IFCVOLUMETRICFLOWRATEMEASURE\",\n  3458127941: \"IFCVOLUMEMEASURE\",\n  3345633955: \"IFCVAPORPERMEABILITYMEASURE\",\n  1278329552: \"IFCTORQUEMEASURE\",\n  2591213694: \"IFCTIMESTAMP\",\n  2726807636: \"IFCTIMEMEASURE\",\n  743184107: \"IFCTHERMODYNAMICTEMPERATUREMEASURE\",\n  2016195849: \"IFCTHERMALTRANSMITTANCEMEASURE\",\n  857959152: \"IFCTHERMALRESISTANCEMEASURE\",\n  2281867870: \"IFCTHERMALEXPANSIONCOEFFICIENTMEASURE\",\n  2645777649: \"IFCTHERMALCONDUCTIVITYMEASURE\",\n  232962298: \"IFCTHERMALADMITTANCEMEASURE\",\n  296282323: \"IFCTEXTTRANSFORMATION\",\n  603696268: \"IFCTEXTFONTNAME\",\n  3490877962: \"IFCTEXTDECORATION\",\n  1460886941: \"IFCTEXTALIGNMENT\",\n  2801250643: \"IFCTEXT\",\n  58845555: \"IFCTEMPERATUREGRADIENTMEASURE\",\n  361837227: \"IFCSPECULARROUGHNESS\",\n  2757832317: \"IFCSPECULAREXPONENT\",\n  3477203348: \"IFCSPECIFICHEATCAPACITYMEASURE\",\n  993287707: \"IFCSOUNDPRESSUREMEASURE\",\n  846465480: \"IFCSOUNDPOWERMEASURE\",\n  3471399674: \"IFCSOLIDANGLEMEASURE\",\n  408310005: \"IFCSHEARMODULUSMEASURE\",\n  2190458107: \"IFCSECTIONALAREAINTEGRALMEASURE\",\n  3467162246: \"IFCSECTIONMODULUSMEASURE\",\n  2766185779: \"IFCSECONDINMINUTE\",\n  3211557302: \"IFCROTATIONALSTIFFNESSMEASURE\",\n  1755127002: \"IFCROTATIONALMASSMEASURE\",\n  2133746277: \"IFCROTATIONALFREQUENCYMEASURE\",\n  200335297: \"IFCREAL\",\n  96294661: \"IFCRATIOMEASURE\",\n  3972513137: \"IFCRADIOACTIVITYMEASURE\",\n  3665567075: \"IFCPRESSUREMEASURE\",\n  2169031380: \"IFCPRESENTABLETEXT\",\n  1364037233: \"IFCPOWERMEASURE\",\n  1245737093: \"IFCPOSITIVERATIOMEASURE\",\n  3054510233: \"IFCPOSITIVEPLANEANGLEMEASURE\",\n  2815919920: \"IFCPOSITIVELENGTHMEASURE\",\n  4042175685: \"IFCPLANEANGLEMEASURE\",\n  2642773653: \"IFCPLANARFORCEMEASURE\",\n  2260317790: \"IFCPARAMETERVALUE\",\n  929793134: \"IFCPHMEASURE\",\n  2395907400: \"IFCNUMERICMEASURE\",\n  2095195183: \"IFCNORMALISEDRATIOMEASURE\",\n  765770214: \"IFCMONTHINYEARNUMBER\",\n  2615040989: \"IFCMONETARYMEASURE\",\n  3114022597: \"IFCMOMENTOFINERTIAMEASURE\",\n  1648970520: \"IFCMOLECULARWEIGHTMEASURE\",\n  3177669450: \"IFCMOISTUREDIFFUSIVITYMEASURE\",\n  1753493141: \"IFCMODULUSOFSUBGRADEREACTIONMEASURE\",\n  1052454078: \"IFCMODULUSOFROTATIONALSUBGRADEREACTIONMEASURE\",\n  2173214787: \"IFCMODULUSOFLINEARSUBGRADEREACTIONMEASURE\",\n  3341486342: \"IFCMODULUSOFELASTICITYMEASURE\",\n  102610177: \"IFCMINUTEINHOUR\",\n  3531705166: \"IFCMASSPERLENGTHMEASURE\",\n  3124614049: \"IFCMASSMEASURE\",\n  4017473158: \"IFCMASSFLOWRATEMEASURE\",\n  1477762836: \"IFCMASSDENSITYMEASURE\",\n  2486716878: \"IFCMAGNETICFLUXMEASURE\",\n  286949696: \"IFCMAGNETICFLUXDENSITYMEASURE\",\n  151039812: \"IFCLUMINOUSINTENSITYMEASURE\",\n  2755797622: \"IFCLUMINOUSINTENSITYDISTRIBUTIONMEASURE\",\n  2095003142: \"IFCLUMINOUSFLUXMEASURE\",\n  503418787: \"IFCLOGICAL\",\n  3086160713: \"IFCLINEARVELOCITYMEASURE\",\n  1307019551: \"IFCLINEARSTIFFNESSMEASURE\",\n  2128979029: \"IFCLINEARMOMENTMEASURE\",\n  191860431: \"IFCLINEARFORCEMEASURE\",\n  1243674935: \"IFCLENGTHMEASURE\",\n  3258342251: \"IFCLABEL\",\n  2054016361: \"IFCKINEMATICVISCOSITYMEASURE\",\n  3192672207: \"IFCISOTHERMALMOISTURECAPACITYMEASURE\",\n  3686016028: \"IFCIONCONCENTRATIONMEASURE\",\n  3809634241: \"IFCINTEGERCOUNTRATEMEASURE\",\n  1939436016: \"IFCINTEGER\",\n  2679005408: \"IFCINDUCTANCEMEASURE\",\n  3358199106: \"IFCILLUMINANCEMEASURE\",\n  983778844: \"IFCIDENTIFIER\",\n  2589826445: \"IFCHOURINDAY\",\n  1158859006: \"IFCHEATINGVALUEMEASURE\",\n  3113092358: \"IFCHEATFLUXDENSITYMEASURE\",\n  3064340077: \"IFCGLOBALLYUNIQUEID\",\n  3044325142: \"IFCFREQUENCYMEASURE\",\n  1361398929: \"IFCFORCEMEASURE\",\n  2590844177: \"IFCFONTWEIGHT\",\n  2715512545: \"IFCFONTVARIANT\",\n  1102727119: \"IFCFONTSTYLE\",\n  2078135608: \"IFCENERGYMEASURE\",\n  2506197118: \"IFCELECTRICVOLTAGEMEASURE\",\n  2951915441: \"IFCELECTRICRESISTANCEMEASURE\",\n  3790457270: \"IFCELECTRICCURRENTMEASURE\",\n  2093906313: \"IFCELECTRICCONDUCTANCEMEASURE\",\n  3818826038: \"IFCELECTRICCHARGEMEASURE\",\n  1827137117: \"IFCELECTRICCAPACITANCEMEASURE\",\n  69416015: \"IFCDYNAMICVISCOSITYMEASURE\",\n  524656162: \"IFCDOSEEQUIVALENTMEASURE\",\n  4134073009: \"IFCDIMENSIONCOUNT\",\n  1514641115: \"IFCDESCRIPTIVEMEASURE\",\n  300323983: \"IFCDAYLIGHTSAVINGHOUR\",\n  86635668: \"IFCDAYINMONTHNUMBER\",\n  94842927: \"IFCCURVATUREMEASURE\",\n  1778710042: \"IFCCOUNTMEASURE\",\n  3238673880: \"IFCCONTEXTDEPENDENTMEASURE\",\n  3812528620: \"IFCCOMPOUNDPLANEANGLEMEASURE\",\n  2991860651: \"IFCCOMPLEXNUMBER\",\n  1867003952: \"IFCBOXALIGNMENT\",\n  2735952531: \"IFCBOOLEAN\",\n  2650437152: \"IFCAREAMEASURE\",\n  632304761: \"IFCANGULARVELOCITYMEASURE\",\n  360377573: \"IFCAMOUNTOFSUBSTANCEMEASURE\",\n  4182062534: \"IFCACCELERATIONMEASURE\",\n  3699917729: \"IFCABSORBEDDOSEMEASURE\",\n  1971632696: \"IFCGEOSLICE\",\n  2680139844: \"IFCGEOMODEL\",\n  24726584: \"IFCELECTRICFLOWTREATMENTDEVICE\",\n  3693000487: \"IFCDISTRIBUTIONBOARD\",\n  3460952963: \"IFCCONVEYORSEGMENT\",\n  3999819293: \"IFCCAISSONFOUNDATION\",\n  3314249567: \"IFCBOREHOLE\",\n  4196446775: \"IFCBEARING\",\n  325726236: \"IFCALIGNMENT\",\n  3425753595: \"IFCTRACKELEMENT\",\n  991950508: \"IFCSIGNAL\",\n  3798194928: \"IFCREINFORCEDSOIL\",\n  3290496277: \"IFCRAIL\",\n  1383356374: \"IFCPAVEMENT\",\n  2182337498: \"IFCNAVIGATIONELEMENT\",\n  234836483: \"IFCMOORINGDEVICE\",\n  2078563270: \"IFCMOBILETELECOMMUNICATIONSAPPLIANCE\",\n  1638804497: \"IFCLIQUIDTERMINAL\",\n  1154579445: \"IFCLINEARPOSITIONINGELEMENT\",\n  2696325953: \"IFCKERB\",\n  2713699986: \"IFCGEOTECHNICALASSEMBLY\",\n  2142170206: \"IFCELECTRICFLOWTREATMENTDEVICETYPE\",\n  3376911765: \"IFCEARTHWORKSFILL\",\n  1077100507: \"IFCEARTHWORKSELEMENT\",\n  3071239417: \"IFCEARTHWORKSCUT\",\n  479945903: \"IFCDISTRIBUTIONBOARDTYPE\",\n  3426335179: \"IFCDEEPFOUNDATION\",\n  1502416096: \"IFCCOURSE\",\n  2940368186: \"IFCCONVEYORSEGMENTTYPE\",\n  3203706013: \"IFCCAISSONFOUNDATIONTYPE\",\n  3862327254: \"IFCBUILTSYSTEM\",\n  1876633798: \"IFCBUILTELEMENT\",\n  963979645: \"IFCBRIDGEPART\",\n  644574406: \"IFCBRIDGE\",\n  3649138523: \"IFCBEARINGTYPE\",\n  1662888072: \"IFCALIGNMENTVERTICAL\",\n  317615605: \"IFCALIGNMENTSEGMENT\",\n  1545765605: \"IFCALIGNMENTHORIZONTAL\",\n  4266260250: \"IFCALIGNMENTCANT\",\n  3956297820: \"IFCVIBRATIONDAMPERTYPE\",\n  1530820697: \"IFCVIBRATIONDAMPER\",\n  840318589: \"IFCVEHICLE\",\n  1953115116: \"IFCTRANSPORTATIONDEVICE\",\n  618700268: \"IFCTRACKELEMENTTYPE\",\n  2281632017: \"IFCTENDONCONDUITTYPE\",\n  3663046924: \"IFCTENDONCONDUIT\",\n  42703149: \"IFCSINESPIRAL\",\n  1894708472: \"IFCSIGNALTYPE\",\n  3599934289: \"IFCSIGNTYPE\",\n  33720170: \"IFCSIGN\",\n  1027922057: \"IFCSEVENTHORDERPOLYNOMIALSPIRAL\",\n  544395925: \"IFCSEGMENTEDREFERENCECURVE\",\n  3649235739: \"IFCSECONDORDERPOLYNOMIALSPIRAL\",\n  550521510: \"IFCROADPART\",\n  146592293: \"IFCROAD\",\n  3818125796: \"IFCRELADHERESTOELEMENT\",\n  4021432810: \"IFCREFERENT\",\n  1891881377: \"IFCRAILWAYPART\",\n  3992365140: \"IFCRAILWAY\",\n  1763565496: \"IFCRAILTYPE\",\n  1946335990: \"IFCPOSITIONINGELEMENT\",\n  514975943: \"IFCPAVEMENTTYPE\",\n  506776471: \"IFCNAVIGATIONELEMENTTYPE\",\n  710110818: \"IFCMOORINGDEVICETYPE\",\n  1950438474: \"IFCMOBILETELECOMMUNICATIONSAPPLIANCETYPE\",\n  976884017: \"IFCMARINEPART\",\n  525669439: \"IFCMARINEFACILITY\",\n  1770583370: \"IFCLIQUIDTERMINALTYPE\",\n  2176059722: \"IFCLINEARELEMENT\",\n  679976338: \"IFCKERBTYPE\",\n  3948183225: \"IFCIMPACTPROTECTIONDEVICETYPE\",\n  2568555532: \"IFCIMPACTPROTECTIONDEVICE\",\n  2898700619: \"IFCGRADIENTCURVE\",\n  1594536857: \"IFCGEOTECHNICALSTRATUM\",\n  4230923436: \"IFCGEOTECHNICALELEMENT\",\n  4228831410: \"IFCFACILITYPARTCOMMON\",\n  1310830890: \"IFCFACILITYPART\",\n  24185140: \"IFCFACILITY\",\n  4234616927: \"IFCDIRECTRIXDERIVEDREFERENCESWEPTAREASOLID\",\n  1306400036: \"IFCDEEPFOUNDATIONTYPE\",\n  4189326743: \"IFCCOURSETYPE\",\n  2000195564: \"IFCCOSINESPIRAL\",\n  3497074424: \"IFCCLOTHOID\",\n  1626504194: \"IFCBUILTELEMENTTYPE\",\n  3651464721: \"IFCVEHICLETYPE\",\n  1229763772: \"IFCTRIANGULATEDIRREGULARNETWORK\",\n  3665877780: \"IFCTRANSPORTATIONDEVICETYPE\",\n  782932809: \"IFCTHIRDORDERPOLYNOMIALSPIRAL\",\n  2735484536: \"IFCSPIRAL\",\n  1356537516: \"IFCSECTIONEDSURFACE\",\n  1290935644: \"IFCSECTIONEDSOLIDHORIZONTAL\",\n  1862484736: \"IFCSECTIONEDSOLID\",\n  1441486842: \"IFCRELPOSITIONS\",\n  1033248425: \"IFCRELASSOCIATESPROFILEDEF\",\n  3381221214: \"IFCPOLYNOMIALCURVE\",\n  2485787929: \"IFCOFFSETCURVEBYDISTANCES\",\n  590820931: \"IFCOFFSETCURVE\",\n  3465909080: \"IFCINDEXEDPOLYGONALTEXTUREMAP\",\n  593015953: \"IFCDIRECTRIXCURVESWEPTAREASOLID\",\n  4212018352: \"IFCCURVESEGMENT\",\n  3425423356: \"IFCAXIS2PLACEMENTLINEAR\",\n  823603102: \"IFCSEGMENT\",\n  2165702409: \"IFCPOINTBYDISTANCEEXPRESSION\",\n  182550632: \"IFCOPENCROSSPROFILEDEF\",\n  388784114: \"IFCLINEARPLACEMENT\",\n  536804194: \"IFCALIGNMENTHORIZONTALSEGMENT\",\n  3752311538: \"IFCALIGNMENTCANTSEGMENT\",\n  1010789467: \"IFCTEXTURECOORDINATEINDICESWITHVOIDS\",\n  222769930: \"IFCTEXTURECOORDINATEINDICES\",\n  2691318326: \"IFCQUANTITYNUMBER\",\n  3633395639: \"IFCALIGNMENTVERTICALSEGMENT\",\n  2879124712: \"IFCALIGNMENTPARAMETERSEGMENT\",\n  25142252: \"IFCCONTROLLER\",\n  3087945054: \"IFCALARM\",\n  4288193352: \"IFCACTUATOR\",\n  630975310: \"IFCUNITARYCONTROLELEMENT\",\n  4086658281: \"IFCSENSOR\",\n  2295281155: \"IFCPROTECTIVEDEVICETRIPPINGUNIT\",\n  182646315: \"IFCFLOWINSTRUMENT\",\n  1426591983: \"IFCFIRESUPPRESSIONTERMINAL\",\n  819412036: \"IFCFILTER\",\n  3415622556: \"IFCFAN\",\n  1003880860: \"IFCELECTRICTIMECONTROL\",\n  402227799: \"IFCELECTRICMOTOR\",\n  264262732: \"IFCELECTRICGENERATOR\",\n  3310460725: \"IFCELECTRICFLOWSTORAGEDEVICE\",\n  862014818: \"IFCELECTRICDISTRIBUTIONBOARD\",\n  1904799276: \"IFCELECTRICAPPLIANCE\",\n  1360408905: \"IFCDUCTSILENCER\",\n  3518393246: \"IFCDUCTSEGMENT\",\n  342316401: \"IFCDUCTFITTING\",\n  562808652: \"IFCDISTRIBUTIONCIRCUIT\",\n  4074379575: \"IFCDAMPER\",\n  3640358203: \"IFCCOOLINGTOWER\",\n  4136498852: \"IFCCOOLEDBEAM\",\n  2272882330: \"IFCCONDENSER\",\n  3571504051: \"IFCCOMPRESSOR\",\n  3221913625: \"IFCCOMMUNICATIONSAPPLIANCE\",\n  639361253: \"IFCCOIL\",\n  3902619387: \"IFCCHILLER\",\n  4217484030: \"IFCCABLESEGMENT\",\n  1051757585: \"IFCCABLEFITTING\",\n  3758799889: \"IFCCABLECARRIERSEGMENT\",\n  635142910: \"IFCCABLECARRIERFITTING\",\n  2938176219: \"IFCBURNER\",\n  32344328: \"IFCBOILER\",\n  2906023776: \"IFCBEAMSTANDARDCASE\",\n  277319702: \"IFCAUDIOVISUALAPPLIANCE\",\n  2056796094: \"IFCAIRTOAIRHEATRECOVERY\",\n  177149247: \"IFCAIRTERMINALBOX\",\n  1634111441: \"IFCAIRTERMINAL\",\n  486154966: \"IFCWINDOWSTANDARDCASE\",\n  4237592921: \"IFCWASTETERMINAL\",\n  4156078855: \"IFCWALLELEMENTEDCASE\",\n  4207607924: \"IFCVALVE\",\n  4292641817: \"IFCUNITARYEQUIPMENT\",\n  3179687236: \"IFCUNITARYCONTROLELEMENTTYPE\",\n  3026737570: \"IFCTUBEBUNDLE\",\n  3825984169: \"IFCTRANSFORMER\",\n  812556717: \"IFCTANK\",\n  1162798199: \"IFCSWITCHINGDEVICE\",\n  385403989: \"IFCSTRUCTURALLOADCASE\",\n  1404847402: \"IFCSTACKTERMINAL\",\n  1999602285: \"IFCSPACEHEATER\",\n  3420628829: \"IFCSOLARDEVICE\",\n  3027962421: \"IFCSLABSTANDARDCASE\",\n  3127900445: \"IFCSLABELEMENTEDCASE\",\n  1329646415: \"IFCSHADINGDEVICE\",\n  3053780830: \"IFCSANITARYTERMINAL\",\n  2572171363: \"IFCREINFORCINGBARTYPE\",\n  1232101972: \"IFCRATIONALBSPLINECURVEWITHKNOTS\",\n  90941305: \"IFCPUMP\",\n  655969474: \"IFCPROTECTIVEDEVICETRIPPINGUNITTYPE\",\n  738039164: \"IFCPROTECTIVEDEVICE\",\n  1156407060: \"IFCPLATESTANDARDCASE\",\n  3612865200: \"IFCPIPESEGMENT\",\n  310824031: \"IFCPIPEFITTING\",\n  3694346114: \"IFCOUTLET\",\n  144952367: \"IFCOUTERBOUNDARYCURVE\",\n  2474470126: \"IFCMOTORCONNECTION\",\n  1911478936: \"IFCMEMBERSTANDARDCASE\",\n  1437502449: \"IFCMEDICALDEVICE\",\n  629592764: \"IFCLIGHTFIXTURE\",\n  76236018: \"IFCLAMP\",\n  2176052936: \"IFCJUNCTIONBOX\",\n  4175244083: \"IFCINTERCEPTOR\",\n  2068733104: \"IFCHUMIDIFIER\",\n  3319311131: \"IFCHEATEXCHANGER\",\n  2188021234: \"IFCFLOWMETER\",\n  1209101575: \"IFCEXTERNALSPATIALELEMENT\",\n  484807127: \"IFCEVAPORATOR\",\n  3747195512: \"IFCEVAPORATIVECOOLER\",\n  2814081492: \"IFCENGINE\",\n  2417008758: \"IFCELECTRICDISTRIBUTIONBOARDTYPE\",\n  3242481149: \"IFCDOORSTANDARDCASE\",\n  3205830791: \"IFCDISTRIBUTIONSYSTEM\",\n  400855858: \"IFCCOMMUNICATIONSAPPLIANCETYPE\",\n  905975707: \"IFCCOLUMNSTANDARDCASE\",\n  1677625105: \"IFCCIVILELEMENT\",\n  3296154744: \"IFCCHIMNEY\",\n  2674252688: \"IFCCABLEFITTINGTYPE\",\n  2188180465: \"IFCBURNERTYPE\",\n  1177604601: \"IFCBUILDINGSYSTEM\",\n  39481116: \"IFCBUILDINGELEMENTPARTTYPE\",\n  1136057603: \"IFCBOUNDARYCURVE\",\n  2461110595: \"IFCBSPLINECURVEWITHKNOTS\",\n  1532957894: \"IFCAUDIOVISUALAPPLIANCETYPE\",\n  4088093105: \"IFCWORKCALENDAR\",\n  4009809668: \"IFCWINDOWTYPE\",\n  926996030: \"IFCVOIDINGFEATURE\",\n  2391383451: \"IFCVIBRATIONISOLATOR\",\n  2415094496: \"IFCTENDONTYPE\",\n  3081323446: \"IFCTENDONANCHORTYPE\",\n  413509423: \"IFCSYSTEMFURNITUREELEMENT\",\n  3101698114: \"IFCSURFACEFEATURE\",\n  3657597509: \"IFCSTRUCTURALSURFACEACTION\",\n  2757150158: \"IFCSTRUCTURALCURVEREACTION\",\n  1004757350: \"IFCSTRUCTURALCURVEACTION\",\n  338393293: \"IFCSTAIRTYPE\",\n  1072016465: \"IFCSOLARDEVICETYPE\",\n  4074543187: \"IFCSHADINGDEVICETYPE\",\n  2157484638: \"IFCSEAMCURVE\",\n  2781568857: \"IFCROOFTYPE\",\n  2310774935: \"IFCREINFORCINGMESHTYPE\",\n  964333572: \"IFCREINFORCINGELEMENTTYPE\",\n  683857671: \"IFCRATIONALBSPLINESURFACEWITHKNOTS\",\n  1469900589: \"IFCRAMPTYPE\",\n  2839578677: \"IFCPOLYGONALFACESET\",\n  1158309216: \"IFCPILETYPE\",\n  3079942009: \"IFCOPENINGSTANDARDCASE\",\n  1114901282: \"IFCMEDICALDEVICETYPE\",\n  3113134337: \"IFCINTERSECTIONCURVE\",\n  3946677679: \"IFCINTERCEPTORTYPE\",\n  2571569899: \"IFCINDEXEDPOLYCURVE\",\n  3493046030: \"IFCGEOGRAPHICELEMENT\",\n  1509553395: \"IFCFURNITURE\",\n  1893162501: \"IFCFOOTINGTYPE\",\n  2853485674: \"IFCEXTERNALSPATIALSTRUCTUREELEMENT\",\n  4148101412: \"IFCEVENT\",\n  132023988: \"IFCENGINETYPE\",\n  2397081782: \"IFCELEMENTASSEMBLYTYPE\",\n  2323601079: \"IFCDOORTYPE\",\n  1213902940: \"IFCCYLINDRICALSURFACE\",\n  1525564444: \"IFCCONSTRUCTIONPRODUCTRESOURCETYPE\",\n  4105962743: \"IFCCONSTRUCTIONMATERIALRESOURCETYPE\",\n  2185764099: \"IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE\",\n  15328376: \"IFCCOMPOSITECURVEONSURFACE\",\n  3875453745: \"IFCCOMPLEXPROPERTYTEMPLATE\",\n  3893394355: \"IFCCIVILELEMENTTYPE\",\n  2197970202: \"IFCCHIMNEYTYPE\",\n  167062518: \"IFCBSPLINESURFACEWITHKNOTS\",\n  2887950389: \"IFCBSPLINESURFACE\",\n  2603310189: \"IFCADVANCEDBREPWITHVOIDS\",\n  1635779807: \"IFCADVANCEDBREP\",\n  2916149573: \"IFCTRIANGULATEDFACESET\",\n  1935646853: \"IFCTOROIDALSURFACE\",\n  2387106220: \"IFCTESSELLATEDFACESET\",\n  3206491090: \"IFCTASKTYPE\",\n  699246055: \"IFCSURFACECURVE\",\n  4095615324: \"IFCSUBCONTRACTRESOURCETYPE\",\n  603775116: \"IFCSTRUCTURALSURFACEREACTION\",\n  4015995234: \"IFCSPHERICALSURFACE\",\n  2481509218: \"IFCSPATIALZONETYPE\",\n  463610769: \"IFCSPATIALZONE\",\n  710998568: \"IFCSPATIALELEMENTTYPE\",\n  1412071761: \"IFCSPATIALELEMENT\",\n  3663146110: \"IFCSIMPLEPROPERTYTEMPLATE\",\n  3243963512: \"IFCREVOLVEDAREASOLIDTAPERED\",\n  816062949: \"IFCREPARAMETRISEDCOMPOSITECURVESEGMENT\",\n  1521410863: \"IFCRELSPACEBOUNDARY2NDLEVEL\",\n  3523091289: \"IFCRELSPACEBOUNDARY1STLEVEL\",\n  427948657: \"IFCRELINTERFERESELEMENTS\",\n  307848117: \"IFCRELDEFINESBYTEMPLATE\",\n  1462361463: \"IFCRELDEFINESBYOBJECT\",\n  2565941209: \"IFCRELDECLARES\",\n  1027710054: \"IFCRELASSIGNSTOGROUPBYFACTOR\",\n  3521284610: \"IFCPROPERTYTEMPLATE\",\n  492091185: \"IFCPROPERTYSETTEMPLATE\",\n  653396225: \"IFCPROJECTLIBRARY\",\n  569719735: \"IFCPROCEDURETYPE\",\n  3967405729: \"IFCPREDEFINEDPROPERTYSET\",\n  1682466193: \"IFCPCURVE\",\n  428585644: \"IFCLABORRESOURCETYPE\",\n  2294589976: \"IFCINDEXEDPOLYGONALFACEWITHVOIDS\",\n  178912537: \"IFCINDEXEDPOLYGONALFACE\",\n  4095422895: \"IFCGEOGRAPHICELEMENTTYPE\",\n  2652556860: \"IFCFIXEDREFERENCESWEPTAREASOLID\",\n  2804161546: \"IFCEXTRUDEDAREASOLIDTAPERED\",\n  4024345920: \"IFCEVENTTYPE\",\n  2629017746: \"IFCCURVEBOUNDEDSURFACE\",\n  1815067380: \"IFCCREWRESOURCETYPE\",\n  3419103109: \"IFCCONTEXT\",\n  2574617495: \"IFCCONSTRUCTIONRESOURCETYPE\",\n  2059837836: \"IFCCARTESIANPOINTLIST3D\",\n  1675464909: \"IFCCARTESIANPOINTLIST2D\",\n  574549367: \"IFCCARTESIANPOINTLIST\",\n  3406155212: \"IFCADVANCEDFACE\",\n  3698973494: \"IFCTYPERESOURCE\",\n  3736923433: \"IFCTYPEPROCESS\",\n  901063453: \"IFCTESSELLATEDITEM\",\n  1096409881: \"IFCSWEPTDISKSOLIDPOLYGONAL\",\n  1042787934: \"IFCRESOURCETIME\",\n  1608871552: \"IFCRESOURCECONSTRAINTRELATIONSHIP\",\n  2943643501: \"IFCRESOURCEAPPROVALRELATIONSHIP\",\n  2090586900: \"IFCQUANTITYSET\",\n  1482703590: \"IFCPROPERTYTEMPLATEDEFINITION\",\n  3778827333: \"IFCPREDEFINEDPROPERTIES\",\n  2998442950: \"IFCMIRROREDPROFILEDEF\",\n  853536259: \"IFCMATERIALRELATIONSHIP\",\n  3404854881: \"IFCMATERIALPROFILESETUSAGETAPERING\",\n  3079605661: \"IFCMATERIALPROFILESETUSAGE\",\n  2852063980: \"IFCMATERIALCONSTITUENTSET\",\n  3708119e3: \"IFCMATERIALCONSTITUENT\",\n  1585845231: \"IFCLAGTIME\",\n  2133299955: \"IFCINDEXEDTRIANGLETEXTUREMAP\",\n  1437953363: \"IFCINDEXEDTEXTUREMAP\",\n  3570813810: \"IFCINDEXEDCOLOURMAP\",\n  1437805879: \"IFCEXTERNALREFERENCERELATIONSHIP\",\n  297599258: \"IFCEXTENDEDPROPERTIES\",\n  211053100: \"IFCEVENTTIME\",\n  2713554722: \"IFCCONVERSIONBASEDUNITWITHOFFSET\",\n  3285139300: \"IFCCOLOURRGBLIST\",\n  1236880293: \"IFCWORKTIME\",\n  1199560280: \"IFCTIMEPERIOD\",\n  3611470254: \"IFCTEXTUREVERTEXLIST\",\n  2771591690: \"IFCTASKTIMERECURRING\",\n  1549132990: \"IFCTASKTIME\",\n  2043862942: \"IFCTABLECOLUMN\",\n  2934153892: \"IFCSURFACEREINFORCEMENTAREA\",\n  609421318: \"IFCSTRUCTURALLOADORRESULT\",\n  3478079324: \"IFCSTRUCTURALLOADCONFIGURATION\",\n  1054537805: \"IFCSCHEDULINGTIME\",\n  2439245199: \"IFCRESOURCELEVELRELATIONSHIP\",\n  2433181523: \"IFCREFERENCE\",\n  3915482550: \"IFCRECURRENCEPATTERN\",\n  986844984: \"IFCPROPERTYABSTRACTION\",\n  3843373140: \"IFCPROJECTEDCRS\",\n  677532197: \"IFCPRESENTATIONITEM\",\n  1507914824: \"IFCMATERIALUSAGEDEFINITION\",\n  552965576: \"IFCMATERIALPROFILEWITHOFFSETS\",\n  164193824: \"IFCMATERIALPROFILESET\",\n  2235152071: \"IFCMATERIALPROFILE\",\n  1847252529: \"IFCMATERIALLAYERWITHOFFSETS\",\n  760658860: \"IFCMATERIALDEFINITION\",\n  3057273783: \"IFCMAPCONVERSION\",\n  4294318154: \"IFCEXTERNALINFORMATION\",\n  1466758467: \"IFCCOORDINATEREFERENCESYSTEM\",\n  1785450214: \"IFCCOORDINATEOPERATION\",\n  775493141: \"IFCCONNECTIONVOLUMEGEOMETRY\",\n  979691226: \"IFCREINFORCINGBAR\",\n  3700593921: \"IFCELECTRICDISTRIBUTIONPOINT\",\n  1062813311: \"IFCDISTRIBUTIONCONTROLELEMENT\",\n  1052013943: \"IFCDISTRIBUTIONCHAMBERELEMENT\",\n  578613899: \"IFCCONTROLLERTYPE\",\n  2454782716: \"IFCCHAMFEREDGEFEATURE\",\n  753842376: \"IFCBEAM\",\n  3001207471: \"IFCALARMTYPE\",\n  2874132201: \"IFCACTUATORTYPE\",\n  3304561284: \"IFCWINDOW\",\n  3512223829: \"IFCWALLSTANDARDCASE\",\n  2391406946: \"IFCWALL\",\n  3313531582: \"IFCVIBRATIONISOLATORTYPE\",\n  2347447852: \"IFCTENDONANCHOR\",\n  3824725483: \"IFCTENDON\",\n  2515109513: \"IFCSTRUCTURALANALYSISMODEL\",\n  4252922144: \"IFCSTAIRFLIGHT\",\n  331165859: \"IFCSTAIR\",\n  1529196076: \"IFCSLAB\",\n  1783015770: \"IFCSENSORTYPE\",\n  1376911519: \"IFCROUNDEDEDGEFEATURE\",\n  2016517767: \"IFCROOF\",\n  2320036040: \"IFCREINFORCINGMESH\",\n  3027567501: \"IFCREINFORCINGELEMENT\",\n  3055160366: \"IFCRATIONALBEZIERCURVE\",\n  3283111854: \"IFCRAMPFLIGHT\",\n  3024970846: \"IFCRAMP\",\n  2262370178: \"IFCRAILING\",\n  3171933400: \"IFCPLATE\",\n  1687234759: \"IFCPILE\",\n  1073191201: \"IFCMEMBER\",\n  900683007: \"IFCFOOTING\",\n  3508470533: \"IFCFLOWTREATMENTDEVICE\",\n  2223149337: \"IFCFLOWTERMINAL\",\n  707683696: \"IFCFLOWSTORAGEDEVICE\",\n  987401354: \"IFCFLOWSEGMENT\",\n  3132237377: \"IFCFLOWMOVINGDEVICE\",\n  4037862832: \"IFCFLOWINSTRUMENTTYPE\",\n  4278956645: \"IFCFLOWFITTING\",\n  2058353004: \"IFCFLOWCONTROLLER\",\n  4222183408: \"IFCFIRESUPPRESSIONTERMINALTYPE\",\n  1810631287: \"IFCFILTERTYPE\",\n  346874300: \"IFCFANTYPE\",\n  1658829314: \"IFCENERGYCONVERSIONDEVICE\",\n  857184966: \"IFCELECTRICALELEMENT\",\n  1634875225: \"IFCELECTRICALCIRCUIT\",\n  712377611: \"IFCELECTRICTIMECONTROLTYPE\",\n  1217240411: \"IFCELECTRICMOTORTYPE\",\n  1365060375: \"IFCELECTRICHEATERTYPE\",\n  1534661035: \"IFCELECTRICGENERATORTYPE\",\n  3277789161: \"IFCELECTRICFLOWSTORAGEDEVICETYPE\",\n  663422040: \"IFCELECTRICAPPLIANCETYPE\",\n  855621170: \"IFCEDGEFEATURE\",\n  2030761528: \"IFCDUCTSILENCERTYPE\",\n  3760055223: \"IFCDUCTSEGMENTTYPE\",\n  869906466: \"IFCDUCTFITTINGTYPE\",\n  395920057: \"IFCDOOR\",\n  3041715199: \"IFCDISTRIBUTIONPORT\",\n  3040386961: \"IFCDISTRIBUTIONFLOWELEMENT\",\n  1945004755: \"IFCDISTRIBUTIONELEMENT\",\n  2063403501: \"IFCDISTRIBUTIONCONTROLELEMENTTYPE\",\n  1599208980: \"IFCDISTRIBUTIONCHAMBERELEMENTTYPE\",\n  2635815018: \"IFCDISCRETEACCESSORYTYPE\",\n  1335981549: \"IFCDISCRETEACCESSORY\",\n  4147604152: \"IFCDIAMETERDIMENSION\",\n  3961806047: \"IFCDAMPERTYPE\",\n  3495092785: \"IFCCURTAINWALL\",\n  1973544240: \"IFCCOVERING\",\n  2954562838: \"IFCCOOLINGTOWERTYPE\",\n  335055490: \"IFCCOOLEDBEAMTYPE\",\n  488727124: \"IFCCONSTRUCTIONPRODUCTRESOURCE\",\n  1060000209: \"IFCCONSTRUCTIONMATERIALRESOURCE\",\n  3898045240: \"IFCCONSTRUCTIONEQUIPMENTRESOURCE\",\n  1163958913: \"IFCCONDITIONCRITERION\",\n  2188551683: \"IFCCONDITION\",\n  2816379211: \"IFCCONDENSERTYPE\",\n  3850581409: \"IFCCOMPRESSORTYPE\",\n  843113511: \"IFCCOLUMN\",\n  2301859152: \"IFCCOILTYPE\",\n  2611217952: \"IFCCIRCLE\",\n  2951183804: \"IFCCHILLERTYPE\",\n  1285652485: \"IFCCABLESEGMENTTYPE\",\n  3293546465: \"IFCCABLECARRIERSEGMENTTYPE\",\n  395041908: \"IFCCABLECARRIERFITTINGTYPE\",\n  1909888760: \"IFCBUILDINGELEMENTPROXYTYPE\",\n  1095909175: \"IFCBUILDINGELEMENTPROXY\",\n  2979338954: \"IFCBUILDINGELEMENTPART\",\n  52481810: \"IFCBUILDINGELEMENTCOMPONENT\",\n  3299480353: \"IFCBUILDINGELEMENT\",\n  231477066: \"IFCBOILERTYPE\",\n  1916977116: \"IFCBEZIERCURVE\",\n  819618141: \"IFCBEAMTYPE\",\n  1967976161: \"IFCBSPLINECURVE\",\n  3460190687: \"IFCASSET\",\n  2470393545: \"IFCANGULARDIMENSION\",\n  1871374353: \"IFCAIRTOAIRHEATRECOVERYTYPE\",\n  3352864051: \"IFCAIRTERMINALTYPE\",\n  1411407467: \"IFCAIRTERMINALBOXTYPE\",\n  3821786052: \"IFCACTIONREQUEST\",\n  1213861670: \"IFC2DCOMPOSITECURVE\",\n  1033361043: \"IFCZONE\",\n  3342526732: \"IFCWORKSCHEDULE\",\n  4218914973: \"IFCWORKPLAN\",\n  1028945134: \"IFCWORKCONTROL\",\n  1133259667: \"IFCWASTETERMINALTYPE\",\n  1898987631: \"IFCWALLTYPE\",\n  2769231204: \"IFCVIRTUALELEMENT\",\n  728799441: \"IFCVALVETYPE\",\n  1911125066: \"IFCUNITARYEQUIPMENTTYPE\",\n  1600972822: \"IFCTUBEBUNDLETYPE\",\n  3593883385: \"IFCTRIMMEDCURVE\",\n  1620046519: \"IFCTRANSPORTELEMENT\",\n  1692211062: \"IFCTRANSFORMERTYPE\",\n  1637806684: \"IFCTIMESERIESSCHEDULE\",\n  5716631: \"IFCTANKTYPE\",\n  2254336722: \"IFCSYSTEM\",\n  2315554128: \"IFCSWITCHINGDEVICETYPE\",\n  148013059: \"IFCSUBCONTRACTRESOURCE\",\n  1975003073: \"IFCSTRUCTURALSURFACECONNECTION\",\n  2986769608: \"IFCSTRUCTURALRESULTGROUP\",\n  1235345126: \"IFCSTRUCTURALPOINTREACTION\",\n  734778138: \"IFCSTRUCTURALPOINTCONNECTION\",\n  2082059205: \"IFCSTRUCTURALPOINTACTION\",\n  3987759626: \"IFCSTRUCTURALPLANARACTIONVARYING\",\n  1621171031: \"IFCSTRUCTURALPLANARACTION\",\n  1252848954: \"IFCSTRUCTURALLOADGROUP\",\n  1721250024: \"IFCSTRUCTURALLINEARACTIONVARYING\",\n  1807405624: \"IFCSTRUCTURALLINEARACTION\",\n  2445595289: \"IFCSTRUCTURALCURVEMEMBERVARYING\",\n  214636428: \"IFCSTRUCTURALCURVEMEMBER\",\n  4243806635: \"IFCSTRUCTURALCURVECONNECTION\",\n  1179482911: \"IFCSTRUCTURALCONNECTION\",\n  682877961: \"IFCSTRUCTURALACTION\",\n  1039846685: \"IFCSTAIRFLIGHTTYPE\",\n  3112655638: \"IFCSTACKTERMINALTYPE\",\n  3812236995: \"IFCSPACETYPE\",\n  652456506: \"IFCSPACEPROGRAM\",\n  1305183839: \"IFCSPACEHEATERTYPE\",\n  3856911033: \"IFCSPACE\",\n  2533589738: \"IFCSLABTYPE\",\n  4097777520: \"IFCSITE\",\n  4105383287: \"IFCSERVICELIFE\",\n  3517283431: \"IFCSCHEDULETIMECONTROL\",\n  1768891740: \"IFCSANITARYTERMINALTYPE\",\n  2863920197: \"IFCRELASSIGNSTASKS\",\n  160246688: \"IFCRELAGGREGATES\",\n  2324767716: \"IFCRAMPFLIGHTTYPE\",\n  2893384427: \"IFCRAILINGTYPE\",\n  3248260540: \"IFCRADIUSDIMENSION\",\n  2250791053: \"IFCPUMPTYPE\",\n  1842657554: \"IFCPROTECTIVEDEVICETYPE\",\n  3651124850: \"IFCPROJECTIONELEMENT\",\n  3642467123: \"IFCPROJECTORDERRECORD\",\n  2904328755: \"IFCPROJECTORDER\",\n  2744685151: \"IFCPROCEDURE\",\n  3740093272: \"IFCPORT\",\n  3724593414: \"IFCPOLYLINE\",\n  4017108033: \"IFCPLATETYPE\",\n  4231323485: \"IFCPIPESEGMENTTYPE\",\n  804291784: \"IFCPIPEFITTINGTYPE\",\n  3327091369: \"IFCPERMIT\",\n  2382730787: \"IFCPERFORMANCEHISTORY\",\n  2837617999: \"IFCOUTLETTYPE\",\n  3425660407: \"IFCORDERACTION\",\n  3588315303: \"IFCOPENINGELEMENT\",\n  4143007308: \"IFCOCCUPANT\",\n  1916936684: \"IFCMOVE\",\n  977012517: \"IFCMOTORCONNECTIONTYPE\",\n  3181161470: \"IFCMEMBERTYPE\",\n  2108223431: \"IFCMECHANICALFASTENERTYPE\",\n  377706215: \"IFCMECHANICALFASTENER\",\n  2506943328: \"IFCLINEARDIMENSION\",\n  1161773419: \"IFCLIGHTFIXTURETYPE\",\n  1051575348: \"IFCLAMPTYPE\",\n  3827777499: \"IFCLABORRESOURCE\",\n  4288270099: \"IFCJUNCTIONBOXTYPE\",\n  2391368822: \"IFCINVENTORY\",\n  1806887404: \"IFCHUMIDIFIERTYPE\",\n  1251058090: \"IFCHEATEXCHANGERTYPE\",\n  2706460486: \"IFCGROUP\",\n  3009204131: \"IFCGRID\",\n  200128114: \"IFCGASTERMINALTYPE\",\n  814719939: \"IFCFURNITURESTANDARD\",\n  263784265: \"IFCFURNISHINGELEMENT\",\n  3009222698: \"IFCFLOWTREATMENTDEVICETYPE\",\n  2297155007: \"IFCFLOWTERMINALTYPE\",\n  1339347760: \"IFCFLOWSTORAGEDEVICETYPE\",\n  1834744321: \"IFCFLOWSEGMENTTYPE\",\n  1482959167: \"IFCFLOWMOVINGDEVICETYPE\",\n  3815607619: \"IFCFLOWMETERTYPE\",\n  3198132628: \"IFCFLOWFITTINGTYPE\",\n  3907093117: \"IFCFLOWCONTROLLERTYPE\",\n  1287392070: \"IFCFEATUREELEMENTSUBTRACTION\",\n  2143335405: \"IFCFEATUREELEMENTADDITION\",\n  2827207264: \"IFCFEATUREELEMENT\",\n  2489546625: \"IFCFASTENERTYPE\",\n  647756555: \"IFCFASTENER\",\n  3737207727: \"IFCFACETEDBREPWITHVOIDS\",\n  807026263: \"IFCFACETEDBREP\",\n  3390157468: \"IFCEVAPORATORTYPE\",\n  3174744832: \"IFCEVAPORATIVECOOLERTYPE\",\n  3272907226: \"IFCEQUIPMENTSTANDARD\",\n  1962604670: \"IFCEQUIPMENTELEMENT\",\n  2107101300: \"IFCENERGYCONVERSIONDEVICETYPE\",\n  1704287377: \"IFCELLIPSE\",\n  2590856083: \"IFCELEMENTCOMPONENTTYPE\",\n  1623761950: \"IFCELEMENTCOMPONENT\",\n  4123344466: \"IFCELEMENTASSEMBLY\",\n  1758889154: \"IFCELEMENT\",\n  360485395: \"IFCELECTRICALBASEPROPERTIES\",\n  3849074793: \"IFCDISTRIBUTIONFLOWELEMENTTYPE\",\n  3256556792: \"IFCDISTRIBUTIONELEMENTTYPE\",\n  681481545: \"IFCDIMENSIONCURVEDIRECTEDCALLOUT\",\n  1457835157: \"IFCCURTAINWALLTYPE\",\n  3295246426: \"IFCCREWRESOURCE\",\n  1916426348: \"IFCCOVERINGTYPE\",\n  1419761937: \"IFCCOSTSCHEDULE\",\n  3895139033: \"IFCCOSTITEM\",\n  3293443760: \"IFCCONTROL\",\n  2559216714: \"IFCCONSTRUCTIONRESOURCE\",\n  2510884976: \"IFCCONIC\",\n  3732776249: \"IFCCOMPOSITECURVE\",\n  300633059: \"IFCCOLUMNTYPE\",\n  2937912522: \"IFCCIRCLEHOLLOWPROFILEDEF\",\n  3124254112: \"IFCBUILDINGSTOREY\",\n  1950629157: \"IFCBUILDINGELEMENTTYPE\",\n  4031249490: \"IFCBUILDING\",\n  1260505505: \"IFCBOUNDEDCURVE\",\n  3649129432: \"IFCBOOLEANCLIPPINGRESULT\",\n  1334484129: \"IFCBLOCK\",\n  3207858831: \"IFCASYMMETRICISHAPEPROFILEDEF\",\n  1674181508: \"IFCANNOTATION\",\n  2296667514: \"IFCACTOR\",\n  2097647324: \"IFCTRANSPORTELEMENTTYPE\",\n  3473067441: \"IFCTASK\",\n  1580310250: \"IFCSYSTEMFURNITUREELEMENTTYPE\",\n  4124788165: \"IFCSURFACEOFREVOLUTION\",\n  2809605785: \"IFCSURFACEOFLINEAREXTRUSION\",\n  2028607225: \"IFCSURFACECURVESWEPTAREASOLID\",\n  4070609034: \"IFCSTRUCTUREDDIMENSIONCALLOUT\",\n  2218152070: \"IFCSTRUCTURALSURFACEMEMBERVARYING\",\n  3979015343: \"IFCSTRUCTURALSURFACEMEMBER\",\n  3689010777: \"IFCSTRUCTURALREACTION\",\n  530289379: \"IFCSTRUCTURALMEMBER\",\n  3136571912: \"IFCSTRUCTURALITEM\",\n  3544373492: \"IFCSTRUCTURALACTIVITY\",\n  451544542: \"IFCSPHERE\",\n  3893378262: \"IFCSPATIALSTRUCTUREELEMENTTYPE\",\n  2706606064: \"IFCSPATIALSTRUCTUREELEMENT\",\n  3626867408: \"IFCRIGHTCIRCULARCYLINDER\",\n  4158566097: \"IFCRIGHTCIRCULARCONE\",\n  1856042241: \"IFCREVOLVEDAREASOLID\",\n  2914609552: \"IFCRESOURCE\",\n  1401173127: \"IFCRELVOIDSELEMENT\",\n  3451746338: \"IFCRELSPACEBOUNDARY\",\n  366585022: \"IFCRELSERVICESBUILDINGS\",\n  4122056220: \"IFCRELSEQUENCE\",\n  1058617721: \"IFCRELSCHEDULESCOSTITEMS\",\n  1245217292: \"IFCRELREFERENCEDINSPATIALSTRUCTURE\",\n  750771296: \"IFCRELPROJECTSELEMENT\",\n  202636808: \"IFCRELOVERRIDESPROPERTIES\",\n  2051452291: \"IFCRELOCCUPIESSPACES\",\n  3268803585: \"IFCRELNESTS\",\n  4189434867: \"IFCRELINTERACTIONREQUIREMENTS\",\n  279856033: \"IFCRELFLOWCONTROLELEMENTS\",\n  3940055652: \"IFCRELFILLSELEMENT\",\n  781010003: \"IFCRELDEFINESBYTYPE\",\n  4186316022: \"IFCRELDEFINESBYPROPERTIES\",\n  693640335: \"IFCRELDEFINES\",\n  2551354335: \"IFCRELDECOMPOSES\",\n  2802773753: \"IFCRELCOVERSSPACES\",\n  886880790: \"IFCRELCOVERSBLDGELEMENTS\",\n  3242617779: \"IFCRELCONTAINEDINSPATIALSTRUCTURE\",\n  3678494232: \"IFCRELCONNECTSWITHREALIZINGELEMENTS\",\n  504942748: \"IFCRELCONNECTSWITHECCENTRICITY\",\n  1638771189: \"IFCRELCONNECTSSTRUCTURALMEMBER\",\n  3912681535: \"IFCRELCONNECTSSTRUCTURALELEMENT\",\n  2127690289: \"IFCRELCONNECTSSTRUCTURALACTIVITY\",\n  3190031847: \"IFCRELCONNECTSPORTS\",\n  4201705270: \"IFCRELCONNECTSPORTTOELEMENT\",\n  3945020480: \"IFCRELCONNECTSPATHELEMENTS\",\n  1204542856: \"IFCRELCONNECTSELEMENTS\",\n  826625072: \"IFCRELCONNECTS\",\n  2851387026: \"IFCRELASSOCIATESPROFILEPROPERTIES\",\n  2655215786: \"IFCRELASSOCIATESMATERIAL\",\n  3840914261: \"IFCRELASSOCIATESLIBRARY\",\n  982818633: \"IFCRELASSOCIATESDOCUMENT\",\n  2728634034: \"IFCRELASSOCIATESCONSTRAINT\",\n  919958153: \"IFCRELASSOCIATESCLASSIFICATION\",\n  4095574036: \"IFCRELASSOCIATESAPPROVAL\",\n  1327628568: \"IFCRELASSOCIATESAPPLIEDVALUE\",\n  1865459582: \"IFCRELASSOCIATES\",\n  205026976: \"IFCRELASSIGNSTORESOURCE\",\n  3372526763: \"IFCRELASSIGNSTOPROJECTORDER\",\n  2857406711: \"IFCRELASSIGNSTOPRODUCT\",\n  4278684876: \"IFCRELASSIGNSTOPROCESS\",\n  1307041759: \"IFCRELASSIGNSTOGROUP\",\n  2495723537: \"IFCRELASSIGNSTOCONTROL\",\n  1683148259: \"IFCRELASSIGNSTOACTOR\",\n  3939117080: \"IFCRELASSIGNS\",\n  3454111270: \"IFCRECTANGULARTRIMMEDSURFACE\",\n  2798486643: \"IFCRECTANGULARPYRAMID\",\n  2770003689: \"IFCRECTANGLEHOLLOWPROFILEDEF\",\n  3219374653: \"IFCPROXY\",\n  1451395588: \"IFCPROPERTYSET\",\n  4194566429: \"IFCPROJECTIONCURVE\",\n  103090709: \"IFCPROJECT\",\n  4208778838: \"IFCPRODUCT\",\n  2945172077: \"IFCPROCESS\",\n  220341763: \"IFCPLANE\",\n  603570806: \"IFCPLANARBOX\",\n  3566463478: \"IFCPERMEABLECOVERINGPROPERTIES\",\n  3505215534: \"IFCOFFSETCURVE3D\",\n  3388369263: \"IFCOFFSETCURVE2D\",\n  3888040117: \"IFCOBJECT\",\n  1425443689: \"IFCMANIFOLDSOLIDBREP\",\n  1281925730: \"IFCLINE\",\n  572779678: \"IFCLSHAPEPROFILEDEF\",\n  1484403080: \"IFCISHAPEPROFILEDEF\",\n  987898635: \"IFCGEOMETRICCURVESET\",\n  1268542332: \"IFCFURNITURETYPE\",\n  4238390223: \"IFCFURNISHINGELEMENTTYPE\",\n  3455213021: \"IFCFLUIDFLOWPROPERTIES\",\n  315944413: \"IFCFILLAREASTYLETILES\",\n  4203026998: \"IFCFILLAREASTYLETILESYMBOLWITHSTYLE\",\n  374418227: \"IFCFILLAREASTYLEHATCHING\",\n  2047409740: \"IFCFACEBASEDSURFACEMODEL\",\n  477187591: \"IFCEXTRUDEDAREASOLID\",\n  80994333: \"IFCENERGYPROPERTIES\",\n  2835456948: \"IFCELLIPSEPROFILEDEF\",\n  2777663545: \"IFCELEMENTARYSURFACE\",\n  339256511: \"IFCELEMENTTYPE\",\n  1883228015: \"IFCELEMENTQUANTITY\",\n  1472233963: \"IFCEDGELOOP\",\n  4006246654: \"IFCDRAUGHTINGPREDEFINEDCURVEFONT\",\n  445594917: \"IFCDRAUGHTINGPREDEFINEDCOLOUR\",\n  3073041342: \"IFCDRAUGHTINGCALLOUT\",\n  526551008: \"IFCDOORSTYLE\",\n  1714330368: \"IFCDOORPANELPROPERTIES\",\n  2963535650: \"IFCDOORLININGPROPERTIES\",\n  32440307: \"IFCDIRECTION\",\n  4054601972: \"IFCDIMENSIONCURVETERMINATOR\",\n  606661476: \"IFCDIMENSIONCURVE\",\n  693772133: \"IFCDEFINEDSYMBOL\",\n  2827736869: \"IFCCURVEBOUNDEDPLANE\",\n  2601014836: \"IFCCURVE\",\n  2147822146: \"IFCCSGSOLID\",\n  2506170314: \"IFCCSGPRIMITIVE3D\",\n  194851669: \"IFCCRANERAILFSHAPEPROFILEDEF\",\n  4133800736: \"IFCCRANERAILASHAPEPROFILEDEF\",\n  2485617015: \"IFCCOMPOSITECURVESEGMENT\",\n  2205249479: \"IFCCLOSEDSHELL\",\n  1383045692: \"IFCCIRCLEPROFILEDEF\",\n  1416205885: \"IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM\",\n  3331915920: \"IFCCARTESIANTRANSFORMATIONOPERATOR3D\",\n  3486308946: \"IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM\",\n  3749851601: \"IFCCARTESIANTRANSFORMATIONOPERATOR2D\",\n  59481748: \"IFCCARTESIANTRANSFORMATIONOPERATOR\",\n  1123145078: \"IFCCARTESIANPOINT\",\n  2898889636: \"IFCCSHAPEPROFILEDEF\",\n  2713105998: \"IFCBOXEDHALFSPACE\",\n  2581212453: \"IFCBOUNDINGBOX\",\n  4182860854: \"IFCBOUNDEDSURFACE\",\n  2736907675: \"IFCBOOLEANRESULT\",\n  2740243338: \"IFCAXIS2PLACEMENT3D\",\n  3125803723: \"IFCAXIS2PLACEMENT2D\",\n  4261334040: \"IFCAXIS1PLACEMENT\",\n  1302238472: \"IFCANNOTATIONSURFACE\",\n  2265737646: \"IFCANNOTATIONFILLAREAOCCURRENCE\",\n  669184980: \"IFCANNOTATIONFILLAREA\",\n  3288037868: \"IFCANNOTATIONCURVEOCCURRENCE\",\n  2543172580: \"IFCZSHAPEPROFILEDEF\",\n  1299126871: \"IFCWINDOWSTYLE\",\n  512836454: \"IFCWINDOWPANELPROPERTIES\",\n  336235671: \"IFCWINDOWLININGPROPERTIES\",\n  2759199220: \"IFCVERTEXLOOP\",\n  1417489154: \"IFCVECTOR\",\n  427810014: \"IFCUSHAPEPROFILEDEF\",\n  2347495698: \"IFCTYPEPRODUCT\",\n  1628702193: \"IFCTYPEOBJECT\",\n  1345879162: \"IFCTWODIRECTIONREPEATFACTOR\",\n  2715220739: \"IFCTRAPEZIUMPROFILEDEF\",\n  3124975700: \"IFCTEXTLITERALWITHEXTENT\",\n  4282788508: \"IFCTEXTLITERAL\",\n  3028897424: \"IFCTERMINATORSYMBOL\",\n  3071757647: \"IFCTSHAPEPROFILEDEF\",\n  230924584: \"IFCSWEPTSURFACE\",\n  1260650574: \"IFCSWEPTDISKSOLID\",\n  2247615214: \"IFCSWEPTAREASOLID\",\n  1878645084: \"IFCSURFACESTYLERENDERING\",\n  2513912981: \"IFCSURFACE\",\n  2233826070: \"IFCSUBEDGE\",\n  3653947884: \"IFCSTRUCTURALSTEELPROFILEPROPERTIES\",\n  3843319758: \"IFCSTRUCTURALPROFILEPROPERTIES\",\n  1190533807: \"IFCSTRUCTURALLOADSINGLEFORCEWARPING\",\n  1597423693: \"IFCSTRUCTURALLOADSINGLEFORCE\",\n  1973038258: \"IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION\",\n  2473145415: \"IFCSTRUCTURALLOADSINGLEDISPLACEMENT\",\n  2668620305: \"IFCSTRUCTURALLOADPLANARFORCE\",\n  1595516126: \"IFCSTRUCTURALLOADLINEARFORCE\",\n  390701378: \"IFCSPACETHERMALLOADPROPERTIES\",\n  1202362311: \"IFCSOUNDVALUE\",\n  2485662743: \"IFCSOUNDPROPERTIES\",\n  723233188: \"IFCSOLIDMODEL\",\n  2609359061: \"IFCSLIPPAGECONNECTIONCONDITION\",\n  4124623270: \"IFCSHELLBASEDSURFACEMODEL\",\n  2411513650: \"IFCSERVICELIFEFACTOR\",\n  1509187699: \"IFCSECTIONEDSPINE\",\n  2778083089: \"IFCROUNDEDRECTANGLEPROFILEDEF\",\n  478536968: \"IFCRELATIONSHIP\",\n  3765753017: \"IFCREINFORCEMENTDEFINITIONPROPERTIES\",\n  3413951693: \"IFCREGULARTIMESERIES\",\n  3615266464: \"IFCRECTANGLEPROFILEDEF\",\n  110355661: \"IFCPROPERTYTABLEVALUE\",\n  3650150729: \"IFCPROPERTYSINGLEVALUE\",\n  3357820518: \"IFCPROPERTYSETDEFINITION\",\n  941946838: \"IFCPROPERTYREFERENCEVALUE\",\n  2752243245: \"IFCPROPERTYLISTVALUE\",\n  4166981789: \"IFCPROPERTYENUMERATEDVALUE\",\n  1680319473: \"IFCPROPERTYDEFINITION\",\n  871118103: \"IFCPROPERTYBOUNDEDVALUE\",\n  673634403: \"IFCPRODUCTDEFINITIONSHAPE\",\n  179317114: \"IFCPREDEFINEDPOINTMARKERSYMBOL\",\n  433424934: \"IFCPREDEFINEDDIMENSIONSYMBOL\",\n  2559016684: \"IFCPREDEFINEDCURVEFONT\",\n  759155922: \"IFCPREDEFINEDCOLOUR\",\n  2775532180: \"IFCPOLYGONALBOUNDEDHALFSPACE\",\n  2924175390: \"IFCPOLYLOOP\",\n  1423911732: \"IFCPOINTONSURFACE\",\n  4022376103: \"IFCPOINTONCURVE\",\n  2067069095: \"IFCPOINT\",\n  1663979128: \"IFCPLANAREXTENT\",\n  2004835150: \"IFCPLACEMENT\",\n  597895409: \"IFCPIXELTEXTURE\",\n  3021840470: \"IFCPHYSICALCOMPLEXQUANTITY\",\n  2519244187: \"IFCPATH\",\n  2529465313: \"IFCPARAMETERIZEDPROFILEDEF\",\n  1029017970: \"IFCORIENTEDEDGE\",\n  2665983363: \"IFCOPENSHELL\",\n  2833995503: \"IFCONEDIRECTIONREPEATFACTOR\",\n  219451334: \"IFCOBJECTDEFINITION\",\n  1430189142: \"IFCMECHANICALCONCRETEMATERIALPROPERTIES\",\n  2022407955: \"IFCMATERIALDEFINITIONREPRESENTATION\",\n  2347385850: \"IFCMAPPEDITEM\",\n  1008929658: \"IFCLOOP\",\n  2624227202: \"IFCLOCALPLACEMENT\",\n  3422422726: \"IFCLIGHTSOURCESPOT\",\n  1520743889: \"IFCLIGHTSOURCEPOSITIONAL\",\n  4266656042: \"IFCLIGHTSOURCEGONIOMETRIC\",\n  2604431987: \"IFCLIGHTSOURCEDIRECTIONAL\",\n  125510826: \"IFCLIGHTSOURCEAMBIENT\",\n  1402838566: \"IFCLIGHTSOURCE\",\n  3741457305: \"IFCIRREGULARTIMESERIES\",\n  3905492369: \"IFCIMAGETEXTURE\",\n  2445078500: \"IFCHYGROSCOPICMATERIALPROPERTIES\",\n  812098782: \"IFCHALFSPACESOLID\",\n  178086475: \"IFCGRIDPLACEMENT\",\n  3590301190: \"IFCGEOMETRICSET\",\n  4142052618: \"IFCGEOMETRICREPRESENTATIONSUBCONTEXT\",\n  2453401579: \"IFCGEOMETRICREPRESENTATIONITEM\",\n  3448662350: \"IFCGEOMETRICREPRESENTATIONCONTEXT\",\n  1446786286: \"IFCGENERALPROFILEPROPERTIES\",\n  803998398: \"IFCGENERALMATERIALPROPERTIES\",\n  3857492461: \"IFCFUELPROPERTIES\",\n  738692330: \"IFCFILLAREASTYLE\",\n  4219587988: \"IFCFAILURECONNECTIONCONDITION\",\n  3008276851: \"IFCFACESURFACE\",\n  803316827: \"IFCFACEOUTERBOUND\",\n  1809719519: \"IFCFACEBOUND\",\n  2556980723: \"IFCFACE\",\n  1860660968: \"IFCEXTENDEDMATERIALPROPERTIES\",\n  476780140: \"IFCEDGECURVE\",\n  3900360178: \"IFCEDGE\",\n  4170525392: \"IFCDRAUGHTINGPREDEFINEDTEXTFONT\",\n  3732053477: \"IFCDOCUMENTREFERENCE\",\n  1694125774: \"IFCDIMENSIONPAIR\",\n  2273265877: \"IFCDIMENSIONCALLOUTRELATIONSHIP\",\n  3632507154: \"IFCDERIVEDPROFILEDEF\",\n  3800577675: \"IFCCURVESTYLE\",\n  2889183280: \"IFCCONVERSIONBASEDUNIT\",\n  3050246964: \"IFCCONTEXTDEPENDENTUNIT\",\n  45288368: \"IFCCONNECTIONPOINTECCENTRICITY\",\n  1981873012: \"IFCCONNECTIONCURVEGEOMETRY\",\n  370225590: \"IFCCONNECTEDFACESET\",\n  1485152156: \"IFCCOMPOSITEPROFILEDEF\",\n  2542286263: \"IFCCOMPLEXPROPERTY\",\n  776857604: \"IFCCOLOURRGB\",\n  647927063: \"IFCCLASSIFICATIONREFERENCE\",\n  3150382593: \"IFCCENTERLINEPROFILEDEF\",\n  616511568: \"IFCBLOBTEXTURE\",\n  2705031697: \"IFCARBITRARYPROFILEDEFWITHVOIDS\",\n  1310608509: \"IFCARBITRARYOPENPROFILEDEF\",\n  3798115385: \"IFCARBITRARYCLOSEDPROFILEDEF\",\n  2297822566: \"IFCANNOTATIONTEXTOCCURRENCE\",\n  3612888222: \"IFCANNOTATIONSYMBOLOCCURRENCE\",\n  962685235: \"IFCANNOTATIONSURFACEOCCURRENCE\",\n  2442683028: \"IFCANNOTATIONOCCURRENCE\",\n  1065908215: \"IFCWATERPROPERTIES\",\n  891718957: \"IFCVIRTUALGRIDINTERSECTION\",\n  1907098498: \"IFCVERTEXPOINT\",\n  3304826586: \"IFCVERTEXBASEDTEXTUREMAP\",\n  2799835756: \"IFCVERTEX\",\n  180925521: \"IFCUNITASSIGNMENT\",\n  1735638870: \"IFCTOPOLOGYREPRESENTATION\",\n  1377556343: \"IFCTOPOLOGICALREPRESENTATIONITEM\",\n  581633288: \"IFCTIMESERIESVALUE\",\n  1718945513: \"IFCTIMESERIESREFERENCERELATIONSHIP\",\n  3101149627: \"IFCTIMESERIES\",\n  3317419933: \"IFCTHERMALMATERIALPROPERTIES\",\n  1210645708: \"IFCTEXTUREVERTEX\",\n  2552916305: \"IFCTEXTUREMAP\",\n  1742049831: \"IFCTEXTURECOORDINATEGENERATOR\",\n  280115917: \"IFCTEXTURECOORDINATE\",\n  1484833681: \"IFCTEXTSTYLEWITHBOXCHARACTERISTICS\",\n  1640371178: \"IFCTEXTSTYLETEXTMODEL\",\n  2636378356: \"IFCTEXTSTYLEFORDEFINEDFONT\",\n  1983826977: \"IFCTEXTSTYLEFONTMODEL\",\n  1447204868: \"IFCTEXTSTYLE\",\n  912023232: \"IFCTELECOMADDRESS\",\n  531007025: \"IFCTABLEROW\",\n  985171141: \"IFCTABLE\",\n  1290481447: \"IFCSYMBOLSTYLE\",\n  626085974: \"IFCSURFACETEXTURE\",\n  1351298697: \"IFCSURFACESTYLEWITHTEXTURES\",\n  846575682: \"IFCSURFACESTYLESHADING\",\n  1607154358: \"IFCSURFACESTYLEREFRACTION\",\n  3303107099: \"IFCSURFACESTYLELIGHTING\",\n  1300840506: \"IFCSURFACESTYLE\",\n  3049322572: \"IFCSTYLEDREPRESENTATION\",\n  3958052878: \"IFCSTYLEDITEM\",\n  2830218821: \"IFCSTYLEMODEL\",\n  3408363356: \"IFCSTRUCTURALLOADTEMPERATURE\",\n  2525727697: \"IFCSTRUCTURALLOADSTATIC\",\n  2162789131: \"IFCSTRUCTURALLOAD\",\n  2273995522: \"IFCSTRUCTURALCONNECTIONCONDITION\",\n  3692461612: \"IFCSIMPLEPROPERTY\",\n  4240577450: \"IFCSHAPEREPRESENTATION\",\n  3982875396: \"IFCSHAPEMODEL\",\n  867548509: \"IFCSHAPEASPECT\",\n  4165799628: \"IFCSECTIONREINFORCEMENTPROPERTIES\",\n  2042790032: \"IFCSECTIONPROPERTIES\",\n  448429030: \"IFCSIUNIT\",\n  2341007311: \"IFCROOT\",\n  3679540991: \"IFCRIBPLATEPROFILEPROPERTIES\",\n  1660063152: \"IFCREPRESENTATIONMAP\",\n  3008791417: \"IFCREPRESENTATIONITEM\",\n  3377609919: \"IFCREPRESENTATIONCONTEXT\",\n  1076942058: \"IFCREPRESENTATION\",\n  1222501353: \"IFCRELAXATION\",\n  1580146022: \"IFCREINFORCEMENTBARPROPERTIES\",\n  2692823254: \"IFCREFERENCESVALUEDOCUMENT\",\n  825690147: \"IFCQUANTITYWEIGHT\",\n  2405470396: \"IFCQUANTITYVOLUME\",\n  3252649465: \"IFCQUANTITYTIME\",\n  931644368: \"IFCQUANTITYLENGTH\",\n  2093928680: \"IFCQUANTITYCOUNT\",\n  2044713172: \"IFCQUANTITYAREA\",\n  3710013099: \"IFCPROPERTYENUMERATION\",\n  148025276: \"IFCPROPERTYDEPENDENCYRELATIONSHIP\",\n  3896028662: \"IFCPROPERTYCONSTRAINTRELATIONSHIP\",\n  2598011224: \"IFCPROPERTY\",\n  2802850158: \"IFCPROFILEPROPERTIES\",\n  3958567839: \"IFCPROFILEDEF\",\n  2267347899: \"IFCPRODUCTSOFCOMBUSTIONPROPERTIES\",\n  2095639259: \"IFCPRODUCTREPRESENTATION\",\n  2417041796: \"IFCPRESENTATIONSTYLEASSIGNMENT\",\n  3119450353: \"IFCPRESENTATIONSTYLE\",\n  1304840413: \"IFCPRESENTATIONLAYERWITHSTYLE\",\n  2022622350: \"IFCPRESENTATIONLAYERASSIGNMENT\",\n  1775413392: \"IFCPREDEFINEDTEXTFONT\",\n  3213052703: \"IFCPREDEFINEDTERMINATORSYMBOL\",\n  990879717: \"IFCPREDEFINEDSYMBOL\",\n  3727388367: \"IFCPREDEFINEDITEM\",\n  3355820592: \"IFCPOSTALADDRESS\",\n  2226359599: \"IFCPHYSICALSIMPLEQUANTITY\",\n  2483315170: \"IFCPHYSICALQUANTITY\",\n  101040310: \"IFCPERSONANDORGANIZATION\",\n  2077209135: \"IFCPERSON\",\n  1207048766: \"IFCOWNERHISTORY\",\n  1411181986: \"IFCORGANIZATIONRELATIONSHIP\",\n  4251960020: \"IFCORGANIZATION\",\n  1227763645: \"IFCOPTICALMATERIALPROPERTIES\",\n  2251480897: \"IFCOBJECTIVE\",\n  3701648758: \"IFCOBJECTPLACEMENT\",\n  1918398963: \"IFCNAMEDUNIT\",\n  2706619895: \"IFCMONETARYUNIT\",\n  3368373690: \"IFCMETRIC\",\n  677618848: \"IFCMECHANICALSTEELMATERIALPROPERTIES\",\n  4256014907: \"IFCMECHANICALMATERIALPROPERTIES\",\n  2597039031: \"IFCMEASUREWITHUNIT\",\n  3265635763: \"IFCMATERIALPROPERTIES\",\n  2199411900: \"IFCMATERIALLIST\",\n  1303795690: \"IFCMATERIALLAYERSETUSAGE\",\n  3303938423: \"IFCMATERIALLAYERSET\",\n  248100487: \"IFCMATERIALLAYER\",\n  1847130766: \"IFCMATERIALCLASSIFICATIONRELATIONSHIP\",\n  1838606355: \"IFCMATERIAL\",\n  30780891: \"IFCLOCALTIME\",\n  1566485204: \"IFCLIGHTINTENSITYDISTRIBUTION\",\n  4162380809: \"IFCLIGHTDISTRIBUTIONDATA\",\n  3452421091: \"IFCLIBRARYREFERENCE\",\n  2655187982: \"IFCLIBRARYINFORMATION\",\n  3020489413: \"IFCIRREGULARTIMESERIESVALUE\",\n  852622518: \"IFCGRIDAXIS\",\n  3548104201: \"IFCEXTERNALLYDEFINEDTEXTFONT\",\n  3207319532: \"IFCEXTERNALLYDEFINEDSYMBOL\",\n  1040185647: \"IFCEXTERNALLYDEFINEDSURFACESTYLE\",\n  2242383968: \"IFCEXTERNALLYDEFINEDHATCHSTYLE\",\n  3200245327: \"IFCEXTERNALREFERENCE\",\n  1648886627: \"IFCENVIRONMENTALIMPACTVALUE\",\n  3796139169: \"IFCDRAUGHTINGCALLOUTRELATIONSHIP\",\n  770865208: \"IFCDOCUMENTINFORMATIONRELATIONSHIP\",\n  1154170062: \"IFCDOCUMENTINFORMATION\",\n  1376555844: \"IFCDOCUMENTELECTRONICFORMAT\",\n  2949456006: \"IFCDIMENSIONALEXPONENTS\",\n  1045800335: \"IFCDERIVEDUNITELEMENT\",\n  1765591967: \"IFCDERIVEDUNIT\",\n  1072939445: \"IFCDATEANDTIME\",\n  3510044353: \"IFCCURVESTYLEFONTPATTERN\",\n  2367409068: \"IFCCURVESTYLEFONTANDSCALING\",\n  1105321065: \"IFCCURVESTYLEFONT\",\n  539742890: \"IFCCURRENCYRELATIONSHIP\",\n  602808272: \"IFCCOSTVALUE\",\n  1065062679: \"IFCCOORDINATEDUNIVERSALTIMEOFFSET\",\n  347226245: \"IFCCONSTRAINTRELATIONSHIP\",\n  613356794: \"IFCCONSTRAINTCLASSIFICATIONRELATIONSHIP\",\n  1658513725: \"IFCCONSTRAINTAGGREGATIONRELATIONSHIP\",\n  1959218052: \"IFCCONSTRAINT\",\n  2732653382: \"IFCCONNECTIONSURFACEGEOMETRY\",\n  4257277454: \"IFCCONNECTIONPORTGEOMETRY\",\n  2614616156: \"IFCCONNECTIONPOINTGEOMETRY\",\n  2859738748: \"IFCCONNECTIONGEOMETRY\",\n  3264961684: \"IFCCOLOURSPECIFICATION\",\n  3639012971: \"IFCCLASSIFICATIONNOTATIONFACET\",\n  938368621: \"IFCCLASSIFICATIONNOTATION\",\n  1098599126: \"IFCCLASSIFICATIONITEMRELATIONSHIP\",\n  1767535486: \"IFCCLASSIFICATIONITEM\",\n  747523909: \"IFCCLASSIFICATION\",\n  622194075: \"IFCCALENDARDATE\",\n  2069777674: \"IFCBOUNDARYNODECONDITIONWARPING\",\n  1387855156: \"IFCBOUNDARYNODECONDITION\",\n  3367102660: \"IFCBOUNDARYFACECONDITION\",\n  1560379544: \"IFCBOUNDARYEDGECONDITION\",\n  4037036970: \"IFCBOUNDARYCONDITION\",\n  3869604511: \"IFCAPPROVALRELATIONSHIP\",\n  390851274: \"IFCAPPROVALPROPERTYRELATIONSHIP\",\n  2080292479: \"IFCAPPROVALACTORRELATIONSHIP\",\n  130549933: \"IFCAPPROVAL\",\n  1110488051: \"IFCAPPLIEDVALUERELATIONSHIP\",\n  411424972: \"IFCAPPLIEDVALUE\",\n  639542469: \"IFCAPPLICATION\",\n  618182010: \"IFCADDRESS\",\n  3630933823: \"IFCACTORROLE\",\n  599546466: \"FILE_DESCRIPTION\",\n  1390159747: \"FILE_NAME\",\n  1109904537: \"FILE_SCHEMA\"\n};\nclass Kt {\n  static async getUnits(s) {\n    var n, r, a;\n    const { IFCUNITASSIGNMENT: t } = x, e = await s.getAllPropertiesOfType(t);\n    if (!e)\n      return 1;\n    const i = Object.keys(e), o = e[parseInt(i[0], 10)];\n    for (const c of o.Units) {\n      if (c.value === void 0 || c.value === null)\n        continue;\n      const h = await s.getProperties(c.value);\n      if (!h || !h.UnitType || !h.UnitType.value || h.UnitType.value !== \"LENGTHUNIT\")\n        continue;\n      let E = 1, u = 1;\n      return h.Name.value === \"METRE\" && (u = 1), h.Name.value === \"FOOT\" && (u = 0.3048), ((n = h.Prefix) == null ? void 0 : n.value) === \"MILLI\" ? E = 1e-3 : ((r = h.Prefix) == null ? void 0 : r.value) === \"CENTI\" ? E = 0.01 : ((a = h.Prefix) == null ? void 0 : a.value) === \"DECI\" && (E = 0.1), u * E;\n    }\n    return 1;\n  }\n  static async findItemByGuid(s, t) {\n    var i;\n    const e = s.getAllPropertiesIDs();\n    for (const o of e) {\n      const n = await s.getProperties(o);\n      if (n && ((i = n.GlobalId) == null ? void 0 : i.value) === t)\n        return n;\n    }\n    return null;\n  }\n  static async getRelationMap(s, t, e) {\n    var a;\n    const o = e ?? (async () => {\n    }), n = {}, r = s.getAllPropertiesIDs();\n    for (const c of r) {\n      const h = await s.getProperties(c);\n      if (!h)\n        continue;\n      const d = h.type === t, E = Object.keys(h).find(\n        (C) => C.startsWith(\"Relating\")\n      ), u = Object.keys(h).find(\n        (C) => C.startsWith(\"Related\")\n      );\n      if (!(d && E && u))\n        continue;\n      const f = await s.getProperties((a = h[E]) == null ? void 0 : a.value), T = h[u];\n      if (!f || !T || !(T && Array.isArray(T)))\n        continue;\n      const R = T.map((C) => C.value);\n      await o(f.expressID, R), n[f.expressID] = R;\n    }\n    return n;\n  }\n  static async getQsetQuantities(s, t, e) {\n    const o = e ?? (() => {\n    }), n = await s.getProperties(t);\n    return !n || n.type !== x.IFCELEMENTQUANTITY ? null : (n.Quantities ?? [{}]).map((c) => (c.value && o(c.value), c.value)).filter((c) => c !== null);\n  }\n  static async getPsetProps(s, t, e) {\n    const o = e ?? (() => {\n    }), n = await s.getProperties(t);\n    return !n || n.type !== x.IFCPROPERTYSET ? null : (n.HasProperties ?? [{}]).map((c) => (c.value && o(c.value), c.value)).filter((c) => c !== null);\n  }\n  static async getPsetRel(s, t) {\n    var r;\n    if (!await s.getProperties(t))\n      return null;\n    const i = await s.getAllPropertiesOfType(\n      x.IFCRELDEFINESBYPROPERTIES\n    );\n    if (!i)\n      return null;\n    const o = Object.values(i);\n    let n = null;\n    for (const a of o)\n      ((r = a.RelatingPropertyDefinition) == null ? void 0 : r.value) === t && (n = a.expressID);\n    return n;\n  }\n  static async getQsetRel(s, t) {\n    return Kt.getPsetRel(s, t);\n  }\n  static async getEntityName(s, t) {\n    var n;\n    const e = await s.getProperties(t);\n    if (!e)\n      return { key: null, name: null };\n    const i = Object.keys(e).find((r) => r.endsWith(\"Name\")) ?? null, o = i ? (n = e[i]) == null ? void 0 : n.value : null;\n    return { key: i, name: o };\n  }\n  static async getQuantityValue(s, t) {\n    const e = await s.getProperties(t);\n    if (!e)\n      return { key: null, value: null };\n    const i = Object.keys(e).find((n) => n.endsWith(\"Value\")) ?? null;\n    let o;\n    return i === null || e[i] === void 0 || e[i] === null ? o = null : o = e[i].value, { key: i, value: o };\n  }\n  static isRel(s) {\n    return Bn[s].startsWith(\"IFCREL\");\n  }\n  static async attributeExists(s, t, e) {\n    const i = await s.getProperties(t);\n    return i ? Object.keys(i).includes(e) : !1;\n  }\n  static async groupEntitiesByType(s, t) {\n    var i;\n    const e = /* @__PURE__ */ new Map();\n    for (const o of t) {\n      const n = await s.getProperties(o);\n      if (!n)\n        continue;\n      const r = n.type;\n      e.get(r) || e.set(r, /* @__PURE__ */ new Set()), (i = e.get(r)) == null || i.add(o);\n    }\n    return e;\n  }\n  // static getPropertyUnits(properties: IfcProperties, expressID: number) {\n  //   const entity = properties[expressID];\n  //   if (!entity) return null;\n  //   const propertyInstance =\n  //     entity instanceof WEBIFC.IFC2X3.IfcProperty ||\n  //     entity instanceof WEBIFC.IFC4.IfcProperty ||\n  //     entity instanceof WEBIFC.IFC4X3.IfcProperty;\n  //   if (!propertyInstance) return null;\n  //   const { key: valueKey } = IfcPropertiesUtils.getQuantityValue(\n  //     properties,\n  //     expressID\n  //   );\n  //   if (!valueKey) return null;\n  //   // @ts-ignore\n  //   const measureName = entity[valueKey].constructor.name as string;\n  //   const isMeasureAttribute = measureName.endsWith(\"Measure\");\n  //   if (!isMeasureAttribute) return null;\n  //   const measureType = measureName.slice(3, measureName.length - 7);\n  //   return propertyInstance;\n  // }\n}\nclass jr {\n  constructor() {\n    I(this, \"factor\", 1);\n    I(this, \"complement\", 1);\n  }\n  apply(s) {\n    const e = this.getScaleMatrix().multiply(s);\n    s.copy(e);\n  }\n  setUp(s) {\n    var o, n, r;\n    this.factor = 1;\n    const t = this.getLengthUnits(s);\n    if (!t)\n      return;\n    const e = t == null, i = t.Name === void 0 || t.Name === null;\n    e || i || (t.Name.value === \"FOOT\" && (this.factor = 0.3048), ((o = t.Prefix) == null ? void 0 : o.value) === \"MILLI\" ? this.complement = 1e-3 : ((n = t.Prefix) == null ? void 0 : n.value) === \"CENTI\" ? this.complement = 0.01 : ((r = t.Prefix) == null ? void 0 : r.value) === \"DECI\" && (this.complement = 0.01));\n  }\n  getLengthUnits(s) {\n    try {\n      const e = s.GetLineIDsWithType(\n        0,\n        x.IFCUNITASSIGNMENT\n      ).get(0), i = s.GetLine(0, e);\n      for (const o of i.Units) {\n        if (!o || o.value === null || o.value === void 0)\n          continue;\n        const n = s.GetLine(0, o.value);\n        if (n.UnitType && n.UnitType.value === \"LENGTHUNIT\")\n          return n;\n      }\n      return null;\n    } catch {\n      return console.log(\"Could not get units\"), null;\n    }\n  }\n  getScaleMatrix() {\n    const s = this.factor;\n    return new O.Matrix4().fromArray([\n      s,\n      0,\n      0,\n      0,\n      0,\n      s,\n      0,\n      0,\n      0,\n      0,\n      s,\n      0,\n      0,\n      0,\n      0,\n      1\n    ]);\n  }\n}\nclass Yn {\n  constructor() {\n    I(this, \"itemsByFloor\", {});\n    I(this, \"_units\", new jr());\n  }\n  // TODO: Maybe make this more flexible so that it also support more exotic spatial structures?\n  setUp(s) {\n    this._units.setUp(s), this.cleanUp();\n    try {\n      const t = s.GetLineIDsWithType(\n        0,\n        x.IFCRELCONTAINEDINSPATIALSTRUCTURE\n      ), e = /* @__PURE__ */ new Set(), i = s.GetLineIDsWithType(0, x.IFCSPACE);\n      for (let c = 0; c < i.size(); c++)\n        e.add(i.get(c));\n      const o = s.GetLineIDsWithType(0, x.IFCRELAGGREGATES), n = o.size();\n      for (let c = 0; c < n; c++) {\n        const h = o.get(c), d = s.GetLine(0, h);\n        if (!d || !d.RelatingObject || !d.RelatedObjects)\n          continue;\n        const E = d.RelatingObject.value, u = d.RelatedObjects;\n        for (const f of u) {\n          const T = f.value;\n          e.has(T) && (this.itemsByFloor[T] = E);\n        }\n      }\n      const r = {}, a = t.size();\n      for (let c = 0; c < a; c++) {\n        const h = t.get(c), d = s.GetLine(0, h);\n        if (!d || !d.RelatingStructure || !d.RelatedElements)\n          continue;\n        const E = d.RelatingStructure.value, u = d.RelatedElements;\n        if (e.has(E))\n          for (const f of u) {\n            r[E] || (r[E] = []);\n            const T = f.value;\n            r[E].push(T);\n          }\n        else\n          for (const f of u) {\n            const T = f.value;\n            this.itemsByFloor[T] = E;\n          }\n      }\n      for (const c in r) {\n        const h = this.itemsByFloor[c];\n        if (h !== void 0) {\n          const d = r[c];\n          for (const E of d)\n            this.itemsByFloor[E] = h;\n        }\n      }\n      for (let c = 0; c < n; c++) {\n        const h = o.get(c), d = s.GetLine(0, h);\n        if (!d || !d.RelatingObject || !d.RelatedObjects)\n          continue;\n        const E = d.RelatingObject.value, u = d.RelatedObjects;\n        for (const f of u) {\n          const T = f.value, R = this.itemsByFloor[E];\n          R !== void 0 && (this.itemsByFloor[T] = R);\n        }\n      }\n    } catch {\n      console.log(\"Could not get floors.\");\n    }\n  }\n  cleanUp() {\n    this.itemsByFloor = {};\n  }\n}\nclass yi {\n  constructor() {\n    /** Whether to extract the IFC properties into a JSON. */\n    I(this, \"includeProperties\", !0);\n    /**\n     * Generate the geometry for categories that are not included by default,\n     * like IFCSPACE.\n     */\n    I(this, \"optionalCategories\", [x.IFCSPACE]);\n    /** Whether to use the coordination data coming from the IFC files. */\n    I(this, \"coordinate\", !0);\n    /** Path of the WASM for [web-ifc](https://github.com/ThatOpen/engine_web-ifc). */\n    I(this, \"wasm\", {\n      path: \"\",\n      absolute: !1,\n      logLevel: x.LogLevel.LOG_LEVEL_OFF\n    });\n    /** List of categories that won't be converted to fragments. */\n    I(this, \"excludedCategories\", /* @__PURE__ */ new Set());\n    /** Whether to save the absolute location of all IFC items. */\n    I(this, \"saveLocations\", !1);\n    /** Loader settings for [web-ifc](https://github.com/ThatOpen/engine_web-ifc). */\n    I(this, \"webIfc\", {\n      COORDINATE_TO_ORIGIN: !0\n      // OPTIMIZE_PROFILES: true,\n    });\n    /**\n     * Whether to automatically set the path to the WASM file for [web-ifc](https://github.com/ThatOpen/engine_web-ifc).\n     * If set to true, the path will be set to the default path of the WASM file.\n     * If set to false, the path must be provided manually in the `wasm.path` property.\n     * Default value is true.\n     */\n    I(this, \"autoSetWasm\", !0);\n    /**\n     * Custom function to handle the file location for [web-ifc](https://github.com/ThatOpen/engine_web-ifc).\n     * This function will be called when [web-ifc](https://github.com/ThatOpen/engine_web-ifc) needs to locate a file.\n     * If set to null, the default file location handler will be used.\n     *\n     * @param url - The URL of the file to locate.\n     * @returns The absolute path of the file.\n     */\n    I(this, \"customLocateFileHandler\", null);\n  }\n}\nclass Vn {\n  constructor() {\n    I(this, \"defLineMat\", new O.LineBasicMaterial({ color: 16777215 }));\n  }\n  read(s) {\n    const t = s.GetAllAlignments(0), e = s.GetAllCrossSections2D(0), i = s.GetAllCrossSections3D(0), o = {\n      IfcAlignment: t,\n      IfcCrossSection2D: e,\n      IfcCrossSection3D: i\n    };\n    return this.get(o);\n  }\n  get(s) {\n    if (s.IfcAlignment) {\n      const t = /* @__PURE__ */ new Map();\n      for (const e of s.IfcAlignment) {\n        const i = new Vt.Alignment();\n        i.absolute = this.getCurves(e.curve3D, i), i.horizontal = this.getCurves(e.horizontal, i), i.vertical = this.getCurves(e.vertical, i), t.set(t.size, i);\n      }\n      return { alignments: t, coordinationMatrix: new O.Matrix4() };\n    }\n  }\n  getCurves(s, t) {\n    const e = [];\n    let i = 0;\n    for (const o of s) {\n      const n = {};\n      if (o.data)\n        for (const E of o.data) {\n          const [u, f] = E.split(\": \"), T = parseFloat(f);\n          n[u] = T || f;\n        }\n      const { points: r } = o, a = new Float32Array(r.length * 3);\n      for (let E = 0; E < r.length; E++) {\n        const { x: u, y: f, z: T } = r[E];\n        a[E * 3] = u, a[E * 3 + 1] = f, a[E * 3 + 2] = T || 0;\n      }\n      const c = new O.BufferAttribute(a, 3), h = new O.EdgesGeometry();\n      h.setAttribute(\"position\", c);\n      const d = new Vt.CurveMesh(\n        i,\n        n,\n        t,\n        h,\n        this.defLineMat\n      );\n      e.push(d.curve), i++;\n    }\n    return e;\n  }\n}\nclass Gn {\n  getNameInfo(s) {\n    var d;\n    const t = {}, { arguments: e } = s.GetHeaderLine(0, x.FILE_NAME) || {};\n    if (!e)\n      return t;\n    const [\n      i,\n      o,\n      n,\n      r,\n      a,\n      c,\n      h\n    ] = e;\n    if (i != null && i.value && (t.name = i.value), o != null && o.value && (t.creationDate = new Date(o.value)), n) {\n      t.author = {};\n      const [E, u] = n;\n      E != null && E.value && (t.author.name = E.value), u != null && u.value && (t.author.email = u.value);\n    }\n    return (d = r[0]) != null && d.value && (t.organization = r[0].value), a != null && a.value && (t.preprocessorVersion = a == null ? void 0 : a.value), c != null && c.value && (t.originatingSystem = c == null ? void 0 : c.value), h != null && h.value && (t.authorization = h == null ? void 0 : h.value), t;\n  }\n  getDescriptionInfo(s) {\n    var n;\n    const t = {}, { arguments: e } = s.GetHeaderLine(0, x.FILE_DESCRIPTION) || {};\n    if (!e)\n      return t;\n    const [i, o] = e;\n    if ((n = i[0]) != null && n.value) {\n      const r = i[0].value.match(/\\[([^\\]]+)\\]/);\n      r && r[1] && (t.viewDefinition = r[1]);\n    }\n    return o != null && o.value && (t.implementationLevel = o.value), t;\n  }\n}\nclass zn {\n  static get(s, t) {\n    const e = [\n      x.IFCPROJECT,\n      x.IFCSITE,\n      x.IFCBUILDING,\n      x.IFCBUILDINGSTOREY,\n      x.IFCSPACE,\n      x.IFCROAD,\n      x.IFCFACILITY,\n      x.IFCFACILITYPART,\n      x.IFCBRIDGE\n    ], i = s.data;\n    for (const o of e) {\n      const n = t.GetLineIDsWithType(0, o), r = n.size();\n      for (let a = 0; a < r; a++) {\n        const c = n.get(a);\n        i.has(c) || i.set(c, [[], [0, o]]);\n      }\n    }\n  }\n}\nconst Ge = class Ge extends et {\n  constructor(t) {\n    super(t);\n    /** {@link Disposable.onDisposed} */\n    I(this, \"onDisposed\", new D());\n    /**\n     * An event triggered when the IFC file starts loading.\n     */\n    I(this, \"onIfcStartedLoading\", new D());\n    /**\n     * An event triggered when the setup process is completed.\n     */\n    I(this, \"onSetup\", new D());\n    /**\n     * The settings for the IfcLoader.\n     * It includes options for excluding categories, setting WASM paths, and more.\n     */\n    I(this, \"settings\", new yi());\n    /**\n     * The instance of the Web-IFC library used for handling IFC data.\n     */\n    I(this, \"webIfc\", new x.IfcAPI());\n    /** {@link Component.enabled} */\n    I(this, \"enabled\", !0);\n    I(this, \"_material\", new O.MeshLambertMaterial());\n    I(this, \"_spatialTree\", new Yn());\n    I(this, \"_metaData\", new Gn());\n    I(this, \"_fragmentInstances\", /* @__PURE__ */ new Map());\n    I(this, \"_civil\", new Vn());\n    I(this, \"_visitedFragments\", /* @__PURE__ */ new Map());\n    I(this, \"_materialT\", new O.MeshLambertMaterial({\n      transparent: !0,\n      opacity: 0.5\n    }));\n    this.components.add(Ge.uuid, this), this.settings.excludedCategories.add(x.IFCOPENINGELEMENT);\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    this.webIfc = null, this.onDisposed.trigger(Ge.uuid), this.onDisposed.reset();\n  }\n  /**\n   * Sets up the IfcLoader component with the provided configuration.\n   *\n   * @param config - Optional configuration settings for the IfcLoader.\n   * If not provided, the existing settings will be used.\n   *\n   * @returns A Promise that resolves when the setup process is completed.\n   *\n   * @remarks\n   * If the `autoSetWasm` option is enabled in the configuration,\n   * the method will automatically set the WASM paths for the Web-IFC library.\n   *\n   * @example\n   * ```typescript\n   * const ifcLoader = new IfcLoader(components);\n   * await ifcLoader.setup({ autoSetWasm: true });\n   * ```\n   */\n  async setup(t) {\n    this.settings = { ...this.settings, ...t }, this.settings.autoSetWasm && await this.autoSetWasm(), this.onSetup.trigger();\n  }\n  /**\n   * Loads an IFC file and processes it for 3D visualization.\n   *\n   * @param data - The Uint8Array containing the IFC file data.\n   * @param coordinate - Optional boolean indicating whether to coordinate the loaded IFC data. Default is true.\n   *\n   * @returns A Promise that resolves to the FragmentsGroup containing the loaded and processed IFC data.\n   *\n   * @example\n   * ```typescript\n   * const ifcLoader = components.get(IfcLoader);\n   * const group = await ifcLoader.load(ifcData);\n   * ```\n   */\n  async load(t, e = !0) {\n    const i = performance.now();\n    this.onIfcStartedLoading.trigger(), await this.readIfcFile(t);\n    const o = await this.getAllGeometries(), r = await this.components.get(mi).export(this.webIfc, 0);\n    o.setLocalProperties(r);\n    const a = this.components.get(ht);\n    a.groups.set(o.uuid, o);\n    for (const c of o.items)\n      a.list.set(c.id, c), c.mesh.uuid = c.id, c.group = o;\n    a.onFragmentsLoaded.trigger(o), e && a.coordinate([o]);\n    for (const [c] of o.data) {\n      const h = r[c];\n      if (!h || !h.GlobalId)\n        continue;\n      const d = h.GlobalId.value || h.GlobalId;\n      o.globalToExpressIDs.set(d, c);\n    }\n    return zn.get(o, this.webIfc), this.cleanUp(), console.log(`Streaming the IFC took ${performance.now() - i} ms!`), o;\n  }\n  /**\n   * Reads an IFC file and initializes the Web-IFC library.\n   *\n   * @param data - The Uint8Array containing the IFC file data.\n   *\n   * @returns A Promise that resolves when the IFC file is opened and initialized.\n   *\n   * @remarks\n   * This method sets the WASM path and initializes the Web-IFC library based on the provided settings.\n   * It also opens the IFC model using the provided data and settings.\n   *\n   * @example\n   * ```typescript\n   * const ifcLoader = components.get(IfcLoader);\n   * await ifcLoader.readIfcFile(ifcData);\n   * ```\n   */\n  async readIfcFile(t) {\n    const { path: e, absolute: i, logLevel: o } = this.settings.wasm;\n    return this.webIfc.SetWasmPath(e, i), await this.webIfc.Init(), o && this.webIfc.SetLogLevel(o), this.webIfc.OpenModel(t, this.settings.webIfc);\n  }\n  /**\n   * Cleans up the IfcLoader component by resetting the Web-IFC library,\n   * clearing the visited fragments and fragment instances maps, and creating a new instance of the Web-IFC library.\n   *\n   * @remarks\n   * This method is called automatically after using the .load() method, so usually you don't need to use it manually.\n   *\n   * @example\n   * ```typescript\n   * const ifcLoader = components.get(IfcLoader);\n   * ifcLoader.cleanUp();\n   * ```\n   */\n  cleanUp() {\n    this.webIfc.Dispose(), this.webIfc = null, this.webIfc = new x.IfcAPI(), this._visitedFragments.clear(), this._fragmentInstances.clear();\n  }\n  async getAllGeometries() {\n    this._spatialTree.setUp(this.webIfc);\n    const t = this.webIfc.GetIfcEntityList(0), e = new Vt.FragmentsGroup();\n    e.ifcMetadata = {\n      name: \"\",\n      description: \"\",\n      ...this._metaData.getNameInfo(this.webIfc),\n      ...this._metaData.getDescriptionInfo(this.webIfc),\n      schema: this.webIfc.GetModelSchema(0) || \"IFC2X3\",\n      maxExpressID: this.webIfc.GetMaxExpressID(0)\n    };\n    const i = [];\n    for (const n of t) {\n      if (!this.webIfc.IsIfcElement(n) && n !== x.IFCSPACE || this.settings.excludedCategories.has(n))\n        continue;\n      const r = this.webIfc.GetLineIDsWithType(0, n), a = r.size();\n      for (let c = 0; c < a; c++) {\n        const h = r.get(c);\n        i.push(h);\n        const d = this._spatialTree.itemsByFloor[h] || 0;\n        e.data.set(h, [[], [d, n]]);\n      }\n    }\n    this._spatialTree.cleanUp(), this.webIfc.StreamMeshes(0, i, (n) => {\n      this.getMesh(n, e);\n    });\n    for (const n of this._visitedFragments) {\n      const { index: r, fragment: a } = n[1];\n      e.keyFragments.set(r, a.id);\n    }\n    for (const n of e.items) {\n      const r = this._fragmentInstances.get(n.id);\n      if (!r)\n        throw new Error(\"Fragment not found!\");\n      const a = [];\n      for (const [c, h] of r)\n        a.push(h);\n      n.add(a);\n    }\n    const o = this.webIfc.GetCoordinationMatrix(0);\n    return e.coordinationMatrix.fromArray(o), e.civilData = this._civil.read(this.webIfc), e;\n  }\n  getMesh(t, e) {\n    const i = t.geometries.size(), o = t.expressID;\n    for (let n = 0; n < i; n++) {\n      const r = t.geometries.get(n), { x: a, y: c, z: h, w: d } = r.color, E = d !== 1, { geometryExpressID: u } = r, f = `${u}-${E}`;\n      if (!this._visitedFragments.has(f)) {\n        const m = this.getGeometry(this.webIfc, u), g = E ? this._materialT : this._material, S = new Vt.Fragment(m, g, 1);\n        e.add(S.mesh), e.items.push(S);\n        const _ = this._visitedFragments.size;\n        this._visitedFragments.set(f, { index: _, fragment: S });\n      }\n      const T = new O.Color().setRGB(a, c, h, \"srgb\"), R = new O.Matrix4();\n      R.fromArray(r.flatTransformation);\n      const C = this._visitedFragments.get(f);\n      if (C === void 0)\n        throw new Error(\"Error getting geometry data for streaming!\");\n      const A = e.data.get(o);\n      if (!A)\n        throw new Error(\"Data not found!\");\n      A[0].push(C.index);\n      const { fragment: F } = C;\n      this._fragmentInstances.has(F.id) || this._fragmentInstances.set(F.id, /* @__PURE__ */ new Map());\n      const p = this._fragmentInstances.get(F.id);\n      if (!p)\n        throw new Error(\"Instances not found!\");\n      if (p.has(o)) {\n        const m = p.get(o);\n        if (!m)\n          throw new Error(\"Instance not found!\");\n        m.transforms.push(R), m.colors && m.colors.push(T);\n      } else\n        p.set(o, { id: o, transforms: [R], colors: [T] });\n    }\n  }\n  getGeometry(t, e) {\n    const i = t.GetGeometry(0, e), o = t.GetIndexArray(\n      i.GetIndexData(),\n      i.GetIndexDataSize()\n    ), n = t.GetVertexArray(\n      i.GetVertexData(),\n      i.GetVertexDataSize()\n    ), r = new Float32Array(n.length / 2), a = new Float32Array(n.length / 2);\n    for (let E = 0; E < n.length; E += 6)\n      r[E / 2] = n[E], r[E / 2 + 1] = n[E + 1], r[E / 2 + 2] = n[E + 2], a[E / 2] = n[E + 3], a[E / 2 + 1] = n[E + 4], a[E / 2 + 2] = n[E + 5];\n    const c = new O.BufferGeometry(), h = new O.BufferAttribute(r, 3), d = new O.BufferAttribute(a, 3);\n    return c.setAttribute(\"position\", h), c.setAttribute(\"normal\", d), c.setIndex(Array.from(o)), i.delete(), c;\n  }\n  async autoSetWasm() {\n    const t = await fetch(\n      `https://unpkg.com/@thatopen/components@${pi.release}/package.json`\n    );\n    if (!t.ok) {\n      console.warn(\n        \"Couldn't get openbim-components package.json. Set wasm settings manually.\"\n      );\n      return;\n    }\n    const e = await t.json();\n    if (!(\"web-ifc\" in e.peerDependencies))\n      console.warn(\n        \"Couldn't get web-ifc from peer dependencies in openbim-components. Set wasm settings manually.\"\n      );\n    else {\n      const i = e.peerDependencies[\"web-ifc\"];\n      this.settings.wasm.path = `https://unpkg.com/web-ifc@${i}/`, this.settings.wasm.absolute = !0;\n    }\n  }\n};\n/**\n * A unique identifier for the component.\n * This UUID is used to register the component within the Components system.\n */\nI(Ge, \"uuid\", \"a659add7-1418-4771-a0d6-7d4d438e4624\");\nlet Ri = Ge;\nconst Bt = class Bt extends et {\n  constructor(t) {\n    super(t);\n    /** {@link Disposable.onDisposed} */\n    I(this, \"onDisposed\", new D());\n    /**\n     * Event triggered when a file is requested for export.\n     */\n    I(this, \"onRequestFile\", new D());\n    /**\n     * ArrayBuffer containing the IFC data to be exported.\n     */\n    I(this, \"ifcToExport\", null);\n    /**\n     * Event triggered when an element is added to a Pset.\n     */\n    I(this, \"onElementToPset\", new D());\n    /**\n     * Event triggered when a property is added to a Pset.\n     */\n    I(this, \"onPropToPset\", new D());\n    /**\n     * Event triggered when a Pset is removed.\n     */\n    I(this, \"onPsetRemoved\", new D());\n    /**\n     * Event triggered when data in the model changes.\n     */\n    I(this, \"onDataChanged\", new D());\n    /**\n     * Configuration for the WebAssembly module.\n     */\n    I(this, \"wasm\", {\n      path: \"/\",\n      absolute: !1\n    });\n    /** {@link Component.enabled} */\n    I(this, \"enabled\", !0);\n    /**\n     * Map of attribute listeners.\n     */\n    I(this, \"attributeListeners\", {});\n    /**\n     * The currently selected model.\n     */\n    I(this, \"selectedModel\");\n    /**\n     * Map of changed entities in the model.\n     */\n    I(this, \"changeMap\", {});\n    this.components.add(Bt.uuid, this);\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    this.selectedModel = void 0, this.attributeListeners = {}, this.changeMap = {}, this.onElementToPset.reset(), this.onPropToPset.reset(), this.onPsetRemoved.reset(), this.onDataChanged.reset(), this.onDisposed.trigger(Bt.uuid), this.onDisposed.reset();\n  }\n  /**\n   * Static method to retrieve the IFC schema from a given model.\n   *\n   * @param model - The FragmentsGroup model from which to retrieve the IFC schema.\n   * @throws Will throw an error if the IFC schema is not found in the model.\n   * @returns The IFC schema associated with the given model.\n   */\n  static getIFCSchema(t) {\n    const e = t.ifcMetadata.schema;\n    if (!e)\n      throw new Error(\"IFC Schema not found\");\n    return e.startsWith(\"IFC2X3\") ? \"IFC2X3\" : e.startsWith(\"IFC4\") && e.replace(\"IFC4\", \"\") === \"\" ? \"IFC4\" : e.startsWith(\"IFC4X3\") ? \"IFC4X3\" : e;\n  }\n  /**\n   * Method to set properties data in the model.\n   *\n   * @param model - The FragmentsGroup model in which to set the properties.\n   * @param dataToSave - An array of objects representing the properties to be saved.\n   * Each object must have an `expressID` property, which is the express ID of the entity in the model.\n   * The rest of the properties will be set as the properties of the entity.\n   *\n   * @returns A promise that resolves when all the properties have been set.\n   *\n   * @throws Will throw an error if any of the `expressID` properties are missing in the `dataToSave` array.\n   */\n  async setData(t, ...e) {\n    for (const i of e) {\n      const o = i.expressID;\n      o && (await t.setProperties(o, i), this.registerChange(t, o));\n    }\n  }\n  /**\n   * Creates a new Property Set (Pset) in the given model.\n   *\n   * @param model - The FragmentsGroup model in which to create the Pset.\n   * @param name - The name of the Pset.\n   * @param description - (Optional) The description of the Pset.\n   *\n   * @returns A promise that resolves with an object containing the newly created Pset and its relation.\n   *\n   * @throws Will throw an error if the IFC schema is not found in the model.\n   * @throws Will throw an error if no OwnerHistory is found in the model.\n   */\n  async newPset(t, e, i) {\n    const o = Bt.getIFCSchema(t), { ownerHistoryHandle: n } = await this.getOwnerHistory(t), r = this.newGUID(t), a = new x[o].IfcLabel(e), c = i ? new x[o].IfcText(i) : null, h = new x[o].IfcPropertySet(\n      r,\n      n,\n      a,\n      c,\n      []\n    );\n    h.expressID = this.increaseMaxID(t);\n    const d = this.newGUID(t), E = new x[o].IfcRelDefinesByProperties(\n      d,\n      n,\n      null,\n      null,\n      [],\n      new x.Handle(h.expressID)\n    );\n    return E.expressID = this.increaseMaxID(t), await this.setData(t, h, E), { pset: h, rel: E };\n  }\n  /**\n   * Removes a Property Set (Pset) from the given model.\n   *\n   * @param model - The FragmentsGroup model from which to remove the Pset.\n   * @param psetID - The express IDs of the Psets to be removed.\n   *\n   * @returns A promise that resolves when all the Psets have been removed.\n   *\n   * @throws Will throw an error if any of the `expressID` properties are missing in the `psetID` array.\n   * @throws Will throw an error if the Pset to be removed is not of type `IFCPROPERTYSET`.\n   * @throws Will throw an error if no relation is found between the Pset and the model.\n   */\n  async removePset(t, ...e) {\n    for (const i of e) {\n      const o = await t.getProperties(i);\n      if ((o == null ? void 0 : o.type) !== x.IFCPROPERTYSET)\n        continue;\n      const n = await Kt.getPsetRel(t, i);\n      if (n && (await t.setProperties(n, null), this.registerChange(t, n)), o) {\n        for (const r of o.HasProperties)\n          await t.setProperties(r.value, null);\n        await t.setProperties(i, null), this.onPsetRemoved.trigger({ model: t, psetID: i }), this.registerChange(t, i);\n      }\n    }\n  }\n  /**\n   * Creates a new single-value property of type string in the given model.\n   *\n   * @param model - The FragmentsGroup model in which to create the property.\n   * @param type - The type of the property value. Must be a string property type.\n   * @param name - The name of the property.\n   * @param value - The value of the property. Must be a string.\n   *\n   * @returns The newly created single-value property.\n   *\n   * @throws Will throw an error if the IFC schema is not found in the model.\n   * @throws Will throw an error if no OwnerHistory is found in the model.\n   */\n  newSingleStringProperty(t, e, i, o) {\n    return this.newSingleProperty(t, e, i, o);\n  }\n  /**\n   * Creates a new single-value property of type numeric in the given model.\n   *\n   * @param model - The FragmentsGroup model in which to create the property.\n   * @param type - The type of the property value. Must be a numeric property type.\n   * @param name - The name of the property.\n   * @param value - The value of the property. Must be a number.\n   *\n   * @returns The newly created single-value property.\n   *\n   * @throws Will throw an error if the IFC schema is not found in the model.\n   * @throws Will throw an error if no OwnerHistory is found in the model.\n   */\n  newSingleNumericProperty(t, e, i, o) {\n    return this.newSingleProperty(t, e, i, o);\n  }\n  /**\n   * Creates a new single-value property of type boolean in the given model.\n   *\n   * @param model - The FragmentsGroup model in which to create the property.\n   * @param type - The type of the property value. Must be a boolean property type.\n   * @param name - The name of the property.\n   * @param value - The value of the property. Must be a boolean.\n   *\n   * @returns The newly created single-value property.\n   *\n   * @throws Will throw an error if the IFC schema is not found in the model.\n   * @throws Will throw an error if no OwnerHistory is found in the model.\n   */\n  newSingleBooleanProperty(t, e, i, o) {\n    return this.newSingleProperty(t, e, i, o);\n  }\n  /**\n   * Removes a property from a Property Set (Pset) in the given model.\n   *\n   * @param model - The FragmentsGroup model from which to remove the property.\n   * @param psetID - The express ID of the Pset from which to remove the property.\n   * @param propID - The express ID of the property to be removed.\n   *\n   * @returns A promise that resolves when the property has been removed.\n   *\n   * @throws Will throw an error if the Pset or the property to be removed are not found in the model.\n   * @throws Will throw an error if the Pset to be removed is not of type `IFCPROPERTYSET`.\n   */\n  async removePsetProp(t, e, i) {\n    const o = await t.getProperties(e), n = await t.getProperties(i);\n    !o || !n || o.type === x.IFCPROPERTYSET && n && (o.HasProperties = o.HasProperties.filter((r) => r.value !== i), await t.setProperties(i, null), this.registerChange(t, e, i));\n  }\n  async addElementToPset(t, e, ...i) {\n    const o = await Kt.getPsetRel(t, e);\n    if (!o)\n      return;\n    const n = await t.getProperties(o);\n    if (!n)\n      return;\n    for (const a of i) {\n      const c = new x.Handle(a);\n      n.RelatedObjects.push(c), this.onElementToPset.trigger({\n        model: t,\n        psetID: e,\n        elementID: a\n      });\n    }\n    this.registerChange(t, e);\n    const r = this.components.get(pe);\n    for (const a of i)\n      r.addEntityRelations(t, a, \"IsDefinedBy\", e);\n  }\n  /**\n   * Adds elements to a Property Set (Pset) in the given model.\n   *\n   * @param model - The FragmentsGroup model in which to add the elements.\n   * @param psetID - The express ID of the Pset to which to add the elements.\n   * @param elementID - The express IDs of the elements to be added.\n   *\n   * @returns A promise that resolves when all the elements have been added.\n   *\n   * @throws Will throw an error if the Pset or the elements to be added are not found in the model.\n   * @throws Will throw an error if the Pset to be added to is not of type `IFCPROPERTYSET`.\n   * @throws Will throw an error if no relation is found between the Pset and the model.\n   */\n  async addPropToPset(t, e, ...i) {\n    const o = await t.getProperties(e);\n    if (o) {\n      for (const n of i) {\n        if (o.HasProperties.includes(n))\n          continue;\n        const r = new x.Handle(n);\n        o.HasProperties.push(r), this.onPropToPset.trigger({ model: t, psetID: e, propID: n });\n      }\n      this.registerChange(t, e);\n    }\n  }\n  /**\n   * Saves the changes made to the model to a new IFC file.\n   *\n   * @param model - The FragmentsGroup model from which to save the changes.\n   * @param ifcToSaveOn - The Uint8Array representing the original IFC file.\n   *\n   * @returns A promise that resolves with the modified IFC data as a Uint8Array.\n   *\n   * @throws Will throw an error if any issues occur during the saving process.\n   */\n  async saveToIfc(t, e) {\n    const i = this.components.get(Ri), o = i.webIfc, n = await i.readIfcFile(e), r = this.changeMap[t.uuid] ?? [];\n    for (const c of r) {\n      const h = await t.getProperties(c);\n      if (h)\n        try {\n          o.WriteLine(n, h);\n        } catch {\n        }\n      else\n        try {\n          o.DeleteLine(n, c);\n        } catch {\n        }\n    }\n    const a = o.SaveModel(n);\n    return i.webIfc.CloseModel(n), i.cleanUp(), a;\n  }\n  /**\n   * Sets an attribute listener for a specific attribute of an entity in the model.\n   * The listener will trigger an event whenever the attribute's value changes.\n   *\n   * @param model - The FragmentsGroup model in which to set the attribute listener.\n   * @param expressID - The express ID of the entity for which to set the listener.\n   * @param attributeName - The name of the attribute for which to set the listener.\n   *\n   * @returns The event that will be triggered when the attribute's value changes.\n   *\n   * @throws Will throw an error if the entity with the given expressID doesn't exist.\n   * @throws Will throw an error if the attribute is an array or null, and it can't have a listener.\n   * @throws Will throw an error if the attribute has a badly defined handle.\n   */\n  async setAttributeListener(t, e, i) {\n    this.attributeListeners[t.uuid] || (this.attributeListeners[t.uuid] = {});\n    const o = this.attributeListeners[t.uuid][e] ? this.attributeListeners[t.uuid][e][i] : null;\n    if (o)\n      return o;\n    const n = await t.getProperties(e);\n    if (!n)\n      throw new Error(`Entity with expressID ${e} doesn't exists.`);\n    const r = n[i];\n    if (Array.isArray(r) || !r)\n      throw new Error(\n        `Attribute ${i} is array or null, and it can't have a listener.`\n      );\n    const a = r.value;\n    if (a === void 0 || a == null)\n      throw new Error(`Attribute ${i} has a badly defined handle.`);\n    const c = new D();\n    return Object.defineProperty(n[i], \"value\", {\n      get() {\n        return this._value;\n      },\n      async set(h) {\n        this._value = h, c.trigger(h);\n      }\n    }), n[i].value = a, this.attributeListeners[t.uuid][e] || (this.attributeListeners[t.uuid][e] = {}), this.attributeListeners[t.uuid][e][i] = c, c;\n  }\n  increaseMaxID(t) {\n    return t.ifcMetadata.maxExpressID++, t.ifcMetadata.maxExpressID;\n  }\n  newGUID(t) {\n    const e = Bt.getIFCSchema(t);\n    return new x[e].IfcGloballyUniqueId(ze.create());\n  }\n  async getOwnerHistory(t) {\n    const e = await t.getAllPropertiesOfType(\n      x.IFCOWNERHISTORY\n    );\n    if (!e)\n      throw new Error(\"No OwnerHistory was found.\");\n    const i = Object.keys(e).map((r) => parseInt(r, 10)), o = e[i[0]], n = new x.Handle(o.expressID);\n    return { ownerHistory: o, ownerHistoryHandle: n };\n  }\n  registerChange(t, ...e) {\n    this.changeMap[t.uuid] || (this.changeMap[t.uuid] = /* @__PURE__ */ new Set());\n    for (const i of e)\n      this.changeMap[t.uuid].add(i), this.onDataChanged.trigger({ model: t, expressID: i });\n  }\n  async newSingleProperty(t, e, i, o) {\n    const n = Bt.getIFCSchema(t), r = new x[n].IfcIdentifier(i), a = new x[n][e](o), c = new x[n].IfcPropertySingleValue(\n      r,\n      null,\n      a,\n      null\n    );\n    return c.expressID = this.increaseMaxID(t), await this.setData(t, c), c;\n  }\n};\n/**\n * A unique identifier for the component.\n * This UUID is used to register the component within the Components system.\n */\nI(Bt, \"uuid\", \"58c2d9f0-183c-48d6-a402-dfcf5b9a34df\");\nlet gn = Bt;\nconst ys = class ys extends et {\n  constructor(t) {\n    super(t);\n    /** {@link Component.enabled} */\n    I(this, \"enabled\", !0);\n    /**\n     * A map representing the classification systems.\n     * The key is the system name, and the value is an object representing the classes within the system.\n     */\n    I(this, \"list\", {});\n    /** {@link Disposable.onDisposed} */\n    I(this, \"onDisposed\", new D());\n    I(this, \"onFragmentsDisposed\", (t) => {\n      const { groupID: e, fragmentIDs: i } = t;\n      for (const o in this.list) {\n        const n = this.list[o], r = Object.keys(n);\n        if (r.includes(e))\n          delete n[e], Object.values(n).length === 0 && delete this.list[o];\n        else\n          for (const a of r) {\n            const c = n[a];\n            for (const h of i)\n              delete c.map[h];\n            Object.values(c).length === 0 && delete n[a];\n          }\n      }\n    });\n    t.add(ys.uuid, this), t.get(ht).onFragmentsDisposed.add(this.onFragmentsDisposed);\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    this.list = {}, this.components.get(ht).onFragmentsDisposed.remove(this.onFragmentsDisposed), this.onDisposed.trigger(), this.onDisposed.reset();\n  }\n  /**\n   * Removes a fragment from the classification based on its unique identifier (guid).\n   * This method iterates through all classification systems and classes, and deletes the fragment with the specified guid from the respective group.\n   *\n   * @param guid - The unique identifier of the fragment to be removed.\n   */\n  remove(t) {\n    for (const e in this.list) {\n      const i = this.list[e];\n      for (const o in i) {\n        const n = i[o];\n        delete n.map[t];\n      }\n    }\n  }\n  /**\n   * Finds and returns fragments based on the provided filter criteria.\n   * If no filter is provided, it returns all fragments.\n   *\n   * @param filter - An optional object containing filter criteria.\n   * The keys of the object represent the classification system names,\n   * and the values are arrays of class names to match.\n   *\n   * @returns A map of fragment GUIDs to their respective express IDs,\n   * where the express IDs are filtered based on the provided filter criteria.\n   *\n   * @throws Will throw an error if the fragments map is malformed.\n   */\n  find(t) {\n    const e = this.components.get(ht);\n    if (!t) {\n      const r = {};\n      for (const [a, c] of e.list)\n        r[a] = new Set(c.ids);\n      return r;\n    }\n    const i = Object.keys(t).length, o = {};\n    for (const r in t) {\n      const a = t[r];\n      if (!this.list[r]) {\n        console.warn(`Classification ${r} does not exist.`);\n        continue;\n      }\n      for (const c of a) {\n        const h = this.list[r][c];\n        if (h)\n          for (const d in h.map) {\n            o[d] || (o[d] = /* @__PURE__ */ new Map());\n            for (const E of h.map[d]) {\n              const u = o[d].get(E);\n              u === void 0 ? o[d].set(E, 1) : o[d].set(E, u + 1);\n            }\n          }\n      }\n    }\n    const n = {};\n    for (const r in o) {\n      const a = o[r];\n      for (const [c, h] of a) {\n        if (h === void 0)\n          throw new Error(\"Malformed fragments map!\");\n        h === i && (n[r] || (n[r] = /* @__PURE__ */ new Set()), n[r].add(c));\n      }\n    }\n    return n;\n  }\n  /**\n   * Classifies fragments based on their modelID.\n   *\n   * @param modelID - The unique identifier of the model to classify fragments by.\n   * @param group - The FragmentsGroup containing the fragments to be classified.\n   *\n   * @remarks\n   * This method iterates through the fragments in the provided group,\n   * and classifies them based on their modelID.\n   * The classification is stored in the `list.models` property,\n   * with the modelID as the key and a map of fragment IDs to their respective express IDs as the value.\n   *\n   */\n  byModel(t, e) {\n    this.list.models || (this.list.models = {});\n    const i = this.list.models;\n    i[t] || (i[t] = { map: {}, id: null, name: t });\n    const o = i[t];\n    for (const [n, r] of e.data) {\n      const a = r[0];\n      for (const c of a) {\n        const h = e.keyFragments.get(c);\n        h && (o.map[h] || (o.map[h] = /* @__PURE__ */ new Set()), o.map[h].add(n));\n      }\n    }\n  }\n  /**\n   * Classifies fragments based on their PredefinedType property.\n   *\n   * @param group - The FragmentsGroup containing the fragments to be classified.\n   *\n   * @remarks\n   * This method iterates through the properties of the fragments in the provided group,\n   * and classifies them based on their PredefinedType property.\n   * The classification is stored in the `list.predefinedTypes` property,\n   * with the PredefinedType as the key and a map of fragment IDs to their respective express IDs as the value.\n   *\n   * @throws Will throw an error if the fragment ID is not found.\n   */\n  async byPredefinedType(t) {\n    var o;\n    this.list.predefinedTypes || (this.list.predefinedTypes = {});\n    const e = this.list.predefinedTypes, i = t.getAllPropertiesIDs();\n    for (const n of i) {\n      const r = await t.getProperties(n);\n      if (!r)\n        continue;\n      const a = String((o = r.PredefinedType) == null ? void 0 : o.value).toUpperCase();\n      e[a] || (e[a] = {\n        map: {},\n        id: null,\n        name: a\n      });\n      const c = e[a];\n      for (const [h, d] of t.data) {\n        const E = d[0];\n        for (const u of E) {\n          const f = t.keyFragments.get(u);\n          if (!f)\n            throw new Error(\"Fragment ID not found!\");\n          c.map[f] || (c.map[f] = /* @__PURE__ */ new Set()), c.map[f].add(r.expressID);\n        }\n      }\n    }\n  }\n  /**\n   * Classifies fragments based on their entity type.\n   *\n   * @param group - The FragmentsGroup containing the fragments to be classified.\n   *\n   * @remarks\n   * This method iterates through the relations of the fragments in the provided group,\n   * and classifies them based on their entity type.\n   * The classification is stored in the `list.entities` property,\n   * with the entity type as the key and a map of fragment IDs to their respective express IDs as the value.\n   *\n   * @throws Will throw an error if the fragment ID is not found.\n   */\n  byEntity(t) {\n    this.list.entities || (this.list.entities = {});\n    for (const [e, i] of t.data) {\n      const n = i[1][1], r = Bn[n];\n      this.saveItem(t, \"entities\", r, e);\n    }\n  }\n  /**\n   * Classifies fragments based on a specific IFC relationship.\n   *\n   * @param group - The FragmentsGroup containing the fragments to be classified.\n   * @param ifcRel - The IFC relationship number to classify fragments by.\n   * @param systemName - The name of the classification system to store the classification.\n   *\n   * @remarks\n   * This method iterates through the relations of the fragments in the provided group,\n   * and classifies them based on the specified IFC relationship.\n   * The classification is stored in the `list` property under the specified system name,\n   * with the relationship name as the class name and a map of fragment IDs to their respective express IDs as the value.\n   *\n   * @throws Will throw an error if the fragment ID is not found or if the IFC relationship is not valid.\n   */\n  async byIfcRel(t, e, i) {\n    Kt.isRel(e) && await Kt.getRelationMap(\n      t,\n      e,\n      async (o, n) => {\n        const { name: r } = await Kt.getEntityName(\n          t,\n          o\n        );\n        for (const a of n)\n          this.saveItem(\n            t,\n            i,\n            r ?? \"NO REL NAME\",\n            a\n          );\n      }\n    );\n  }\n  /**\n   * Classifies fragments based on their spatial structure in the IFC model.\n   *\n   * @param model - The FragmentsGroup containing the fragments to be classified.\n   * @param config - The configuration for the classifier. It includes \"useProperties\", which is true by default\n   * (if false, the classification will use the expressIDs instead of the names), and \"isolate\", which will make\n   * the classifier just pick the WEBIFC categories provided.\n   *\n   * @remarks\n   * This method iterates through the relations of the fragments in the provided group,\n   * and classifies them based on their spatial structure in the IFC model.\n   * The classification is stored in the `list` property under the system name \"spatialStructures\",\n   * with the relationship name as the class name and a map of fragment IDs to their respective express IDs as the value.\n   *\n   * @throws Will throw an error if the fragment ID is not found or if the model relations do not exist.\n   */\n  async bySpatialStructure(t, e = {}) {\n    var c, h;\n    const i = this.components.get(pe), o = i.relationMaps[t.uuid];\n    if (!o)\n      throw new Error(\n        `Classifier: model relations of ${t.name || t.uuid} have to exists to group by spatial structure.`\n      );\n    const n = \"spatialStructures\", a = e.useProperties === void 0 || e.useProperties;\n    for (const [d] of o) {\n      if (e.isolate) {\n        const T = t.data.get(d);\n        if (!T)\n          continue;\n        const R = T[1][1];\n        if (R === void 0 || !e.isolate.has(R))\n          continue;\n      }\n      const E = i.getEntityRelations(\n        t,\n        d,\n        \"Decomposes\"\n      );\n      if (E)\n        for (const T of E) {\n          let R = T.toString();\n          if (a) {\n            const C = await t.getProperties(T);\n            if (!C)\n              continue;\n            R = (c = C.Name) == null ? void 0 : c.value;\n          }\n          this.saveItem(t, n, R, d, T);\n        }\n      const u = i.getEntityRelations(\n        t,\n        d,\n        \"ContainsElements\"\n      );\n      if (!u)\n        continue;\n      let f = d.toString();\n      if (a) {\n        const T = await t.getProperties(d);\n        if (!T)\n          continue;\n        f = (h = T.Name) == null ? void 0 : h.value;\n      }\n      for (const T of u) {\n        this.saveItem(t, n, f, T, d);\n        const R = i.getEntityRelations(\n          t,\n          Number(T),\n          \"IsDecomposedBy\"\n        );\n        if (R)\n          for (const C of R)\n            this.saveItem(t, n, f, C, d);\n      }\n    }\n  }\n  /**\n   * Sets the color of the specified fragments.\n   *\n   * @param items - A map of fragment IDs to their respective express IDs.\n   * @param color - The color to set for the fragments.\n   * @param override - A boolean indicating whether to override the existing color of the fragments.\n   *\n   * @remarks\n   * This method iterates through the provided fragment IDs, retrieves the corresponding fragments,\n   * and sets their color using the `setColor` method of the FragmentsGroup class.\n   *\n   * @throws Will throw an error if the fragment with the specified ID is not found.\n   */\n  setColor(t, e, i = !1) {\n    const o = this.components.get(ht);\n    for (const n in t) {\n      const r = o.list.get(n);\n      if (!r)\n        continue;\n      const a = t[n];\n      r.setColor(e, a, i);\n    }\n  }\n  /**\n   * Resets the color of the specified fragments to their original color.\n   *\n   * @param items - A map of fragment IDs to their respective express IDs.\n   *\n   * @remarks\n   * This method iterates through the provided fragment IDs, retrieves the corresponding fragments,\n   * and resets their color using the `resetColor` method of the FragmentsGroup class.\n   *\n   * @throws Will throw an error if the fragment with the specified ID is not found.\n   */\n  resetColor(t) {\n    const e = this.components.get(ht);\n    for (const i in t) {\n      const o = e.list.get(i);\n      if (!o)\n        continue;\n      const n = t[i];\n      o.resetColor(n);\n    }\n  }\n  saveItem(t, e, i, o, n = null) {\n    this.list[e] || (this.list[e] = {});\n    const r = t.data.get(o);\n    if (r)\n      for (const a of r[0]) {\n        const c = t.keyFragments.get(a);\n        if (c) {\n          const h = this.list[e];\n          h[i] || (h[i] = { map: {}, id: n, name: i }), h[i].map[c] || (h[i].map[c] = /* @__PURE__ */ new Set()), h[i].map[c].add(o);\n        }\n      }\n  }\n};\n/**\n * A unique identifier for the component.\n * This UUID is used to register the component within the Components system.\n */\nI(ys, \"uuid\", \"e25a7f3c-46c4-4a14-9d3d-5115f24ebeb7\");\nlet Ai = ys;\nconst Ls = class Ls extends et {\n  constructor(t) {\n    super(t);\n    /** {@link Disposable.onDisposed} */\n    I(this, \"onDisposed\", new D());\n    /** {@link Component.enabled} */\n    I(this, \"enabled\", !0);\n    /**\n     * The height of the explosion animation.\n     * This property determines the vertical distance by which fragments are moved during the explosion.\n     * Default value is 10.\n     */\n    I(this, \"height\", 10);\n    /**\n     * The group name used for the explosion animation.\n     * This property specifies the group of fragments that will be affected by the explosion.\n     * Default value is \"storeys\".\n     */\n    I(this, \"groupName\", \"spatialStructures\");\n    /**\n     * A set of strings representing the exploded items.\n     * This set is used to keep track of which items have been exploded.\n     */\n    I(this, \"list\", /* @__PURE__ */ new Set());\n    t.add(Ls.uuid, this);\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    this.list.clear(), this.onDisposed.trigger(), this.onDisposed.reset();\n  }\n  /**\n   * Sets the explosion state of the fragments.\n   *\n   * @param active - A boolean indicating whether to activate or deactivate the explosion.\n   *\n   * @remarks\n   * This method applies a vertical transformation to the fragments based on the `active` parameter.\n   * If `active` is true, the fragments are moved upwards by a distance determined by the `height` property.\n   * If `active` is false, the fragments are moved back to their original position.\n   *\n   * The method also keeps track of the exploded items using the `list` set.\n   *\n   * @throws Will throw an error if the `Classifier` or `FragmentsManager` components are not found in the `components` system.\n   */\n  set(t) {\n    if (!this.enabled)\n      return;\n    const e = this.components.get(Ai), i = this.components.get(ht), o = t ? 1 : -1;\n    let n = 0;\n    const r = e.list[this.groupName], a = new O.Matrix4();\n    for (const c in r) {\n      a.elements[13] = n * o * this.height;\n      for (const h in r[c].map) {\n        const d = i.list.get(h), E = c + h, u = this.list.has(E);\n        if (!d || t && u || !t && !u)\n          continue;\n        t ? this.list.add(E) : this.list.delete(E);\n        const f = r[c].map[h];\n        d.applyTransform(f, a), d.mesh.computeBoundingSphere(), d.mesh.computeBoundingBox();\n      }\n      n++;\n    }\n  }\n};\n/**\n * A unique identifier for the component.\n * This UUID is used to register the component within the Components system.\n */\nI(Ls, \"uuid\", \"d260618b-ce88-4c7d-826c-6debb91de3e2\");\nlet On = Ls;\nconst Ms = class Ms extends et {\n  constructor(t) {\n    super(t);\n    /** {@link Component.enabled} */\n    I(this, \"enabled\", !0);\n    this.components.add(Ms.uuid, this);\n  }\n  /**\n   * Sets the visibility of fragments within the 3D scene.\n   * If no `items` parameter is provided, all fragments will be set to the specified visibility.\n   * If `items` is provided, only the specified fragments will be affected.\n   *\n   * @param visible - The visibility state to set for the fragments.\n   * @param items - An optional map of fragment IDs and their corresponding sub-fragment IDs to be affected.\n   * If not provided, all fragments will be affected.\n   *\n   * @returns {void}\n   */\n  set(t, e) {\n    const i = this.components.get(ht);\n    if (!e) {\n      for (const [o, n] of i.list)\n        n && (n.setVisibility(t), this.updateCulledVisibility(n));\n      return;\n    }\n    for (const o in e) {\n      const n = e[o], r = i.list.get(o);\n      r && (r.setVisibility(t, n), this.updateCulledVisibility(r));\n    }\n  }\n  /**\n   * Isolates fragments within the 3D scene by hiding all other fragments and showing only the specified ones.\n   * It calls the `set` method twice: first to hide all fragments, and then to show only the specified ones.\n   *\n   * @param items - A map of fragment IDs and their corresponding sub-fragment IDs to be isolated.\n   * If not provided, all fragments will be isolated.\n   *\n   * @returns {void}\n   */\n  isolate(t) {\n    this.set(!1), this.set(!0, t);\n  }\n  updateCulledVisibility(t) {\n    const e = this.components.get(Ti);\n    for (const [i, o] of e.list) {\n      const n = o.colorMeshes.get(t.id);\n      n && (n.count = t.mesh.count);\n    }\n  }\n};\n/**\n * A unique identifier for the component.\n * This UUID is used to register the component within the Components system.\n */\nI(Ms, \"uuid\", \"dd9ccf2d-8a21-4821-b7f6-2949add16a29\");\nlet Sn = Ms;\nclass qr extends yi {\n  constructor() {\n    super(...arguments);\n    /**\n     * Minimum number of geometries to be streamed.\n     * Defaults to 10 geometries.\n     */\n    I(this, \"minGeometrySize\", 10);\n    /**\n     * Minimum amount of assets to be streamed.\n     * Defaults to 1000 assets.\n     */\n    I(this, \"minAssetsSize\", 1e3);\n  }\n}\nconst ws = class ws extends et {\n  constructor(t) {\n    super(t);\n    /**\n     * Event triggered when geometry is streamed.\n     * Contains the streamed geometry data and its buffer.\n     */\n    I(this, \"onGeometryStreamed\", new D());\n    /**\n     * Event triggered when assets are streamed.\n     * Contains the streamed assets.\n     */\n    I(this, \"onAssetStreamed\", new D());\n    /**\n     * Event triggered to indicate the progress of the streaming process.\n     * Contains the progress percentage.\n     */\n    I(this, \"onProgress\", new D());\n    /**\n     * Event triggered when the IFC file is loaded.\n     * Contains the loaded IFC file data.\n     */\n    I(this, \"onIfcLoaded\", new D());\n    /** {@link Disposable.onDisposed} */\n    I(this, \"onDisposed\", new D());\n    /**\n     * Settings for the IfcGeometryTiler.\n     */\n    I(this, \"settings\", new qr());\n    /** {@link Component.enabled} */\n    I(this, \"enabled\", !0);\n    /**\n     * The WebIFC API instance used for IFC file processing.\n     */\n    I(this, \"webIfc\", new x.IfcAPI());\n    I(this, \"_spatialTree\", new Yn());\n    I(this, \"_metaData\", new Gn());\n    I(this, \"_visitedGeometries\", /* @__PURE__ */ new Map());\n    I(this, \"_streamSerializer\", new Vt.StreamSerializer());\n    I(this, \"_geometries\", /* @__PURE__ */ new Map());\n    I(this, \"_geometryCount\", 0);\n    I(this, \"_civil\", new Vn());\n    I(this, \"_groupSerializer\", new Vt.Serializer());\n    I(this, \"_assets\", []);\n    I(this, \"_meshesWithHoles\", /* @__PURE__ */ new Set());\n    this.components.add(ws.uuid, this), this.settings.excludedCategories.add(x.IFCOPENINGELEMENT);\n  }\n  /** {@link Disposable.dispose} */\n  dispose() {\n    this.onIfcLoaded.reset(), this.onGeometryStreamed.reset(), this.onAssetStreamed.reset(), this.webIfc = null, this.onDisposed.trigger(), this.onDisposed.reset();\n  }\n  /**\n   * This method streams the IFC file from a given buffer.\n   *\n   * @param data - The Uint8Array containing the IFC file data.\n   * @returns A Promise that resolves when the streaming process is complete.\n   *\n   * @remarks\n   * This method cleans up any resources after the streaming process is complete.\n   *\n   * @example\n   * ```typescript\n   * const ifcData = await fetch('path/to/ifc/file.ifc');\n   * const rawBuffer = await response.arrayBuffer();\n   * const ifcBuffer = new Uint8Array(rawBuffer);\n   * await ifcGeometryTiler.streamFromBuffer(ifcBuffer);\n   * ```\n   */\n  async streamFromBuffer(t) {\n    await this.readIfcFile(t), await this.streamAllGeometries(), this.cleanUp();\n  }\n  /**\n   * This method streams the IFC file from a given callback.\n   *\n   * @param loadCallback - The callback function that will be used to load the IFC file.\n   * @returns A Promise that resolves when the streaming process is complete.\n   *\n   * @remarks\n   * This method cleans up any resources after the streaming process is complete.\n   *\n   */\n  async streamFromCallBack(t) {\n    await this.streamIfcFile(t), await this.streamAllGeometries(), this.cleanUp();\n  }\n  async readIfcFile(t) {\n    const { path: e, absolute: i, logLevel: o } = this.settings.wasm;\n    this.webIfc.SetWasmPath(e, i), await this.webIfc.Init(), o && this.webIfc.SetLogLevel(o), this.webIfc.OpenModel(t, this.settings.webIfc);\n  }\n  async streamIfcFile(t) {\n    const { path: e, absolute: i, logLevel: o } = this.settings.wasm;\n    this.webIfc.SetWasmPath(e, i), await this.webIfc.Init(), o && this.webIfc.SetLogLevel(o), this.webIfc.OpenModelFromCallback(t, this.settings.webIfc);\n  }\n  async streamAllGeometries() {\n    const { minGeometrySize: t, minAssetsSize: e } = this.settings;\n    this._spatialTree.setUp(this.webIfc);\n    const i = this.webIfc.GetIfcEntityList(0), o = [[]], n = new Vt.FragmentsGroup();\n    n.ifcMetadata = {\n      name: \"\",\n      description: \"\",\n      ...this._metaData.getNameInfo(this.webIfc),\n      ...this._metaData.getDescriptionInfo(this.webIfc),\n      schema: this.webIfc.GetModelSchema(0) || \"IFC2X3\",\n      maxExpressID: this.webIfc.GetMaxExpressID(0)\n    };\n    let r = 0, a = 0;\n    for (const T of i) {\n      if (!this.webIfc.IsIfcElement(T) && T !== x.IFCSPACE || this.settings.excludedCategories.has(T))\n        continue;\n      const R = this.webIfc.GetLineIDsWithType(0, T), C = R.size();\n      for (let A = 0; A < C; A++) {\n        r > t && (r = 0, a++, o.push([]));\n        const F = R.get(A);\n        o[a].push(F);\n        const p = this.webIfc.GetLine(0, F);\n        if (p.GlobalId) {\n          const g = (p == null ? void 0 : p.GlobalId.value) || (p == null ? void 0 : p.GlobalId);\n          n.globalToExpressIDs.set(g, F);\n        }\n        const m = this._spatialTree.itemsByFloor[F] || 0;\n        n.data.set(F, [[], [m, T]]), r++;\n      }\n    }\n    this._spatialTree.cleanUp();\n    let c = 0.01, h = 0;\n    for (const T of o) {\n      h++, this.webIfc.StreamMeshes(0, T, (C) => {\n        this.getMesh(this.webIfc, C, n);\n      }), this._geometryCount > t && await this.streamGeometries(), this._assets.length > e && await this.streamAssets();\n      const R = h / o.length;\n      R > c && (c += 0.01, c = Math.max(c, R), this.onProgress.trigger(Math.round(c * 100) / 100));\n    }\n    this._geometryCount && await this.streamGeometries(), this._assets.length && await this.streamAssets();\n    const { opaque: d, transparent: E } = n.geometryIDs;\n    for (const [T, { index: R, uuid: C }] of this._visitedGeometries)\n      n.keyFragments.set(R, C), (T > 1 ? d : E).set(T, R);\n    zn.get(n, this.webIfc);\n    const u = this.webIfc.GetCoordinationMatrix(0);\n    n.coordinationMatrix.fromArray(u), n.civilData = this._civil.read(this.webIfc);\n    const f = this._groupSerializer.export(n);\n    this.onIfcLoaded.trigger(f), n.dispose(!0);\n  }\n  cleanUp() {\n    this.webIfc.Dispose(), this.webIfc = null, this.webIfc = new x.IfcAPI(), this._visitedGeometries.clear(), this._geometries.clear(), this._assets = [], this._meshesWithHoles.clear();\n  }\n  getMesh(t, e, i) {\n    const o = e.geometries.size(), n = e.expressID, r = { id: n, geometries: [] };\n    for (let a = 0; a < o; a++) {\n      const c = e.geometries.get(a), h = c.geometryExpressID, d = c.color.w === 1 ? 1 : -1, E = h * d;\n      if (!this._visitedGeometries.has(E)) {\n        this._visitedGeometries.has(h) || this.getGeometry(t, h);\n        const m = this._visitedGeometries.size, g = O.MathUtils.generateUUID();\n        this._visitedGeometries.set(E, { uuid: g, index: m });\n      }\n      const u = this._visitedGeometries.get(E);\n      if (u === void 0)\n        throw new Error(\"Error getting geometry data for streaming!\");\n      const f = i.data.get(n);\n      if (!f)\n        throw new Error(\"Data not found!\");\n      f[0].push(u.index);\n      const { x: T, y: R, z: C, w: A } = c.color, F = [T, R, C, A], p = c.flatTransformation;\n      r.geometries.push({ color: F, geometryID: h, transformation: p });\n    }\n    this._assets.push(r);\n  }\n  getGeometry(t, e) {\n    const i = t.GetGeometry(0, e), o = t.GetIndexArray(\n      i.GetIndexData(),\n      i.GetIndexDataSize()\n    ), n = t.GetVertexArray(\n      i.GetVertexData(),\n      i.GetVertexDataSize()\n    ), r = new Float32Array(n.length / 2), a = new Float32Array(n.length / 2);\n    for (let u = 0; u < n.length; u += 6)\n      r[u / 2] = n[u], r[u / 2 + 1] = n[u + 1], r[u / 2 + 2] = n[u + 2], a[u / 2] = n[u + 3], a[u / 2 + 1] = n[u + 4], a[u / 2 + 2] = n[u + 5];\n    const c = mr(r), h = new Float32Array(c.transformation.elements), d = [c.center.x, c.center.y, c.center.z];\n    let E = !1;\n    for (let u = 0; u < r.length - 2; u += 3) {\n      const f = r[u], T = r[u + 1], R = r[u + 2], C = a[u], A = a[u + 1], F = a[u + 2];\n      if (Rr(d, [f, T, R], [C, A, F])) {\n        E = !0;\n        break;\n      }\n    }\n    this._geometries.set(e, {\n      position: r,\n      normal: a,\n      index: o,\n      boundingBox: h,\n      hasHoles: E\n    }), i.delete(), this._geometryCount++;\n  }\n  async streamAssets() {\n    await this.onAssetStreamed.trigger(this._assets), this._assets = null, this._assets = [];\n  }\n  async streamGeometries() {\n    let t = this._streamSerializer.export(this._geometries), e = {};\n    for (const [i, { boundingBox: o, hasHoles: n }] of this._geometries)\n      e[i] = { boundingBox: o, hasHoles: n };\n    this.onGeometryStreamed.trigger({ data: e, buffer: t }), e = null, t = null, this._geometries.clear(), this._geometryCount = 0;\n  }\n};\n/**\n * A unique identifier for the component.\n * This UUID is used to register the component within the Components system.\n */\nI(ws, \"uuid\", \"d9999a00-e1f5-4d3f-8cfe-c56e08609764\");\nlet _n = ws;\nclass Kr extends yi {\n  constructor() {\n    super(...arguments);\n    /**\n     * Amount of properties to be streamed.\n     * Defaults to 100 properties.\n     */\n    I(this, \"propertiesSize\", 100);\n  }\n}\nclass $r extends et {\n  constructor() {\n    super(...arguments);\n    /**\n     * An event that is triggered when properties are streamed from the IFC file.\n     * The event provides the type of the IFC entity and the corresponding data.\n     */\n    I(this, \"onPropertiesStreamed\", new Ts());\n    /**\n     * An event that is triggered to indicate the progress of the streaming process.\n     * The event provides a number between 0 and 1 representing the progress percentage.\n     */\n    I(this, \"onProgress\", new Ts());\n    /**\n     * An event that is triggered when indices are streamed from the IFC file.\n     * The event provides a map of indices, where the key is the entity type and the value is another map of indices.\n     */\n    I(this, \"onIndicesStreamed\", new Ts());\n    /** {@link Disposable.onDisposed} */\n    I(this, \"onDisposed\", new D());\n    /** {@link Component.enabled} */\n    I(this, \"enabled\", !0);\n    /**\n     * An instance of the PropertiesStreamingSettings class, which holds the settings for the streaming process.\n     */\n    I(this, \"settings\", new Kr());\n    /**\n     * An instance of the IfcAPI class from the Web-IFC library, which provides methods for reading and processing IFC data.\n     */\n    I(this, \"webIfc\", new x.IfcAPI());\n  }\n  /** {@link Disposable.dispose} */\n  async dispose() {\n    this.onIndicesStreamed.reset(), this.onPropertiesStreamed.reset(), this.webIfc = null, this.onDisposed.reset();\n  }\n  /**\n   * This method converts properties from an IFC file to tiles given its data as a Uint8Array.\n   *\n   * @param data - The Uint8Array containing the IFC file data.\n   * @returns A Promise that resolves when the streaming process is complete.\n   */\n  async streamFromBuffer(t) {\n    await this.readIfcFile(t), await this.streamAllProperties(), this.cleanUp();\n  }\n  /**\n   * This method converts properties from an IFC file to tiles using a given callback function to read the file.\n   *\n   * @param loadCallback - A callback function that loads the IFC file data.\n   * @returns A Promise that resolves when the streaming process is complete.\n   */\n  async streamFromCallBack(t) {\n    await this.streamIfcFile(t), await this.streamAllProperties(), this.cleanUp();\n  }\n  async readIfcFile(t) {\n    const { path: e, absolute: i, logLevel: o } = this.settings.wasm;\n    this.webIfc.SetWasmPath(e, i), await this.webIfc.Init(), o && this.webIfc.SetLogLevel(o), this.webIfc.OpenModel(t, this.settings.webIfc);\n  }\n  async streamIfcFile(t) {\n    const { path: e, absolute: i, logLevel: o } = this.settings.wasm;\n    this.webIfc.SetWasmPath(e, i), await this.webIfc.Init(), o && this.webIfc.SetLogLevel(o), this.webIfc.OpenModelFromCallback(t, this.settings.webIfc);\n  }\n  async streamAllProperties() {\n    const { propertiesSize: t } = this.settings, e = new Set(this.webIfc.GetIfcEntityList(0)), i = /* @__PURE__ */ new Set([\n      x.IFCPROJECT,\n      x.IFCSITE,\n      x.IFCBUILDING,\n      x.IFCBUILDINGSTOREY,\n      x.IFCSPACE\n    ]);\n    for (const c of i)\n      e.add(c);\n    let o = 0.01, n = 0;\n    for (const c of e) {\n      if (n++, vn.has(c))\n        continue;\n      const h = i.has(c), d = this.webIfc.GetLineIDsWithType(0, c), E = d.size();\n      let u = 0;\n      for (let T = 0; T < E - t; T += t) {\n        const R = {};\n        for (let C = 0; C < t; C++) {\n          u++;\n          const A = d.get(T + C);\n          try {\n            const F = this.webIfc.GetLine(0, A, h);\n            R[F.expressID] = F;\n          } catch {\n            console.log(`Could not get property: ${A}`);\n          }\n        }\n        await this.onPropertiesStreamed.trigger({ type: c, data: R });\n      }\n      if (u !== E) {\n        const T = {};\n        for (let R = u; R < E; R++) {\n          const C = d.get(R);\n          try {\n            const A = this.webIfc.GetLine(0, C, h);\n            T[A.expressID] = A;\n          } catch {\n            console.log(`Could not get property: ${C}`);\n          }\n        }\n        await this.onPropertiesStreamed.trigger({ type: c, data: T });\n      }\n      n / e.size > o && (o = Math.round(o * 100) / 100, await this.onProgress.trigger(o), o += 0.01);\n    }\n    await this.onProgress.trigger(1);\n    const a = await this.components.get(pe).processFromWebIfc(this.webIfc, 0);\n    await this.onIndicesStreamed.trigger(a);\n  }\n  cleanUp() {\n    this.webIfc.Dispose(), this.webIfc = null, this.webIfc = new x.IfcAPI();\n  }\n}\n/**\n * A unique identifier for the component.\n * This UUID is used to register the component within the Components system.\n */\nI($r, \"uuid\", \"88d2c89c-ce32-47d7-8cb6-d51e4b311a0b\");\nconst Ds = class Ds extends et {\n  constructor(t) {\n    super(t);\n    /** {@link Component.enabled} */\n    I(this, \"enabled\", !0);\n    t.add(Ds.uuid, this);\n  }\n  /**\n   * Utility method to calculate the distance from a point to a line segment.\n   *\n   * @param point - The point from which to calculate the distance.\n   * @param lineStart - The start point of the line segment.\n   * @param lineEnd - The end point of the line segment.\n   * @param clamp - If true, the distance will be clamped to the line segment's length.\n   * @returns The distance from the point to the line segment.\n   */\n  static distanceFromPointToLine(t, e, i, o = !1) {\n    const n = new O.Line3(), r = new O.Vector3();\n    return n.set(e, i), n.closestPointToPoint(t, o, r), r.distanceTo(t);\n  }\n  /**\n   * Method to get the face of a mesh that contains a given triangle index.\n   * It also returns the edges of the found face and their indices.\n   *\n   * @param mesh - The mesh to get the face from. It must be indexed.\n   * @param triangleIndex - The index of the triangle within the mesh.\n   * @param instance - The instance of the mesh (optional).\n   * @returns An object containing the edges of the found face and their indices, or null if no face was found.\n   */\n  getFace(t, e, i) {\n    if (!t.geometry.index)\n      throw new Error(\"Geometry must be indexed!\");\n    const o = /* @__PURE__ */ new Map(), n = t.geometry.index.array, { plane: r } = this.getFaceData(\n      e,\n      i,\n      t\n    ), a = [];\n    for (let E = 0; E < n.length / 3; E++) {\n      const { plane: u, edges: f } = this.getFaceData(E, i, t);\n      if (u.equals(r)) {\n        a.push({ index: E, edges: f });\n        for (const { id: T, points: R, distance: C } of f)\n          o.set(T, { points: R, distance: C });\n      }\n    }\n    let c = 0;\n    const h = /* @__PURE__ */ new Map(), d = /* @__PURE__ */ new Map();\n    for (const { index: E, edges: u } of a) {\n      const f = /* @__PURE__ */ new Map();\n      for (const { id: m } of u)\n        if (h.has(m)) {\n          const g = h.get(m);\n          f.set(m, g);\n        }\n      const T = u.map((m) => m.id);\n      if (!f.size) {\n        const m = c++;\n        for (const { id: g } of u)\n          h.set(g, m);\n        d.set(m, {\n          edges: new Set(T),\n          indices: /* @__PURE__ */ new Set([E])\n        });\n        continue;\n      }\n      let R = null;\n      const C = /* @__PURE__ */ new Set(), A = new Set(T);\n      for (const [m, g] of f) {\n        R === null ? R = g : g !== R && C.add(g), h.delete(m);\n        const { edges: S } = d.get(g);\n        S.delete(m), A.delete(m);\n      }\n      if (R === null)\n        throw new Error(\"Error computing face!\");\n      const F = d.get(R), { indices: p } = F;\n      p.add(E);\n      for (const m of A) {\n        h.set(m, R);\n        const { edges: g } = F;\n        g.add(m);\n      }\n      for (const m of C) {\n        const g = d.get(m), { edges: S, indices: _ } = g, N = d.get(R), { edges: y, indices: w } = N;\n        for (const L of S)\n          y.add(L), h.set(L, R);\n        for (const L of _)\n          w.add(L);\n        d.delete(m);\n      }\n    }\n    for (const [E, { indices: u, edges: f }] of d)\n      if (u.has(e)) {\n        const T = [];\n        for (const R of f) {\n          const C = o.get(R);\n          T.push(C);\n        }\n        return { edges: T, indices: u };\n      }\n    return null;\n  }\n  /**\n   * Method to get the vertices and normal of a mesh face at a given index.\n   * It also applies instance transformation if provided.\n   *\n   * @param mesh - The mesh to get the face from. It must be indexed.\n   * @param faceIndex - The index of the face within the mesh.\n   * @param instance - The instance of the mesh (optional).\n   * @returns An object containing the vertices and normal of the face.\n   * @throws Will throw an error if the geometry is not indexed.\n   */\n  getVerticesAndNormal(t, e, i) {\n    if (!t.geometry.index)\n      throw new Error(\"Geometry must be indexed!\");\n    const o = t.geometry.index.array, n = t.geometry.attributes.position.array, r = t.geometry.attributes.normal.array, a = o[e * 3] * 3, c = o[e * 3 + 1] * 3, h = o[e * 3 + 2] * 3, d = new O.Vector3(n[a], n[a + 1], n[a + 2]), E = new O.Vector3(n[c], n[c + 1], n[c + 2]), u = new O.Vector3(n[h], n[h + 1], n[h + 2]), f = new O.Vector3(r[a], r[a + 1], r[a + 2]), T = new O.Vector3(r[c], r[c + 1], r[c + 2]), R = new O.Vector3(r[h], r[h + 1], r[h + 2]), C = (f.x + T.x + R.x) / 3, A = (f.y + T.y + R.y) / 3, F = (f.z + T.z + R.z) / 3, p = new O.Vector3(C, A, F);\n    if (i !== void 0 && t instanceof O.InstancedMesh) {\n      const m = new O.Matrix4();\n      t.getMatrixAt(i, m);\n      const g = new O.Matrix4();\n      g.extractRotation(m), p.applyMatrix4(g), d.applyMatrix4(m), E.applyMatrix4(m), u.applyMatrix4(m);\n    }\n    return { p1: d, p2: E, p3: u, faceNormal: p };\n  }\n  /**\n   * Method to round the vector's components to a specified number of decimal places.\n   * This is used to ensure numerical precision in edge detection.\n   *\n   * @param vector - The vector to round.\n   * @returns The vector with rounded components.\n   */\n  round(t) {\n    t.x = Math.trunc(t.x * 1e3) / 1e3, t.y = Math.trunc(t.y * 1e3) / 1e3, t.z = Math.trunc(t.z * 1e3) / 1e3;\n  }\n  /**\n   * Calculates the volume of a set of fragments.\n   *\n   * @param frags - A map of fragment IDs to their corresponding item IDs.\n   * @returns The total volume of the fragments and the bounding sphere.\n   *\n   * @remarks\n   * This method creates a set of instanced meshes from the given fragments and item IDs.\n   * It then calculates the volume of each mesh and returns the total volume and its bounding sphere.\n   *\n   * @throws Will throw an error if the geometry of the meshes is not indexed.\n   * @throws Will throw an error if the fragment manager is not available.\n   */\n  getVolumeFromFragments(t) {\n    const e = this.components.get(ht), i = new O.Matrix4(), o = [];\n    for (const r in t) {\n      const a = e.list.get(r);\n      if (!a)\n        continue;\n      const c = t[r];\n      let h = 0;\n      for (const u of c) {\n        const f = a.getInstancesIDs(u);\n        f && (h += f.size);\n      }\n      const d = new O.InstancedMesh(\n        a.mesh.geometry,\n        void 0,\n        h\n      );\n      let E = 0;\n      for (const u of c) {\n        const f = a.getInstancesIDs(u);\n        if (f)\n          for (const T of f)\n            a.mesh.getMatrixAt(T, i), d.setMatrixAt(E++, i);\n      }\n      o.push(d);\n    }\n    const n = this.getVolumeFromMeshes(o);\n    for (const r of o)\n      r.geometry = null, r.material = [], r.dispose();\n    return n;\n  }\n  /**\n   * Calculates the total volume of a set of meshes.\n   *\n   * @param meshes - An array of meshes or instanced meshes to calculate the volume from.\n   * @returns The total volume of the meshes and the bounding sphere.\n   *\n   * @remarks\n   * This method calculates the volume of each mesh in the provided array and returns the total volume\n   * and its bounding sphere.\n   *\n   */\n  getVolumeFromMeshes(t) {\n    let e = 0;\n    for (const i of t)\n      e += this.getVolumeOfMesh(i);\n    return e;\n  }\n  getFaceData(t, e, i) {\n    const o = this.getVerticesAndNormal(i, t, e), { p1: n, p2: r, p3: a, faceNormal: c } = o;\n    this.round(n), this.round(r), this.round(a), this.round(c);\n    const h = [\n      { id: `${n.x}|${n.y}|${n.z}`, value: n },\n      { id: `${r.x}|${r.y}|${r.z}`, value: r },\n      { id: `${a.x}|${a.y}|${a.z}`, value: a }\n    ];\n    h.sort((F, p) => F.id < p.id ? -1 : F.id > p.id ? 1 : 0);\n    const [\n      { id: d, value: E },\n      { id: u, value: f },\n      { id: T, value: R }\n    ] = h, C = [\n      {\n        id: `${d}|${u}`,\n        distance: E.distanceTo(f),\n        points: [E, f]\n      },\n      {\n        id: `${u}|${T}`,\n        distance: f.distanceTo(R),\n        points: [f, R]\n      },\n      {\n        id: `${d}|${T}`,\n        distance: E.distanceTo(R),\n        points: [E, R]\n      }\n    ], A = new O.Plane();\n    return A.setFromNormalAndCoplanarPoint(c, n), A.constant = Math.round(A.constant * 10) / 10, { plane: A, edges: C };\n  }\n  // https://stackoverflow.com/a/1568551\n  getVolumeOfMesh(t) {\n    let e = 0;\n    const i = new O.Vector3(), o = new O.Vector3(), n = new O.Vector3(), { index: r } = t.geometry, a = t.geometry.attributes.position.array;\n    if (!r)\n      return console.warn(\"Geometry must be indexed to compute its volume!\"), 0;\n    const c = [];\n    if (t instanceof O.InstancedMesh)\n      for (let d = 0; d < t.count; d++) {\n        const E = new O.Matrix4();\n        t.getMatrixAt(d, E), c.push(E);\n      }\n    else\n      c.push(new O.Matrix4().identity());\n    const { matrixWorld: h } = t;\n    for (let d = 0; d < r.array.length - 2; d += 3)\n      for (const E of c) {\n        const u = E.multiply(h), f = r.array[d] * 3, T = r.array[d + 1] * 3, R = r.array[d + 2] * 3;\n        i.set(a[f], a[f + 1], a[f + 2]).applyMatrix4(u), o.set(a[T], a[T + 1], a[T + 2]).applyMatrix4(u), n.set(a[R], a[R + 1], a[R + 2]).applyMatrix4(u), e += this.getSignedVolumeOfTriangle(i, o, n);\n      }\n    return Math.abs(e);\n  }\n  getSignedVolumeOfTriangle(t, e, i) {\n    const o = i.x * e.y * t.z, n = e.x * i.y * t.z, r = i.x * t.y * e.z, a = t.x * i.y * e.z, c = e.x * t.y * i.z, h = t.x * e.y * i.z;\n    return 1 / 6 * (-o + n + r - a - c + h);\n  }\n};\n/**\n * A unique identifier for the component.\n * This UUID is used to register the component within the Components system.\n */\nI(Ds, \"uuid\", \"267ca032-672f-4cb0-afa9-d24e904f39d6\");\nlet Nn = Ds;\nexport {\n  Ts as AsyncEvent,\n  _i as Base,\n  cr as BaseCamera,\n  lr as BaseRenderer,\n  hr as BaseScene,\n  Ni as BaseWorldItem,\n  Fn as BoundingBoxer,\n  Ai as Classifier,\n  Rn as Clipper,\n  et as Component,\n  pi as Components,\n  Vr as CullerRenderer,\n  Ti as Cullers,\n  zt as Disposer,\n  D as Event,\n  On as Exploder,\n  Hr as FirstPersonMode,\n  ht as FragmentsManager,\n  vn as GeometryTypes,\n  dn as Grids,\n  Sn as Hider,\n  ra as IfcCategories,\n  Bn as IfcCategoryMap,\n  Qr as IfcElements,\n  yi as IfcFragmentSettings,\n  _n as IfcGeometryTiler,\n  mi as IfcJsonExporter,\n  Ri as IfcLoader,\n  gn as IfcPropertiesManager,\n  $r as IfcPropertiesTiler,\n  Kt as IfcPropertiesUtils,\n  pe as IfcRelationsIndexer,\n  qr as IfcStreamingSettings,\n  sn as MaterialsUtils,\n  Nn as MeasurementUtils,\n  Gr as MeshCullerRenderer,\n  zr as MiniMap,\n  An as MiniMaps,\n  Ar as Mouse,\n  Wr as OrbitMode,\n  oa as OrthoPerspectiveCamera,\n  kr as PlanMode,\n  Xr as ProjectionManager,\n  Kr as PropertiesStreamingSettings,\n  He as Raycasters,\n  We as SimpleCamera,\n  Pr as SimpleGrid,\n  Pi as SimplePlane,\n  Fr as SimpleRaycaster,\n  na as SimpleRenderer,\n  ia as SimpleScene,\n  gr as SimpleWorld,\n  ze as UUID,\n  sa as VertexPicker,\n  Ci as Worlds,\n  Rr as isPointInFrontOfPlane,\n  mr as obbFromPoints,\n  Yr as readPixelsAsync\n};\n"],
  "mappings": "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AA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,UAAU;AAAA,EACV,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,WAAW;AAAA,EACX,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AA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",
  "names": ["qe", "ve", "ke", "$", "Fs", "s", "gs", "t", "e", "i", "le", "Ee", "ln", "Os", "Ss", "fn", "Be", "Ye", "_s", "Ve", "Ns", "At", "Ps", "Ge", "Bt", "ys", "Ls", "Ms", "ws", "Ds"]
}
